<mxfile host="Electron" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/28.0.6 Chrome/138.0.7204.100 Electron/37.2.3 Safari/537.36" version="28.0.6" pages="5">
  <diagram id="oRm4vpurl4iFBMuVSFDV" name="apollo 9.0以上版本">
    <mxGraphModel dx="24051" dy="16226" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Uj3NwQmBANH0tiODKRmM-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PlanningComponent :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;public cyber::Component&amp;lt;prediction::PredictionObstacles, canbus::Chassis,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;localization::LocalizationEstimate&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;规划模块组件，总共需要订阅3个message，预测障碍物、底盘数据、定位信息&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;组件层，作用是系统集成、消息处理、组件生命周期管理&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=70;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5594" y="-1042.5" width="1300" height="1870" as="geometry" />
        </mxCell>
        <mxCell id="Uj3NwQmBANH0tiODKRmM-5" value="- injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射器，用于统一管理规划组件内的共享资源和状态&lt;div&gt;&lt;br&gt;&lt;div&gt;- config_：PlanningConfig&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;规划组件详细配置参数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- planning_base_ = nullptr：std::unique_ptr&amp;lt;PlanningBase&amp;gt; &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;规划模式，在类的初始化函数中确定使用何种规划模式，OnLanePlanning还是NaviPlanning&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- local_view_：LocalView &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划组件&lt;/span&gt;的本地视图成员，它包含了规划组件进行路径规划所需的所有输入数据，将来自不同模块的数据整合在一起，提供统一接口&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//用于实现组件在CyberRT内部通信的成员&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;- planning_command_reader_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;PlanningCommand&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;运动规划命令订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;- traffic_light_reader_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;perception::TrafficLightDetection&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;交通灯消息订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- pad_msg_reader_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;planning::PadMessage&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;行为控制命令订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- story_telling_reader_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;storytelling::Stories&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景故事消息订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;- control_interactive_reader_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;control::ControlInteractiveMsg&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;控制交互消息订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- relative_map_reader_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Reader&amp;lt;relative_map::MapMsg&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对地图消息订阅器，只有navi模式下才创建该订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- planning_writer_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Writer&amp;lt;ADCTrajectory&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划轨迹消息发布器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- rerouting_client_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;apollo::cyber::Client&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;apollo::external_command::LaneFollowCommand, apollo::external_command::CommandStatus&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;重新路由客户端，发送请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- planning_learning_data_writer_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Writer&amp;lt;PlanningLearningData&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;学习数据发布器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- command_status_writer_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Writer&amp;lt;external_command::CommandStatus&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;运动规划命令执行状态发布器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- rerouting_writer_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;cyber::Writer&amp;lt;routing::RoutingRequest&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;废弃&lt;/span&gt;？其功能被rerouting_client_替代&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//上面订阅器订阅的消息存储在规划组件内部&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- planning_command_&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;PlanningCommand&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- traffic_light_：&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;perception::TrafficLightDetection&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- pad_msg_&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;planning::PadMessage&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- stories_&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;storytelling::Stories&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- control_interactive_msg_&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;control::ControlInteractiveMsg&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- relative_map_&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;relative_map::MapMsg&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- routing_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;routing::RoutingResponse&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;废弃，订阅的路由结果，现在作为PlanningCommand中的属性合并发送&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;strike&gt;- message_process_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MessageProcess&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据处理器，为学习模式的规划算法提供支持，目前不关注&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//为什么要将多线程共享数据的读写操作做成原子的&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//比如在后台线程中对共享成员进行写操作，在主线程中进行读操作。对于普通的写操作，在计算机指令层级不是原子的，这是因为写入val时，先将val加载到寄存器，然后将寄存值存储到内存，如果在这两步中间主线程对共享数据进行了读取操作，会导致读取的不是最新的数值，并且写入操作中断可能导致寄存值不能存储到内存中，从而导致数据丢失；反过来如果期望先读后写，有可能导致主线程读到了非期望值。因此对于多线程共享成员一定要做到读写的原子化&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- mutex_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::mutex&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;上面的消息类成员&lt;/span&gt;作为多线程共享数据(后台线程中在订阅器的回调函数中写入，主线程组件运行函数Proc中读取拷贝到本地视图成员local_view_)，因此需要加锁保护&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Uj3NwQmBANH0tiODKRmM-1" vertex="1">
          <mxGeometry y="70" width="1300" height="700" as="geometry" />
        </mxCell>
        <mxCell id="Uj3NwQmBANH0tiODKRmM-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Uj3NwQmBANH0tiODKRmM-1" vertex="1">
          <mxGeometry y="770" width="1300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Uj3NwQmBANH0tiODKRmM-4" value="+&lt;span&gt;Init&lt;/span&gt;() override：bool&lt;div&gt;规划组件&lt;span style=&quot;background-color: initial;&quot;&gt;初始化函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.默认初始化依赖注射器injector_&lt;/span&gt;&lt;div&gt;&lt;div&gt;·.根据标定量FLAGS_use_navigation_mode决定实例化OnLanePlanning还是NaviPlanning来初始化&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning_base_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;NaviPlanning(导航规划)：主要用于导航模式，适合没有高精地图或只依赖导航路径的场景。&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;只能生成基于导航路径的简单轨迹，适合结构化道路、功能有限。&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;OnLanePlanning(车道级规划)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;主要用于标准的Apollo自动驾驶场景，依赖高精地图，能实现更精细的车道级路径规划和决策。&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;能处理变道、超车、避障、红绿灯等复杂场景，规划能力更强。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.调用组件基类成员函数ComponentBase::GetProtoConfig读取规划组件配置数据写入成员config_&lt;/div&gt;&lt;div&gt;&lt;strike&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果使用学习模式的规划算法，初始化数据处理器message_process_，调用其Init函数，目前不关注&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;·.调用成员planning_base_的Init()函数&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;·.创建各种订阅器、发布器、客户端成员。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;在订阅器中提供回调函数，当订阅器在通道中监听到有消息发布时后台线程中自动调用回调函数将监听到的消息拷贝到类内，由于回调函数在后台线程中对类内成员的写操作与主线程中的运行成员函数Proc对类内成员的读操作可能同时发生，因此在回调函数中要通过互斥锁成员mutex_将不同线程中的读和写操作原子化，保护数据安全&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+Proc(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;const std::shared_ptr&amp;lt;prediction::PredictionObstacles&amp;gt;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;prediction_obstacles,&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::shared_ptr&amp;lt;canbus::Chassis&amp;gt;&amp;amp; chassis,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;localization::LocalizationEstimate&amp;gt;&amp;amp;&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;localization_estimate&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)：bool&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;规划组件运行函数&lt;/div&gt;&lt;div&gt;·.调用成员函数CheckRerouting检查是否需要重新路由&lt;/div&gt;&lt;div&gt;·.将规划算法的输入存储到local_view_。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;对于来自于函数入参的规划输入，在cyberRT自动调用组件基类中的Process时已经保证在预测模块、控制模块、定位模块(不同的进程)中的写入操作与对入参指向对象的读取操作互斥(具体做法在cyberRT中可能跟后面要说的做法一致)，因此这里用普通赋值即可；对于来自于订阅器监听消息的规划输入，以PlanningCommand为例，如果local_view_中的指针直接指向消息成员planning_command_，由于LocalView中的数据会被多次使用，就会出现当有新的路由命令时回调函数更新planning_command_与此同时Proc函数继续执行，local_view_中变成了最新的数据，但前面的校验逻辑可能是基于旧数据通过的，此时就会出现错误，实际上我们希望local_view_中的存储的数据是每一帧开始Proc时所有输入的快照，因此将这时的planning_command_拷贝一份，让local_view_中的指针指向它就可以实现这个目的，这时主线程要拷贝读取planning_command_，后台线程回调函数中要写入planning_command_，因此这里要进行加锁保护&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.进行输入检查，调用成员函数CheckInput，检查如果不通过直接返回&lt;/div&gt;&lt;div&gt;·.&lt;strike style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果使用学习模式的规划算法，使用数据处理器成员message_process_进行在线训练数据处理，目前不关注&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;·.&lt;strike&gt;通过planning_learning_data_writer_发布学习数据帧到CyberRT，目前不关注&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;·.运行规划算法，创建正确的规划轨迹，调用成员planning_base_的RunOnce函数，完成对正常规划轨迹的填充&lt;/div&gt;&lt;div&gt;·.对规划轨迹添加帧头和自车定位信息，修正轨迹点的相对时间，最后通过成员planning_writer_发布规划轨迹到cyberRT&lt;/div&gt;&lt;div&gt;·.判断轨迹消息帧头是否有错误码，自车是否到达规划终点(调用成员planning_base_的成员函数IsPlanningFinished判断)，从而确定规划组件对运动规划命令的执行状态，通过成员command_status_writer_将规划执行状态发布到cyberRT&lt;/div&gt;&lt;div&gt;·.记录历史信息，将规划轨迹消息添加到依赖注射器injector_中的历史记录中&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- CheckRerouting()：void&lt;/div&gt;&lt;div&gt;重新路由检查函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从以来注射器injector_中的规划上下文中读取重新路由命令，如果不需要重新路由函数直接返回；&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;如果需要，通过客户端reroutint_client_将请求发出，外部请求处理组件ExternalCommandProcessComponent中对应的处理器中的服务端收到命令请求后其回调函数中会请求调用路由算法的运行函数，并把路由结果发布到CyberRT中，规划组件中的订阅器planning_command_reader_监听到管道中有消息发布其回调函数自动将管道中的路由结果拷贝到成&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;员planning_command_中，至此走完整条重新路由通信链路。客户端&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;reroutint_client_发出LaneFollow的外部指令后会返回外部指令处理器对该指令转化成内部指令PlanningCommand的处理状态，这里没有设置变量接收这个处理状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;最后将规划上下文中的路由请求标志位复位，检查函数完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- CheckInput()：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回值，true输入有效&lt;/div&gt;&lt;div&gt;输入检查函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;检查本地视图local_view_中的规划输入是否填充就绪，如果存在未填充，创建错误轨迹，并在错误轨迹上添加&quot;系统未就绪&quot;决策，并附带原因备注&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用函数SetLocation为错误轨迹添加自车定位信息，并发布错误轨迹到cyberRT&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果local_view_就绪，不进行错误轨迹发布，返回true以进行运行函数后面的步骤&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- SetLocation(ADCTrajectory* const ptr_trajectory_pb)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，轨迹&lt;/div&gt;&lt;/div&gt;&lt;div&gt;在输入轨迹中设置自车当前定位信息，包括自车当前位置点和所在车道左右边界点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;该函数在规划组件的运行函数中调用了两次，一次在输入检查时，此时输入的轨迹为错误轨迹，为错误轨迹添加自车定位信息；第二次调用是在planning_base_的RunOnce函数运行完之后，此时输入的轨迹为正常轨迹，为正常轨迹添加自车定位信息&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 0, 0);&quot;&gt;todo：确定frame中参考线的排列顺序才能知道第一条参考线是哪条，获取边界点所用的匹配点是在该参考线上获取&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Uj3NwQmBANH0tiODKRmM-1" vertex="1">
          <mxGeometry y="778" width="1300" height="942" as="geometry" />
        </mxCell>
        <mxCell id="TtpwxlLR1k9MMoQ5n5d5-6" value="-InputCheck(uint64_t* camera_time)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入数据检测函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;并将输入数据写入成员local_view_&lt;/span&gt;&lt;div&gt;通过gflags标定参数得到输入数据的topic的名称，通过中间件提供的方法函数可以将该topic对应的类(在proto中定义)实例化，并读取上游topic数据存储在其中&lt;/div&gt;&lt;div&gt;实例化的输入数据topic对象会对其进行检查并写入成员local_view_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Uj3NwQmBANH0tiODKRmM-1" vertex="1">
          <mxGeometry y="1720" width="1300" height="74" as="geometry" />
        </mxCell>
        <mxCell id="TtpwxlLR1k9MMoQ5n5d5-7" value="-set_output(ADCTrajectory* const planning_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储规划模块的输出&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;const HiPilotFsmOut&amp;gt;&amp;amp; hipilot_fsm)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;状态机信号，用于给算法输出是否有效增加状态标签，todo：具体含义需进一步整理&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;向输出pb中填充时间戳信息及状态机状态&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Uj3NwQmBANH0tiODKRmM-1" vertex="1">
          <mxGeometry y="1794" width="1300" height="76" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-10" value="对应的task配置&lt;div&gt;output/x86/common/proto/Planning/task_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11950" y="-9118.5" width="340" height="100" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-11" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3CqcE0QVlwRBPyvqDcSF-10" vertex="1">
          <mxGeometry y="40" width="340" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="3CqcE0QVlwRBPyvqDcSF-10" vertex="1">
          <mxGeometry y="66" width="340" height="8" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-13" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3CqcE0QVlwRBPyvqDcSF-10" vertex="1">
          <mxGeometry y="74" width="340" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9bKTA_h50N4fzPA81tmQ-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="3CqcE0QVlwRBPyvqDcSF-9" target="3CqcE0QVlwRBPyvqDcSF-10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-11616" y="-8973.5" as="sourcePoint" />
            <mxPoint x="-11456" y="-8973.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="BSEwYxCzqV1fQPbHcLaS-1" value="&lt;font style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;规划组件配置&lt;/b&gt;&lt;/font&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="-12040" y="-9938" width="1420" height="1200" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-2" value="PlanningBase&lt;div&gt;规划模式基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11190" y="6830" width="960" height="480" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-injector_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射器&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="40" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uwaPr1xbMoD9fhfCSXmQ-5" value="-seq_num_ = 0：size_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; // 算法运行序列号，在子类中每次初始化frame_时+1" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="66" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="L0D7NCRIWSaCoEj-5ty2-1" value="-local_view_：LocalView&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划模块上游输入数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="92" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nkNxLFMJb4FTdF8a82BB-1" value="-frame_：std::unique_ptr&amp;lt;Frame&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前帧计算中间量，当前帧运行的所有数据信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="118" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-27" value="-config_：PlanningConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;规划模块&lt;/span&gt;配置&lt;span style=&quot;white-space: pre;&quot;&gt;参数集，包含规划器的类型和默认执行的task&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="144" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-13" value="-planner_dispatcher_：std::unique_ptr&amp;lt;PlannerDispatcher&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="170" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8jDSpE6PCSRgLYOCApSu-1" value="-planner_：std::unique_ptr&amp;lt;Planner&amp;gt;&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="196" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="222" width="960" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-5" value="+explicit PlanningBase(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;初始化成员injector_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="230" width="960" height="54" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-25" value="+virtual Init(const PlanningConfig&amp;amp; config)：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;虚函数，在子类中被重写，并且在子类中重写时被显式调用&lt;div&gt;初始化成员injector_的成员planning_context，调用&lt;span style=&quot;background-color: initial;&quot;&gt;planning_context的成员函数Init&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用TaskFactory行为类的Init函数，注册task，所谓注册task就是将task的名称与对应task的构造函数建立映射关系，存储在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TaskFactory成员task_factory_中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="284" width="960" height="84" as="geometry" />
        </mxCell>
        <mxCell id="TtpwxlLR1k9MMoQ5n5d5-4" value="+virtual RunOnce(const LocalView&amp;amp; local_view,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;ADCTrajectory&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_trajectory&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;0：&lt;/span&gt;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;单帧运行函数，纯虚函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="368" width="960" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nkNxLFMJb4FTdF8a82BB-4" value="+virtual Plan(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;current_time_stamp&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const std::vector&amp;lt;TrajectoryPoint&amp;gt;&amp;amp; stitching_trajectory,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;ADCTrajectory* const trajectory) = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划算法执行函数，纯虚函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-2" vertex="1">
          <mxGeometry y="394" width="960" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-8" value="OnLanePlanning：public PlanningBase&lt;div&gt;车道级规划，依赖高精地图，规划能力强&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=55;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-9160" y="6192" width="1180" height="1097" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-9" value="-vehicle_config_：HardwareConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆配置信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="55" width="1180" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-22" value="-flag_reference_line_ = false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线构造器在内存中是否已经存在标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="81" width="1180" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-21" value="-reference_line_provider_：std::unique_ptr&amp;lt;ReferenceLineProvider&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线构造器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="107" width="1180" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="133" width="1180" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+explicit OnLanePlanning(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;调用父类PlanningBase类构造函数初始化成员injecotor_&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化规划器分配器成员planner_dispatcher_，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用OnLanePlannerDispactcher类构造函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="141" width="1180" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-26" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Init&lt;/span&gt;(const PlanningConfig&amp;amp; config) override：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;1.初始化配置参数，将输入规划模块全部参数config写入成员config_&lt;br&gt;&lt;div&gt;2.初始化车辆硬件参数信息，调用行为类VehicleConfigHelper中的成员函数GetConfig初始化成员vehicle_config_&lt;/div&gt;&lt;/div&gt;&lt;div&gt;3.注册task，调用父类PlanningBase中的Init成员函数，在行为类TaskFactory的成员task_factory_中注册task&lt;/div&gt;&lt;div&gt;4.注册规划器，调用成员planner_dispatcher_的成员函数Init，向成员&lt;span style=&quot;background-color: initial;&quot;&gt;planner_dispatcher_中的规划器工厂planner_factory_注册规划器，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;目前只注册PublicRoadPlanner&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.分配规划器，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员planner_dispatcher_的成员函数&lt;/span&gt;DispatchPlanner，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成指向PublicRoadPlanner类对象的指针，初始化成员planner_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;6.调用成员planner_的成员函数Init，完成场景的注册和默认场景的实例化&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="231" width="1180" height="150" as="geometry" />
        </mxCell>
        <mxCell id="TtpwxlLR1k9MMoQ5n5d5-3" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;RunOnce&lt;/span&gt;(const LocalView&amp;amp; local_view,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划模块上游输入数据&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; ADCTrajectory&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ptr_trajectory_pb&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;override：&lt;/span&gt;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储规划模块的输出数据&lt;/div&gt;&lt;div&gt;单帧规划运行主函数，规划算法运行主函数&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;local_view初始化成员local_view_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;包括以下几个主要部分&lt;/div&gt;&lt;div&gt;1. 更新或构造成员参考线构造器reference_line_provider_，&lt;/div&gt;&lt;div&gt;若参考线构造器成员为空调用ReferenceLineProvider类构造函数进行构造，若非空进行更新，调用&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;ResetReferenceProvider&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断条件通过成员flag_reference_line_，表示reference_line_provider_在内存中是否已经构造(启动)，在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构造&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_时调用其成员函数Start，更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;flag_reference_line_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;1.更新车辆状态，使用上游输入数据local_view_更新成员injector_中的车辆状态vehicle_state_，调用&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_中的更新函数Update&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. 由上一步更新的自车状态更新成员参考线构造器&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中的自车状态成员vehicle_state_，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;UpdateVehicleState&lt;/div&gt;&lt;div&gt;2. 由输入local_view中的路由信息更新&lt;span style=&quot;background-color: initial;&quot;&gt;成员参考线构造器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中的路由成员routing_，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;UpdateRoutingResponse&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.轨迹拼接，通过TrajectoryStitcher类提供的静态函数ComputeStitchingTrajectory得到拼接轨迹stitching_trajectory，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.更新车身姿态，计算自车bbox，通过前两个步骤得到的&lt;span style=&quot;background-color: initial;&quot;&gt;车辆状态和拼接轨迹，更新成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector_中的车身姿态ego_info_，调用ego_info_中的更新函数Update&lt;/span&gt;&lt;/div&gt;&lt;div&gt;4.初始化整体框架，调用成员函数InitFrame构造并初始化成员frame_&lt;/div&gt;&lt;div&gt;5.对每条参考线进行交规检查，通过TrafficDecider类完成该项任务，由于上一步已经对成员frame_完成初始化，故参考线也已初始化，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;6. 对每条参考线上的障碍物赋历史决策信息，调用&lt;span style=&quot;background-color: initial;&quot;&gt;ObstacleProcessor类的静态函数&lt;/span&gt;classifyObstByHistory&lt;/div&gt;&lt;div&gt;7.对每条参考线进行障碍物筛选，通过ObstaclesFilter类完成该项任务&lt;/div&gt;&lt;div&gt;8.规划算法执行&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;及输出结果填充&lt;/span&gt;，调用成员函数Plan完成该项任务&lt;/div&gt;&lt;div&gt;9. 调用&lt;span style=&quot;background-color: initial;&quot;&gt;成员injector_中的历史帧记录器frame_history_的Add函数，将成员当前帧计算中间量frame_推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame_history_，推入时读取frame_的成员运行序列号sequence_num_，表示该历史帧数据是第几帧运行的结果&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="381" width="1180" height="328" as="geometry" />
        </mxCell>
        <mxCell id="nkNxLFMJb4FTdF8a82BB-3" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Plan&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;const double current_time_stamp,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前时间戳&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;TrajectoryPoint&amp;gt;&amp;amp; stitching_trajectory,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//前后帧的拼接轨迹&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; ADCTrajectory* const trajectory) override：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划输出轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划算法执行及输出结果填充函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员planner_的规划算法执行函数Plan&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将决策、规划结果填入输出pb&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;trajectory中&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="709" width="1180" height="190" as="geometry" />
        </mxCell>
        <mxCell id="nkNxLFMJb4FTdF8a82BB-2" value="-InitFrame(const TrajectoryPoint&amp;amp; planning_start_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const VehicleState&amp;amp; vehicle_state,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员frame_初始化函数，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造并初始化成员frame_，保存一帧规划的全部数据信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 更新成员算法序列号seq_num_+1，表示这是规划算法的第几帧运行&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 调用Frame类构造函数，构造成员frame_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 更新地图时间及accs状态，调用成员reference_line_provider_的状态更新函数UpdateState，将上游数据local_view_的地图时间及accs状态写入&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. 获取参考线、对应的导航路段，用于frame_的初始化，调用成员reference_line_provider_的参考线获取函数GetReferenceLines&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5.&amp;nbsp;根据自车状态信息、reference_line，segments等信息，初始化frame信息，&lt;span style=&quot;background-color: initial;&quot;&gt;即初始化当前帧算法运行依赖的所有外部信息，调用成员frame_的初始化函数Init&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-8" vertex="1">
          <mxGeometry y="899" width="1180" height="198" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-12" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-2" target="8WNt9KbTknfimQn_pb-V-8" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-10010" y="6831" as="sourcePoint" />
            <mxPoint x="-9540" y="6891" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-14" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;OnLanePlannerDispatcher&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-10010" y="5691" width="950" height="230" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-15" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-14" vertex="1">
          <mxGeometry y="26" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8WNt9KbTknfimQn_pb-V-14" vertex="1">
          <mxGeometry y="52" width="950" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-17" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+OnLanePlannerDispatcher() = default;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造函数&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-14" vertex="1">
          <mxGeometry y="60" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-10" value="+DispatchPlanner(&lt;span style=&quot;background-color: initial;&quot;&gt;const PlanningConfig&amp;amp; planning_config,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//输入规划配置，只使用配置中的规划器id&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) override：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std::unique_ptr&amp;lt;Planner&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//规划器构造函数的入参，只需要一个依赖注射器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划器分配(生成)函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;调用成员planner_factory_的成员函数CreateObject，生成对应的规划器并返回，函数输入：&lt;/div&gt;&lt;div&gt;输入planning_config的成员&lt;span style=&quot;background-color: initial;&quot;&gt;standard_planning_config的成员planner_type的第一个元素(一般只有一个元素，存储规划器名称，在prototxt文件中已经写好)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入injector(规划器构造函数所需要的输入)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;planning_config中只有一个规划器类型就是PUBLIC_ROAD，因此&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里返回的是指向PublicRoadPlanner类对象的指针&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-14" vertex="1">
          <mxGeometry y="86" width="950" height="144" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-18" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PlannerDispatcher&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;规划器分配器基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11290" y="6076" width="1170" height="410" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-19" value="#&lt;span style=&quot;background-color: initial;&quot;&gt;planner_factory_：&lt;/span&gt;Factory&amp;lt;&lt;span style=&quot;background-color: initial;&quot;&gt;PlannerType,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Planner，&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Planner* (*)(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; &lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;injector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器工厂，规划器的构造函数入参只需要injector&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="50" width="1170" height="64" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="114" width="1170" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-lQ85SeD6EPUBSt0Zu5l-1" value="+PlannerDispatcher() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="122" width="1170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-21" value="+virtual Init()：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数，子类中没有重写，使用基类中的实现&lt;div&gt;调用成员函数RegisterPlanners，注册规划器&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="148" width="1170" height="62" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-9" value="+virtual DispatchPlanner(&lt;span style=&quot;background-color: initial;&quot;&gt;const PlanningConfig&amp;amp; planning_config,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入规划配置，只使用配置中的规划器id&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) = 0：&lt;/span&gt;&amp;nbsp;std::unique_ptr&amp;lt;Planner&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划器构造函数的入参，只需要一个依赖注射器&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;规划器分配(生成)函数&lt;/span&gt;，纯虚函数，必须在子类中实现&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="210" width="1170" height="80" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-8" value="#RegisterPlanners()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;注册规划器&lt;div&gt;向规划器工厂planner_factory_注册规划器&lt;br&gt;&lt;div&gt;调用成员planner_factory_的成员函数Register，仅注册PUBLIC_ROAD规划器，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;所谓注册就是指明PUBLIC_ROAD规划器通过调用PublicRoadPlanner的构造函数来实例化&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8WNt9KbTknfimQn_pb-V-18" vertex="1">
          <mxGeometry y="290" width="1170" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-22" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-2" target="8WNt9KbTknfimQn_pb-V-18" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-9831" y="6719" as="sourcePoint" />
            <mxPoint x="-9671" y="6719" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-10710" y="6711" />
              <mxPoint x="-10710" y="6711" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-23" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-14" target="8WNt9KbTknfimQn_pb-V-18" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-9690" y="6061" as="sourcePoint" />
            <mxPoint x="-10436" y="6701" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8WNt9KbTknfimQn_pb-V-24" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-8" target="8WNt9KbTknfimQn_pb-V-14" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-9446" y="6819" as="sourcePoint" />
            <mxPoint x="-9186" y="6849" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-9166" y="6511" />
              <mxPoint x="-9166" y="6511" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-1" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Factory&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;工厂基类&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; typename IdentifierType,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//显式的告诉编译器 标识符&lt;span style=&quot;background-color: initial;&quot;&gt;IdentifierType是一个类型而不是一个变量&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class AbstractProduct,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//这里class与typename一样，都是告诉编译器&lt;span style=&quot;background-color: initial;&quot;&gt;AbstractProduct是一个类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class ProductCreator = AbstractProduct *(*)(),&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//这里使用了默认模板参数，类型&lt;span style=&quot;background-color: initial;&quot;&gt;ProductCreator的默认值为函数指针类型&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AbstractProduct *(*)()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class MapContainer = std::map&amp;lt;IdentifierType,&lt;span style=&quot;background-color: initial;&quot;&gt;ProductCreator&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//使用默认模板参数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;IdentifierType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表示要生产的产品类型名称&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;AbstractProduct&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表示要生产的产品类&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ProductCreator&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表示要生产的产品生产方法，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;即实例化产品类的构造函数&lt;/span&gt;，这里用函数指针来表示，用于在&lt;span style=&quot;background-color: initial;&quot;&gt;MapContainer中根据产品类型找到对应的构造函数，&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;因此&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里要求工厂中生产的产品构造函数具有相同的入参&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;MapContainer&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表示产品注册表，建立产品类型名称与产品类构造函数之间的对应关系&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=left;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=260;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13160" y="5490" width="1070" height="836" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-2" value="-producers_:MapContainer&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;产品注册表，通常用map容器表示，键为产品类型名称，值为实例化产品类的构造函数指针(入口，不执行)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="260" width="1070" height="40" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="300" width="1070" height="8" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-4" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;Register&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;(const IdentifierType &amp;amp;id,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//要注册的产品类型名称&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;ProductCreator creator)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//要注册的产品类的构造函数指针&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回是否注册成功的标志位，若要注册的产品在注册表中不存在属于新产品返回true，若要注册的产品在注册表中已存在返回false&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;在成员产品注册表producers_中注册新产品&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;调用map容器的insert函数，函数入参是由输入id和creator组成的pair对象，返回值是一个pair对象，其第二个位置是一个bool，若入参键值对在map中不存在返回true说明该键值对是新元素，若&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;入参键值对在map中存在返回false说明该键值在map中已存在无需插入&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="308" width="1070" height="122" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-10" value="+template &amp;lt;typename... Args&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;CreateObject&lt;/span&gt;(const IdentifierType &amp;amp;id,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//生产产品的类型名称&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Args &amp;amp;&amp;amp;... args) :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std::unique_ptr&amp;lt;AbstractProduct&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//调用该产品类构造函数所需要的函数入参&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回指向实例化出来的产品类对象的指针&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;产品实例化对外接口函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObjectOrNull(不用做对外接口)，实例化产品对象，该函数作为对外调用的接口函数使用&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="430" width="1070" height="146" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-9" value="+template &amp;lt;typename... Args&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//typename... Args表示可变模板参数，这个参数包包含着调用产品类构造函数所需的全部入参&lt;div&gt;&amp;nbsp; CreateObjectOrNull(const IdentifierType &amp;amp;id,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//生产产品的类型名称&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;Args &amp;amp;&amp;amp;... args) : std::unique_ptr&amp;lt;AbstractProduct&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//调用该产品类构造函数所需要的函数入参&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回指向实例化出来的产品类对象的指针&lt;br&gt;&lt;/div&gt;&lt;div&gt;产品类实例化函数&lt;/div&gt;&lt;div&gt;给定产品类型名称id，若在成员产品注册表producers_中可以找到该产品的注册信息，提取出对应的产品类构造函数，将生产该产品所需的函数入参args传入供的产品构造函数入口，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用构造函数实例化该产品&lt;/span&gt;，并返回指向该产品的指针&lt;/div&gt;&lt;div&gt;若在注册表中找不到该产品信息，说明传入的产品类型未注册，返回空指针&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="576" width="1070" height="156" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-5" value="+Contains(const IdentifierType &amp;amp;id):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查producers_中是否有可以生产指定产品种类id的生产者" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="732" width="1070" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-6" value="+Unregister(const IdentifierType &amp;amp;id):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在producers_中删除指定id的键值对，若成功删除返回true" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="758" width="1070" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-7" value="+Clear():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;清空producers_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="784" width="1070" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-8" value="+Empty() const:bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;校验producers_是否为空" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OsPucbG8HB2PySBn9Ty9-1" vertex="1">
          <mxGeometry y="810" width="1070" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OsPucbG8HB2PySBn9Ty9-11" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-18" target="OsPucbG8HB2PySBn9Ty9-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-11271" y="5931" as="sourcePoint" />
            <mxPoint x="-11111" y="5931" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-10705" y="5891" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleConfigHelper&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;静态类，整车硬件参数读取器&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23585" y="-2511" width="830" height="476" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-2" value="-static&amp;nbsp;vehicle_config_：HardwareConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆硬件配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="50" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-4" value="-static is_init_：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;表征该静态类是否被初始化" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="76" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="102" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="P7qkli-06ar2Wz1b_aGu-1" value="+static Instance()：VehicleConfigHelper*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;单例模式，保证该静态类不会被多次实例化" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="110" width="830" height="40" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-6" value="+static Init()：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;创建空的HardwareConfig类对象params，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用中间件提供的方法函数，通过写有&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;车辆硬件参数具体数值的prototxt文件路径，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将车辆硬件参数写入params&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用带参的Init函数，用params初始化成员vehicle_config_，函数入参params&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="150" width="830" height="76" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-7" value="+static Init(const HardwareConfig &amp;amp;config)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;带参初始化函数&lt;div&gt;用输入config初始化成员vehicle_config_&lt;/div&gt;&lt;div&gt;将成员is_init_置为true，表示该行为类中的车辆硬件参数已经初始化&lt;/div&gt;&lt;div&gt;调用检查函数&lt;span style=&quot;background-color: initial;&quot;&gt;ConfigVerification，对数值合理性进行检查&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="226" width="830" height="76" as="geometry" />
        </mxCell>
        <mxCell id="P7qkli-06ar2Wz1b_aGu-3" value="+static ConfigVerification(std::string&amp;amp; msgs)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆硬件参数有效性检查&lt;div&gt;检查成员vehicle_config_中的数值是否合理，对于不合理的数值打印到日志&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="302" width="830" height="50" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-8" value="&lt;span style=&quot;background-color: rgb(102, 178, 255);&quot;&gt;生成整车硬件参数静态类单例及初始化会在规划模块初始化函数中完成，保证在周期性调用规划处理函数时调用GetConfig函数都有有效值&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="352" width="830" height="50" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-5" value="+static GetConfig()：const HardwareConfig&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获取当前车辆硬件参数信息&lt;div&gt;通过成员is_init_判断该行为类是否被初始化，&lt;/div&gt;&lt;div&gt;若该行为类未被初始化(Init函数未运行)，调用初始化函数Init，初始化成员vehicle_config_，并返回&lt;/div&gt;&lt;div&gt;若该行为类已被初始化，直接返回&lt;span style=&quot;background-color: initial;&quot;&gt;成员vehicle_config_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-1" vertex="1">
          <mxGeometry y="402" width="830" height="74" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HardwareConfig.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/common/hardware_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23786" y="-1951" width="430" height="140" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;SensorConfig sensor_config = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    VehicleParameter vehicle_param = 3;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    EcuInfo ecu_info = 4;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    haomo.hios.Header header = 5;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-7" vertex="1">
          <mxGeometry y="50" width="430" height="90" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-9" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="CYiUb-rMYyweTCQEhznL-1" target="CYiUb-rMYyweTCQEhznL-7" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="23964" y="-1275.5" as="sourcePoint" />
            <mxPoint x="24124" y="-1275.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleParameter.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/common/hardware_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23716" y="-1751" width="570" height="918" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    float wheelbase = 1;        /*!&amp;lt; 轴距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeltrackF = 2;      /*!&amp;lt; 前轮距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeltrackR = 3;       /*!&amp;lt; 后轮距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overhangF = 4;        /*!&amp;lt; 前悬 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overhangR = 5;        /*!&amp;lt; 后悬 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeldiameter = 6;    /*!&amp;lt; 轮径 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheelwidth = 7;       /*!&amp;lt; 轮宽 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overalllength = 8;      /*!&amp;lt; 外廓长 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overallwidth = 9;       /*!&amp;lt; 外廓宽（加后视镜） 单位m or 最大车宽*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overallhigh = 10;       /*!&amp;lt; 外廓高 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float minturningradius = 11;  /*!&amp;lt; 最小转弯半径 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float maxgradeability = 12;   /*!&amp;lt; 最大爬坡度 单位% */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float maxsteeringangle = 13;  /*!&amp;lt; 最大方向盘转角 单位rad */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float front_edge_to_center = 14;  /*!&amp;lt; 后轴中心到车头的距离(前杠前边缘) 单位m,以下类似 */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rear_edge_to_center = 15;   &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float left_edge_to_center = 16;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float right_edge_to_center = 17;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_abs_speed_when_stopped = 18;  /*!&amp;lt; 刹停前能够检测到的最大速度 单位m/s */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_acceleration = 19;   /*!&amp;lt; 最大加速度 单位m/s^2 正数*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_deceleration = 20;   /*!&amp;lt; 最大减速度 单位m/s^2 正数*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_steer_angle_rate = 21;   /*!&amp;lt; 方向盘最大转角速率 单位rad/s */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float steer_ratio = 22;     /*!&amp;lt; 方向盘与前轮转角传动比*/ &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float char_spd_ms = 23;    //车辆特征车速&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float front_axle_to_center_m = 24;   //前轴距到车辆质心距离&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float height_m = 25;    //地面到车顶高度Z向位置&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rear_axle_to_center_m = 26;    //后轴到车辆质心的X向位置&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float side_slip_angle_factor = 27;    //侧滑角系数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float vehicle_width_min_m = 28;    //最小车宽&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float weight_N = 29;    //车重&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float empty_mass_kg = 30;    //空载&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float gvm_kg = 31;    //满载&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float curb_kg = 32;    //整备质量&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float frontwheel_cornering_stiffness = 33; //前轮侧偏刚度 单位N/rad&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rearwheel_cornering_stiffness = 34; //后轮侧偏刚度 单位N/rad&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float I_z = 35; //横摆转动惯量 单位 kg*m^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float centroid_height = 36;  // 车辆质心高度 mm&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_velocity = 37;     // 最大车速 单位m/s;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_lateral_acceleration = 38; // 车辆最大横向加速度 单位m/s^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_lateral_deceleration = 39; // 车辆最大横向减速度 单位m/s^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_yaw_rate = 40;  // 车辆最大横摆角速度 单位rad/s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float fourwheel_load = 41; // 四轮载荷 单位kg&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float throttle_dead_zone = 42; //油门死区 百分比表示 单位%&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float brake_dead_zone = 43; //制动死区 m/s2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float min_ground_clearance = 44; //最小离地间隙 单位m&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_grade_parking = 45; //驻车最大爬坡度 单位rad a&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CYiUb-rMYyweTCQEhznL-10" vertex="1">
          <mxGeometry y="44" width="570" height="866" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="CYiUb-rMYyweTCQEhznL-10" vertex="1">
          <mxGeometry y="910" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-13" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="CYiUb-rMYyweTCQEhznL-7" target="CYiUb-rMYyweTCQEhznL-10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="24400" y="-1335.5" as="sourcePoint" />
            <mxPoint x="24125" y="-1675.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-5" value="TaskConfig&lt;div&gt;thirdparty/x86/common/proto/Planning/planning_config.proto&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11390" y="-9853.5" width="710" height="1064" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-6" value="&lt;div&gt;enum &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;TaskType&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // deciders&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; LANE_CHANGE_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PATH_ASSESSMENT_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;= 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PATH_BOUNDS_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PATH_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PATH_LANE_BORROW_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PATH_REUSE_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RSS_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RULE_BASED_STOP_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 7;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SPEED_BOUNDS_PRIORI_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 8;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SPEED_BOUNDS_FINAL_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 9;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SPEED_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 10;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ST_BOUNDS_DECIDER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 11;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // optimizers&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PIECEWISE_JERK_NONLINEAR_SPEED_OPTIMIZER&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 50;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PIECEWISE_JERK_PATH_OPTIMIZER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 51;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PIECEWISE_JERK_SPEED_OPTIMIZER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&amp;nbsp;52;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SPEED_HEURISTIC_OPTIMIZER&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= 53;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // other tasks&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //CREEP_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //NAVI_OBSTACLE_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //NAVI_PATH_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //NAVI_SPEED_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OPEN_SPACE_FALLBACK_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OPEN_SPACE_PRE_STOP_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 7;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OPEN_SPACE_ROI_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 8;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //PATH_REFERENCE_DECIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 13;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OPEN_SPACE_TRAJECTORY_PARTITION &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 21;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OPEN_SPACE_TRAJECTORY_PROVIDER&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 22;&lt;/div&gt;&lt;div&gt;&amp;nbsp; };&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3CqcE0QVlwRBPyvqDcSF-5" vertex="1">
          <mxGeometry y="46" width="710" height="494" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-9" value="&lt;div&gt;TaskType task_type&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt; = 1;&lt;/div&gt;&lt;div&gt;oneof task_config {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // deciders&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; LaneChangeDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;lane_change_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PathAssessmentDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_assessment_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt; = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PathBoundsDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_bounds_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt; = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PathDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PathLaneBorrowDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_lane_borrow_decider_config&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PathReuseDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_reuse_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 7;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RuleBasedStopDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;rule_based_stop_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 8;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SpeedBoundsDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;speed_bounds_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 9;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; STBoundsDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st_bounds_decider_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;= 10;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // optimizers&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PiecewiseJerkNonlinearSpeedOptimizerConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; piecewise_jerk_nonlinear_speed_optimizer_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;= 11;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PiecewiseJerkPathOptimizerConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;piecewise_jerk_path_optimizer_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 12;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PiecewiseJerkSpeedOptimizerConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;piecewise_jerk_speed_optimizer_config&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 13;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; SpeedHeuristicOptimizerConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;speed_heuristic_optimizer_config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 14;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // other tasks&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //LearningModelInferenceTaskConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;learning_model_inference_task_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 22;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //LearningModelInferenceTrajectoryTaskConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;learning_model_inference_trajectory_task_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 23;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //CreepDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;creep_decider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OpenSpaceFallBackDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;open_space_fallback_decider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;= 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OpenSpacePreStopDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;open_space_pre_stop_decider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OpenSpaceRoiDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;open_space_roi_decider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //PathReferenceDeciderConfig &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path_reference_decider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 11;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // OpenSpaceTrajectoryPartitionConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;open_space_trajectory_partition_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 16;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //OpenSpaceTrajectoryProviderConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;open_space_trajectory_provider_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; = 17;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3CqcE0QVlwRBPyvqDcSF-5" vertex="1">
          <mxGeometry y="540" width="710" height="490" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="3CqcE0QVlwRBPyvqDcSF-5" vertex="1">
          <mxGeometry y="1030" width="710" height="8" as="geometry" />
        </mxCell>
        <mxCell id="3CqcE0QVlwRBPyvqDcSF-8" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3CqcE0QVlwRBPyvqDcSF-5" vertex="1">
          <mxGeometry y="1038" width="710" height="26" as="geometry" />
        </mxCell>
        <mxCell id="CYiUb-rMYyweTCQEhznL-20" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;车辆硬件参数信息&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=350;strokeWidth=4;height=76;" parent="1" vertex="1">
          <mxGeometry x="23456" y="-2641" width="1050" height="1850" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-1" value="TaskFactory&lt;div&gt;任务工厂行为类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-14560" y="6461" width="1120" height="680" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-2" value="-static task_factory_:Factory&amp;lt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;TaskConfig::TaskType,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;Task,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Task *(*)(const TaskConfig &amp;amp;config,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector),&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::unordered_map&amp;lt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TaskConfig::TaskType,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;Task *(*)(const TaskConfig &amp;amp;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;config&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;injector&lt;/span&gt;),&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务类的构造函数入参需要任务配置和injector&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;std::hash&amp;lt;int&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;任务工厂，Factory模板类的实例化，用于专门生产Task类型产品的工厂成员&lt;/div&gt;&lt;div style=&quot;&quot;&gt;TaskType是产品类型名称，Task为工厂生产的产品类型，Task类对象构造时所需的入参为config和injector，unordered_map是注册表，使用int类型的哈希值作为索引&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OeGwjfl64N3prnyIZkna-1" vertex="1">
          <mxGeometry y="40" width="1120" height="290" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-3" value="-static default_task_configs_:std::unordered_map&amp;lt;TaskConfig::TaskType, TaskConfig, std::hash&amp;lt;int&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认任务配置注册表，当没有指定scenario时使用，感觉在创建task对象时好像没有使用到&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OeGwjfl64N3prnyIZkna-1" vertex="1">
          <mxGeometry y="330" width="1120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="OeGwjfl64N3prnyIZkna-1" vertex="1">
          <mxGeometry y="360" width="1120" height="8" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-5" value="+static Init(const PlanningConfig &amp;amp;config,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入规划模块全部配置参数，只用于初始化default_task_configs_，在任务工厂的产品注册时没使用&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;  &lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector) : void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;//输入未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;完成成员任务工厂task_factory_中产品注册表producers_的初始化(注册)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;1.调用成员task_factory_的产品注册函数Register，将所用scenario、所有stage能用到的所有task都注册到成员task_factory_的产品注册表producers_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.遍历输入规划模块全部参数config中的默认任务配置序列default_task_config中的各元素，将各个task名称和配置注册到成员默认任务配置注册表default_task_configs_中&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OeGwjfl64N3prnyIZkna-1" vertex="1">
          <mxGeometry y="368" width="1120" height="132" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-6" value="+static CreateTask(&lt;span style=&quot;background-color: initial;&quot;&gt;const TaskConfig &amp;amp;task_config,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的task配置参数&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector) : std::unique_ptr&amp;lt;Task&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Task类对象实例化函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;使用成员任务工厂task_factory_中的产品实例化函数&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObject，若输入task_config中指定的任务类型task_type在成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;task_factory_中的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;产品注册表producers_中可以找到对应的Task类对象构造函数，则返回指向指定Task对象的指针，否则返回空指针&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;task_config和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector是实例化特定Task类对象的构造函数的入参&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;TaskConfig类中存在两个属性，一是task_type表示指定任务的类型名称，二是task_config表示指定任务的配置参数。task_config的类型(比如STBoundDeciderConfig)与TaskConfig是包含关系，而非继承关系；在TaskConfig的proto定义中使用oneof关键字保证在一个TaskConfig对象中成员task_config只对应一种类型，表示这个TaskConfig类对象代表某一个指定的任务的配置&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OeGwjfl64N3prnyIZkna-1" vertex="1">
          <mxGeometry y="500" width="1120" height="180" as="geometry" />
        </mxCell>
        <mxCell id="OeGwjfl64N3prnyIZkna-7" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="OeGwjfl64N3prnyIZkna-1" target="OsPucbG8HB2PySBn9Ty9-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-11751" y="5871" as="sourcePoint" />
            <mxPoint x="-11591" y="5871" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-14000" y="5931" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--1" value="Planner&lt;div&gt;规划器基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11170" y="7628" width="930" height="296" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--2" value="#config_：PlanningConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;规划模块&lt;/span&gt;配置&lt;span style=&quot;white-space: pre;&quot;&gt;参数集，包含规划器的类型和默认执行的task&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="40" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--18" value="#scenario_manager_：ScenarioManager&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景管理器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="66" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--19" value="#scenario_ = nullptr：Scenario*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前场景" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="92" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="118" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--17" value="+explicit Planner(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) :&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_manager_(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化成员scenario_manager_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="126" width="930" height="60" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--4" value="+virtual Init(const PlanningConfig&amp;amp; config) = 0：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器初始化函数，纯虚函数，在子类PublicRoadPlanner中被重写" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="186" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--16" value="+virtual Plan(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_init_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;ADCTrajectory* ptr_computed_trajectory) = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器&lt;/span&gt;规划算法执行&lt;span style=&quot;white-space: pre;&quot;&gt;函数，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;纯虚函数，在子类PublicRoadPlanner中被重写&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--1" vertex="1">
          <mxGeometry y="212" width="930" height="84" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--5" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-2" target="l5mofZLHDOxuWX_CN06--1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-11456" y="7079" as="sourcePoint" />
            <mxPoint x="-11296" y="7079" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-10705" y="7381" />
              <mxPoint x="-10705" y="7381" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--6" value="PlannerWithReferenceLine" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11070" y="8031" width="730" height="130" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--7" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--6" vertex="1">
          <mxGeometry y="26" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="l5mofZLHDOxuWX_CN06--6" vertex="1">
          <mxGeometry y="52" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--9" value="+explicit PlannerWithReferenceLine(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Planner(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用基类Planner的构造函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--6" vertex="1">
          <mxGeometry y="60" width="730" height="70" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--10" value="PublicRoadPlanner" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-9380" y="8003" width="880" height="380" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--11" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--10" vertex="1">
          <mxGeometry y="26" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="l5mofZLHDOxuWX_CN06--10" vertex="1">
          <mxGeometry y="52" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--13" value="+explicit PublicRoadPlanner(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: PlannerWithReferenceLine(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用基类PlannerWithReferenceLine的构造函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--10" vertex="1">
          <mxGeometry y="60" width="880" height="60" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--21" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Init&lt;/span&gt;(const PlanningConfig&amp;amp; config) override：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;使用输入config初始化成员config_&lt;/div&gt;&lt;div&gt;调用成员scenario_manager_的初始化成员函数Init，函数入参为输入config，完成场景注册和默认场景的实例化&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--10" vertex="1">
          <mxGeometry y="120" width="880" height="90" as="geometry" />
        </mxCell>
        <mxCell id="nkNxLFMJb4FTdF8a82BB-5" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Plan&lt;/span&gt;(const TrajectoryPoint&amp;amp; planning_init_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;Frame* frame,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;ADCTrajectory* ptr_computed_trajectory) override：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划器规划算法执行函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.更新场景状态机，调用成员scenario_manager_成员函数Update，识别场景，并实例化对应场景类对象&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.用实例化的场景类对象初始化成员场前场景scenario_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.调用成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_的成员函数Process，执行当前场景内的规划算法&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--10" vertex="1">
          <mxGeometry y="210" width="880" height="170" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--14" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--6" target="l5mofZLHDOxuWX_CN06--1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-10610" y="7961" as="sourcePoint" />
            <mxPoint x="-10681" y="7644" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--15" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--10" target="l5mofZLHDOxuWX_CN06--6" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-9670" y="8051" as="sourcePoint" />
            <mxPoint x="-11376" y="7826" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--20" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-8" target="l5mofZLHDOxuWX_CN06--10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-9306" y="7249" as="sourcePoint" />
            <mxPoint x="-9146" y="7249" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-8916" y="7579" />
              <mxPoint x="-8916" y="7579" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--23" value="ScenarioManager" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13130" y="7067" width="1090" height="1066" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--24" value="-injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="26" width="1090" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--28" value="-planning_config_：PlanningConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;规划模块&lt;/span&gt;配置&lt;span style=&quot;white-space: pre;&quot;&gt;参数集，包含规划器的类型和默认执行的task&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="52" width="1090" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--29" value="-default_scenario_type_：ScenarioConfig::ScenarioType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认场景类型名称，目前默认为LANE_FOLLOW" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="78" width="1090" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--30" value="-current_scenario_：std::unique_ptr&amp;lt;Scenario&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前场景" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="104" width="1090" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--31" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;config_map_：&lt;/span&gt;std::unordered_map&amp;lt;ScenarioConfig::ScenarioType,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp;ScenarioConfig,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::hash&amp;lt;int&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景配置表，场景配置包含当前场景下执行的stage名称及配置，和各stage下执行的task名称及配置，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;不同场景配置由不同prototxt文件定义&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="130" width="1090" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-1" value="-scenario_context_：ScenarioContext&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景环境变量，类的构造时未显示初始化，用于实例化场景对象的构造函数入参" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="210" width="1090" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3qHvYWQoCKpMym6nzt5v-1" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;first_encountered_overlap_map_：&lt;/span&gt;std::unordered_map&amp;lt;ReferenceLineInfo::OverlapType, hdmap::PathOverlap,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;std::hash&amp;lt;int&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车前方第一次遭遇的地图重合元素表&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;场景类型包括PNC_JUNCTION(道路之间有相互重合)、SIGNAL(信号灯与道路之间有重合)、STOP_SIGN(停止标志与道路之间有重合)、YIELD_SIGN(让行标志与道路之间有重合)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="236" width="1090" height="50" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="286" width="1090" height="8" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--26" value="+ScenarioManager(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: injector_(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化成员injector_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="294" width="1090" height="40" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--27" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;Init&lt;/span&gt;(const PlanningConfig&amp;amp; planning_config)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数，完成场景注册及默认场景的实例化&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.使用输入初始化成员planning_config_&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2.调用成员函数RegisterScenarios完成场景注册，注册结果存储在成员config_map_中，目前只注册了场景LANE_FOLLOW和JUNCTION_TURN&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3.默认场景设置为跟车，&amp;nbsp;default_scenario_type_ =&amp;nbsp;ScenarioConfig::LANE_FOLLOW&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;4.调用成员函数CreateScenario，函数入参为成员&lt;span style=&quot;background-color: initial;&quot;&gt;default_scenario_type_，实例化默认场景对象作为当前场景(跟车场景)，初始化成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;current_scenario_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="334" width="1090" height="152" as="geometry" />
        </mxCell>
        <mxCell id="B3W0FTPDJDFPstmUyDBL-1" value="+&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;Update&lt;/span&gt;(const TrajectoryPoint&amp;amp; ego_point, const Frame&amp;amp; frame)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景更新函数，识别场景，并实例化对应场景类的对象&lt;div&gt;1.调用成员函数Observe，初始化成员&lt;span style=&quot;background-color: initial;&quot;&gt;first_encountered_overlap_map_，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;得到自车将要首次遭遇的场景类型，其实未使用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.调用成员函数ScenarioDispatch，识别场景，并实例化对应场景类的对象，目前只支持实例化&lt;span style=&quot;background-color: initial;&quot;&gt;LaneFollowScenario类和JunctionTurnScenario类对象&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="486" width="1090" height="110" as="geometry" />
        </mxCell>
        <mxCell id="oMH_dJ_3i5WE9dQJcQY5-1" value="-RegisterScenarios()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景注册函数&lt;div&gt;根据不同的场景配置文件prototxt，生成对应场景的ScenarioConfig类实例，通过Scenario类提供的配置加载静态成员函数LoadConfig，将&lt;span style=&quot;background-color: initial;&quot;&gt;对应场景的ScenarioConfig类实例与场景名称形成映射，写入成员config_map_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;目前只注册了场景LANE_FOLLOW和JUNCTION_TURN&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="596" width="1090" height="70" as="geometry" />
        </mxCell>
        <mxCell id="oMH_dJ_3i5WE9dQJcQY5-2" value="-CreateScenario(&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioType&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_type&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：&lt;/span&gt;std::unique_ptr&amp;lt;Scenario&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景实例化函数&lt;div&gt;根据输入scenario_type提供的场景名称，调用对应场景类的构造函数，实例化对象，并返回指向该场景对象的指针&lt;/div&gt;&lt;div&gt;调用LaneFollowScenario类和JunctionTurnScenario类构造函数&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="666" width="1090" height="80" as="geometry" />
        </mxCell>
        <mxCell id="B3W0FTPDJDFPstmUyDBL-2" value="-Observe(const Frame&amp;amp; frame)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景观测器，通过读取frame中的地图信息，得到自车将要首次遭遇的场景类型&lt;div&gt;通过读取输入frame中的第一条reference_line_info(如果车辆骑线走会有两条参考线)的成员自车在地图上首次遭遇重叠的元素first_encounter_overlaps_，初始化成员&lt;span style=&quot;background-color: initial;&quot;&gt;first_encountered_overlap_map_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="746" width="1090" height="80" as="geometry" />
        </mxCell>
        <mxCell id="B3W0FTPDJDFPstmUyDBL-3" value="-ScenarioDispatch(const Frame&amp;amp; frame)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景分配器，实例化场景对象&lt;div&gt;&lt;div&gt;1.调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioDispatchNonLearning，得到自车当前的场景类型，用于下一步实例化场景对象。提供了基于学习和基于规则的两套场景识别函数，目前只使用了基于规则的&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateScenario，实例化步骤1中得到的场景类型对应的场景对象，目前只支持实例化&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;LaneFollowScenario类和JunctionTurnScenario类对象&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="826" width="1090" height="70" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-1" value="-ScenarioDispatchNonLearning(const Frame&amp;amp; frame)：ScenarioConfig::ScenarioType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;基于规则的场景识别函数&lt;div&gt;通过输入frame中的地图信息判断自车所处于或将要处于的场景类型，并返回，用于实例化场景对象&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;目前提供了存储在成员default_scenario_type_中的默认场景类型LANE_FOLLOW和路口转弯JUNCTION_TURN两种场景类型&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="896" width="1090" height="64" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-2" value="-CreateScenario(&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioType&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_type&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：&lt;/span&gt;std::unique_ptr&amp;lt;Scenario&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景对象实例化函数&lt;div&gt;1.根据输入的场景类型&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_type，调用对应场景类的构造函数，场景配置使用成员场景配置表config_map_中的配置参数，返回指向实例化对象的指针&lt;/span&gt;&lt;/div&gt;&lt;div&gt;目前只调用了LaneFollowScenario类和JunctionTurnScenario类的构造函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;2.场景对象实例化之后调用其中的Init函数，完成场景对象的初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;注意在生成场景时同时调用场景类的构造函数及初始化函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--23" vertex="1">
          <mxGeometry y="960" width="1090" height="106" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--32" value="Scenario" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13120" y="8381" width="1030" height="904" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-2" value="+enum ScenarioStatus {&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STATUS_UNKNOWN = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STATUS_PROCESSING = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STATUS_DONE = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;};&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景执行状态&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="26" width="1030" height="114" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-3" value="#scenario_status_ = STATUS_UNKNOWN：ScenarioStatus&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前场景的运行状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="140" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--33" value="#config_：ScenarioConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景配置参数，在子类中该配置参数就是子类对应的指定场景的配置参数，包含指定场景下执行的stage名称及配置，和各stage下执行的task名称及配置" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="166" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-18" value="#scenario_context_ = nullptr：const ScenarioContext*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景上下文" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="192" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-19" value="#name_：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景类型名称" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="218" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-20" value="#injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="244" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-21" value="#&lt;span style=&quot;background-color: initial;&quot;&gt;stage_config_map_：&lt;/span&gt;std::unordered_map&amp;lt;ScenarioConfig::StageType,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;const ScenarioConfig::StageConfig*, std::hash&amp;lt;int&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage注册表&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="270" width="1030" height="30" as="geometry" />
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-1" value="#current_stage_：std::unique_ptr&amp;lt;Stage&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前阶段，在子类中就是子类对应的特定场景对应的特定stage" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="300" width="1030" height="26" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--34" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="326" width="1030" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-17" value="+Scenario(const ScenarioConfig&amp;amp; config,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const ScenarioContext* context,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化成员config_，使用输入config&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化成员scenario_context_，使用输入context&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化成员name_，使用输入config的成员scenario_type，转化成string&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化成员injector_，使用输入injector&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="334" width="1030" height="152" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--35" value="+static LoadConfig(const std::string&amp;amp; config_file,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig* config)：&lt;/span&gt;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景配置加载函数&lt;div&gt;根据输入&lt;span style=&quot;background-color: initial;&quot;&gt;config_file的prototxt文件，生成对应的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig类对象，并存入输入config中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="486" width="1030" height="70" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-16" value="+virtual &lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Init&lt;/span&gt;()：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景初始化函数，完成stage的注册和默认stage的实例化&lt;div&gt;1.注册stage，遍历成员场景配置参数config_中的全部阶段配置stage_config，将stage的类型和stage的配置形成映射写入成员&lt;span style=&quot;background-color: initial;&quot;&gt;stage_config_map_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.对当前阶段生成实例化对象，调用子类特定场景类中重写的成员函数CreateStage，生成子类特定场景类对应的Stage类对象，存入成员current_stage_&lt;/div&gt;&lt;div&gt;第一个入参使用成员config_中的第一个阶段类型stage_type在成员stage_config_map_中对应stage配置&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;也就是说场景配置中存储的阶段配置的第一个元素就是该场景下第一个要执行的task&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="556" width="1030" height="84" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-14" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+virtual &lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Process&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_init_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioStatus&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景处理函数，执行对应规划算法&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.调用成员当前stage current_stage_的处理函数Process，执行当前stage下的规划算法，函数入参为输入规划起始点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_init_point和frame&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.根据步骤1返回的&lt;span style=&quot;background-color: initial;&quot;&gt;current_stage_运行状态，更新成员当前场景的运行状态scenario_status_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;需要注意的是对于含有多个stage的scenario，在current_stage_的处理函数Process中会更新其成员下一个要执行的stage名称next_stage_，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当返回的current_stage_运行状态为FINISHED时，根据下一个要执行的stage名称在成员stage注册表中找到对应的stage的配置，调用成员函数CreateStage更新成员当前stage&amp;nbsp;current_stage_，下一帧继续调用current_stage_的处理函数Process&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="640" width="1030" height="200" as="geometry" />
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-2" value="+virtual&amp;nbsp;CreateStage(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;StageConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;stage_config&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;unique_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Stage&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;阶段实例化函数，纯虚函数，在子类中重写&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="l5mofZLHDOxuWX_CN06--32" vertex="1">
          <mxGeometry y="840" width="1030" height="64" as="geometry" />
        </mxCell>
        <mxCell id="l5mofZLHDOxuWX_CN06--36" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--23" target="l5mofZLHDOxuWX_CN06--32" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-13646" y="7591" as="sourcePoint" />
            <mxPoint x="-13486" y="7591" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-12561" y="7211" />
              <mxPoint x="-12561" y="7211" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="TtpwxlLR1k9MMoQ5n5d5-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--1" target="l5mofZLHDOxuWX_CN06--23" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-12106" y="7381" as="sourcePoint" />
            <mxPoint x="-11946" y="7381" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-11956" y="7758" />
              <mxPoint x="-11956" y="7758" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;LaneFollowScenario&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-9330" y="8838" width="870" height="250" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-5" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-4" vertex="1">
          <mxGeometry y="26" width="870" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sm0zkWOQGVOP8nTwlXeK-4" vertex="1">
          <mxGeometry y="52" width="870" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-7" value="+LaneFollowScenario(const ScenarioConfig&amp;amp; config,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const ScenarioContext* context,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;: Scenario(config, context, injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，调用父类构造函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-4" vertex="1">
          <mxGeometry y="60" width="870" height="80" as="geometry" />
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-3" value="+CreateStage(&lt;span style=&quot;background-color: initial;&quot;&gt;const ScenarioConfig::StageConfig&amp;amp; stage_config,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) override：&lt;span style=&quot;background-color: initial;&quot;&gt;std::unique_ptr&amp;lt;Stage&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage实例化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;跟车场景只有一个默认stage，&lt;/span&gt;LANE_FOLLOW_DEFAULT_STAGE&lt;/div&gt;&lt;div style=&quot;&quot;&gt;当入参stage_config中的stage类型stage_type不为&lt;span style=&quot;background-color: initial;&quot;&gt;LANE_FOLLOW_DEFAULT_STAGE时返回空指针&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;否则，调用LaneFollowStage类构造函数，实例化&lt;/span&gt;LaneFollowStage类&lt;span style=&quot;background-color: initial;&quot;&gt;对象，并返回指向它的指针&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-4" vertex="1">
          <mxGeometry y="140" width="870" height="110" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;JunctionTurnScenario&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-10080" y="8461" width="950" height="260" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-9" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-8" vertex="1">
          <mxGeometry y="26" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sm0zkWOQGVOP8nTwlXeK-8" vertex="1">
          <mxGeometry y="52" width="950" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-11" value="+JunctionTurnScenario(&lt;span style=&quot;background-color: initial;&quot;&gt;const ScenarioConfig&amp;amp; config,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const ScenarioContext* context,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;: Scenario(config, context, injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，调用父类构造函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-8" vertex="1">
          <mxGeometry y="60" width="950" height="90" as="geometry" />
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-4" value="+CreateStage(const ScenarioConfig::StageConfig&amp;amp; stage_config,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector) override：std::unique_ptr&amp;lt;Stage&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage实例化函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;路口转弯场景只有一个默认stage，JUNCTION_TURN_STAGE&lt;/div&gt;&lt;div style=&quot;&quot;&gt;当入参stage_config中的stage类型stage_type不为JUNCTION_TURN_STAGE时返回空指针&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;否则，调用JunctionTurnStage类构造函数，实例化JunctionTurnStage类对象，并返回指向它的指针&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sm0zkWOQGVOP8nTwlXeK-8" vertex="1">
          <mxGeometry y="150" width="950" height="110" as="geometry" />
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-12" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="sm0zkWOQGVOP8nTwlXeK-8" target="l5mofZLHDOxuWX_CN06--32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-10430" y="8441" as="sourcePoint" />
            <mxPoint x="-14011" y="6311" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sm0zkWOQGVOP8nTwlXeK-13" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="sm0zkWOQGVOP8nTwlXeK-4" target="l5mofZLHDOxuWX_CN06--32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-10570" y="9221" as="sourcePoint" />
            <mxPoint x="-13835" y="6397" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-5" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--10" target="sm0zkWOQGVOP8nTwlXeK-4" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-13136" y="8201" as="sourcePoint" />
            <mxPoint x="-12976" y="8201" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-8900" y="8691" />
              <mxPoint x="-8900" y="8691" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="JvrUwAxmFXcn8NgegdLR-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--10" target="sm0zkWOQGVOP8nTwlXeK-8" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-14446" y="8411" as="sourcePoint" />
            <mxPoint x="-14286" y="8411" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-9260" y="8421" />
              <mxPoint x="-9260" y="8421" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-1" value="Stage" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13160" y="9481" width="1110" height="630" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-2" value="+enum StageStatus {&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ERROR = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;READY = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;RUNNING = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;FINISHED = 4,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp;}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage运行状态，用于判断是否进行下一个stage的构造和运行&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="26" width="1110" height="134" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-5" value="#config_：ScenarioConfig::StageConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage配置参数，在子类中就是特定stage的配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="160" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-6" value="#injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="186" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-13" value="#name_：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stage类型名称，在子类中就是特定stage的类型名称" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="212" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-14" value="#next_stage_：ScenarioConfig::StageType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在当前stage中存储下一个要执行的stage类型名词，在Process函数中运行完全部task后更新" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="238" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-15" value="#tasks_：std::map&amp;lt;TaskConfig::TaskType,&amp;nbsp;std::unique_ptr&amp;lt;Task&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;task注册表，存储当前stage中将要执行的全部task" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="264" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-16" value="#task_list_：std::vector&amp;lt;Task*&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;task执行顺序列表，当前stage所要顺序执行的task列表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="290" width="1110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="316" width="1110" height="8" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-4" value="+Stage(const ScenarioConfig::StageConfig&amp;amp; config,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.成员config_和injector_由输入config和injector初始化&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.成员name_由成员config_中的stage_type初始化&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.成员next_stage_初始值存储当前阶段，&lt;span style=&quot;background-color: initial;&quot;&gt;由成员config_中的stage_type初始化&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.注册task，遍历成员config_中的所有task_type，调用TaskFactory类提供的静态函数CreateTask，实例化对应的Task对象，函数入参为成员config_中task_type对应的task_config，和成员injector_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;推入成员tasks_和task_list_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;因此config_中存储的task_type顺序就是task的执行顺序，这个顺序在对应的scenario.prototxt中规定好了&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="324" width="1110" height="208" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-7" value="+virtual Process(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_init_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;0：&lt;/span&gt;StageStatus&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;stage处理函数，返回stage运行状态，纯虚函数，在子类中被重写&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对于含有多个stage的scenario，在当前stage处理函数Process中会更新成员下一个要执行的stage名称next_stage_，以供在scenario处理函数中取到下一个stage的名称、实例化stage对象并运行下一个stage的处理函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对于只含有一个stage的scenario，在当前stage处理函数Process中一般不会更新next_stage_，在scenario处理函数中对于这种情况会返回场景执行状态ScenarioStatus::STATUS_DONE&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="83LP4jB4d5WOX9b1N9Nl-1" vertex="1">
          <mxGeometry y="532" width="1110" height="98" as="geometry" />
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-11" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="l5mofZLHDOxuWX_CN06--32" target="83LP4jB4d5WOX9b1N9Nl-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-14996" y="6771" as="sourcePoint" />
            <mxPoint x="-14836" y="6771" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-17" value="&lt;font style=&quot;font-size: 50px;&quot;&gt;Use&lt;/font&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="83LP4jB4d5WOX9b1N9Nl-4" target="OeGwjfl64N3prnyIZkna-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15726" y="6071" as="sourcePoint" />
            <mxPoint x="-15566" y="6071" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-14000" y="9501" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="83LP4jB4d5WOX9b1N9Nl-18" value="&lt;font style=&quot;font-size: 50px;&quot;&gt;Use&lt;/font&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-25" target="OeGwjfl64N3prnyIZkna-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13506" y="6701" as="sourcePoint" />
            <mxPoint x="-13346" y="6701" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-11920" y="6811" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;LaneFollowStage&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-9315" y="9285" width="840" height="370" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-7" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Angb0N3YarNm8VAPLJ9C-6" vertex="1">
          <mxGeometry y="26" width="840" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Angb0N3YarNm8VAPLJ9C-6" vertex="1">
          <mxGeometry y="52" width="840" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Angb0N3YarNm8VAPLJ9C-9" value="+LaneFollowStage(&lt;span style=&quot;background-color: initial;&quot;&gt;const ScenarioConfig::StageConfig&amp;amp; config,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;: Stage(config, njector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，调用父类构造函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Angb0N3YarNm8VAPLJ9C-6" vertex="1">
          <mxGeometry y="60" width="840" height="140" as="geometry" />
        </mxCell>
        <mxCell id="mRYWRtRz6dwpt5iC4FEF-3" value="+Process(const TrajectoryPoint&amp;amp; planning_init_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;Frame* frame) override：&lt;span style=&quot;background-color: initial;&quot;&gt;StageStatus&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LaneFollowStage下的处理函数&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;遍历每一条参考线，对每一条参考线执行成员函数PlanOnReferenceLine，按照成员task执行顺序列表task_list_顺序执行各task&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Angb0N3YarNm8VAPLJ9C-6" vertex="1">
          <mxGeometry y="200" width="840" height="80" as="geometry" />
        </mxCell>
        <mxCell id="mRYWRtRz6dwpt5iC4FEF-4" value="+PlanOnReferenceLine(&lt;span style=&quot;background-color: initial;&quot;&gt;const TrajectoryPoint&amp;amp; planning_start_point, Frame* frame,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLineInfo* reference_line_info)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;一条参考线上的规划处理函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;遍历成员task执行顺序列表task_list_，顺序执行各task的Execute函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Angb0N3YarNm8VAPLJ9C-6" vertex="1">
          <mxGeometry y="280" width="840" height="90" as="geometry" />
        </mxCell>
        <mxCell id="mRYWRtRz6dwpt5iC4FEF-1" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="Angb0N3YarNm8VAPLJ9C-6" target="83LP4jB4d5WOX9b1N9Nl-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12116" y="9661" as="sourcePoint" />
            <mxPoint x="-9950" y="9361" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="mRYWRtRz6dwpt5iC4FEF-2" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="sm0zkWOQGVOP8nTwlXeK-4" target="Angb0N3YarNm8VAPLJ9C-6" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-8916" y="9200" as="sourcePoint" />
            <mxPoint x="-8946" y="9390" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vqDntXXrTw_gSQUieXNy-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;DependencyInjector&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;依赖注射类，用于统一管理规划组件内的共享资源和状态&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="21530" y="-3390" width="780" height="444" as="geometry" />
        </mxCell>
        <mxCell id="vqDntXXrTw_gSQUieXNy-9" value="-planning_context_：PlanningContext&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划上下文&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;历史帧容器，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;存储整个Frame对象，有最全的历史数据但内存占用最大，用于短期历史数据的管理，只存一帧&lt;/span&gt;&lt;br&gt;&lt;div&gt;-frame_history_：FrameHistory&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;存储最关心的历史数据，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;内存占用小，保存5帧，用于中期历史数据的管理，与FrameHistory形成历史数据的分级管理机制&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-history_：History&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-ego_info_：EgoInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车信息&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-vehicle_state_：VehicleStateProvider&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态生成器&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vqDntXXrTw_gSQUieXNy-1" vertex="1">
          <mxGeometry y="60" width="780" height="180" as="geometry" />
        </mxCell>
        <mxCell id="vqDntXXrTw_gSQUieXNy-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="vqDntXXrTw_gSQUieXNy-1" vertex="1">
          <mxGeometry y="240" width="780" height="8" as="geometry" />
        </mxCell>
        <mxCell id="vqDntXXrTw_gSQUieXNy-4" value="+DependencyInjector() = default&lt;div&gt;默认构造&lt;div&gt;&lt;span&gt;各成员若有默认(无参)构造函数则自动被调用&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vqDntXXrTw_gSQUieXNy-1" vertex="1">
          <mxGeometry y="248" width="780" height="196" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleStateProvider&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;自车状态提供器&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=54;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24750" y="-2600" width="750" height="522" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-5" value="-vehicle_state_：VehicleState&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;// 自车状态信息，自车运动状态，类型定义在vehicle_state.proto" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="54" width="750" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-6" value="&lt;strike&gt;-loc_pose_：Pose &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; // 位姿信息，自车在世界坐标系下的位置信息，定位提供，类型定义在localization.proto&lt;/strike&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="84" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="110" width="750" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-4" value="&lt;strike&gt;+Update(const LocalView&amp;amp; local_view)：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新函数，外部接口&lt;/strike&gt;&lt;div&gt;&lt;strike&gt;1. 调用函数get_vehicle_speed_and_acc，对从外部输入local_view取到的速度、加速度进行处理&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;2. 从local_view中读取位姿信息，初始化局部变量local_pose，将上一步中得到的处理后的速度、加速度写入local_pose&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;3. 调用成员函数Update，更新成员vehicle_state_和loc_pose，函数入参local_pose、local_view&lt;br&gt;&lt;/strike&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="118" width="750" height="80" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-7" value="&lt;strike&gt;+Update(Pose&amp;amp; loc_pose, const LocalView&amp;amp; local_view)：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新函数，更新成员vehicle_state_、loc_pose_&lt;/strike&gt;&lt;div&gt;&lt;strike&gt;调用函数&lt;span style=&quot;background-color: initial;&quot;&gt;ConstructExceptLinearVelocity更新成员vehicle_state_&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;其中成员&lt;span style=&quot;background-color: initial;&quot;&gt;loc_pose_由输入loc_pose赋值&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="198" width="750" height="70" as="geometry" />
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-9" value="+Update(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const LocalizationEstimate &amp;amp;localization,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//localview中的定位消息&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Chassis &amp;amp;chassis)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//localview中的底盘消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;根据定位及底盘数据更新车辆状态vehicle_state_&lt;/div&gt;&lt;div&gt;调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;ConstructExceptLinearVelocity更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_中的定位信息，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_中的底盘信息在Update函数中直接更新&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="268" width="750" height="82" as="geometry" />
        </mxCell>
        <mxCell id="-2tjBECkQyzoMxF3ZpL_-12" value="&lt;strike&gt;-get_vehicle_speed_and_acc(const LocalView&amp;amp; local_view,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前帧外部输入数据&lt;/strike&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;strike&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hios::Vec3d&amp;amp; cur_vel,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储自车车速&lt;/strike&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;strike&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hios::Vec3d&amp;amp; cur_acc)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储自车加速度&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;strike&gt;自车车速、加速度处理函数&lt;/strike&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;strike&gt;从外部数据local_view中读取速度、加速度，并将处理后的值存入cur_vel、cur_acc&lt;/strike&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;strike&gt;将local_view内数据转化为车速和加速度信息，有flag控制是否使用滤波处理，目前未开启&lt;/strike&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="350" width="750" height="134" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-1" value="-ConstructExceptLinearVelocity(const LocalizationEstimate &amp;amp;localization)：bool&amp;nbsp;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_中的定位信息&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-2tjBECkQyzoMxF3ZpL_-1" vertex="1">
          <mxGeometry y="484" width="750" height="38" as="geometry" />
        </mxCell>
        <mxCell id="5pu_Kej1jPFEDkICz0Om-1" value="EgoInfo&lt;div&gt;规划专用的自车信息封装类，基于VehicleState构建，但增加了规划相关的计算。业务逻辑层，为规划模块提供专用的信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="22490" y="-2641" width="830" height="624" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-1" value="-vehicle_state_：VehicleState&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;车辆状态&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下为规划专用信息&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="50" width="830" height="180" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-10" value="-start_point_：TrajectoryPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;规划起始点，取轨迹缝合模块的结果" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="230" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-3" value="-ego_vehicle_config_：HardwareConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车硬件参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="256" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-2" value="-ego_box_：math::Box2d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;自车box" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="282" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="5pu_Kej1jPFEDkICz0Om-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="308" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="5pu_Kej1jPFEDkICz0Om-4" value="+EgoInfo()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在构造DependencyInjector时自动被调用&lt;/span&gt;&lt;div&gt;初始化自车硬件参数成员ego_vehicle_config_，&lt;/div&gt;&lt;div&gt;调用整车硬件参数读取器行为类VehicleConfigHelper提供的硬件参数获取函数GetConfig进行初始化&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="316" width="830" height="78" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-9" value="+Update( const TrajectoryPoint&amp;amp; start_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起始点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const VehicleState&amp;amp; vehicle_state)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车辆状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;更新函数，轨迹缝合产生当前帧的规划起始点，之后马上调用自车信息的Update函数&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化成员start_point_、vehicle_state_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化成员ego_box_，调用函数&lt;span style=&quot;background-color: initial;&quot;&gt;CalculateEgoBox&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="394" width="830" height="130" as="geometry" />
        </mxCell>
        <mxCell id="BfkZINDv3VDFjDdHgT_R-11" value="-CalculateEgoBox(const VehicleState&amp;amp; vehicle_state)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车box计算函数&lt;div&gt;从成员ego_vehicle_config_中读取自车尺寸参数&lt;/div&gt;&lt;div&gt;从输入vehicle_state中读取自车位置及朝向&lt;/div&gt;&lt;div&gt;构造Box2d对象，初始化成员自车box&amp;nbsp; eog_box_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5pu_Kej1jPFEDkICz0Om-1" vertex="1">
          <mxGeometry y="524" width="830" height="100" as="geometry" />
        </mxCell>
        <mxCell id="uwaPr1xbMoD9fhfCSXmQ-1" value="Frame&lt;div&gt;规划帧数据，表示一个规划周期内的所有数据&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="22360" y="672" width="750" height="1128" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-9" value="-sequence_num_ = 0：uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;算法运行序列号，表示上电后第几次运行规划算法，在每一帧Frame类构造时写入新值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="48" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-8" value="-local_view_：LocalView" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="74" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-7" value="-planning_start_point_：TrajectoryPoint&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="100" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-6" value="-vehicle_state_：VehicleState&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="126" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-5" value="-reference_line_provider_ = nullptr：const&amp;nbsp;ReferenceLineProvider*" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="152" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-4" value="-injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="178" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-11" value="-now_stamp_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;含义未知，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="204" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-10" value="-map_stamp_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;含义未知，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="230" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-3" value="-prediction_stamp_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;含义未知，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="256" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hVbGudrHFMfS9ClIIC-F-1" value="-st_driving_limits_:STDrivingLimits&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车能力边界，最大能力边界(加减速)和舒适能力边界(加减速)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="282" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-24" value="-st_guide_line_：STGuideLine&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车匀速运动曲线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="308" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="819evsfKjJ2yCAPV1Aj8-1" value="-reference_line_info_：std::list&amp;lt;ReferenceLineInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线相关的信息集合，若换道会有多条，可以对多条参考线运行planning" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="334" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="819evsfKjJ2yCAPV1Aj8-4" value="-hdmap_ = nullptr：const&amp;nbsp;hdmap::HDMap*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="360" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="819evsfKjJ2yCAPV1Aj8-5" value="-obstacles_：ThreadSafeIndexedObstacles&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获取local_view_中的全部感知障碍物，并转化为内部结构" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="386" width="750" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uwaPr1xbMoD9fhfCSXmQ-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="412" width="750" height="8" as="geometry" />
        </mxCell>
        <mxCell id="uwaPr1xbMoD9fhfCSXmQ-4" value="+Frame(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;uint32_t sequence_num,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const LocalView &amp;amp;local_view,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TrajectoryPoint &amp;amp;planning_start_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VehicleState &amp;amp;vehicle_state,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLineProvider *reference_line_provider,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double now_stamp,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double map_stamp,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double prediction_stamp)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，使用初始化列表初始化成员&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="420" width="750" height="192" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-23" value="+Init(const EgoInfo *ego_info,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VehicleStateProvider *vehicle_state_provider,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::list&amp;lt;ReferenceLine&amp;gt;&amp;amp; reference_lines,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::list&amp;lt;hdmap::RouteSegments&amp;gt;&amp;amp; segments,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;TrafficElements&amp;gt;&amp;amp; traffic_elements,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;routing::LaneWaypoint&amp;gt;&amp;amp; future_route_waypoints)：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 初始化Frame类内部的数据结构，调用成员函数InitFrameData&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 初始化成员自车能力边界st_driving_limits_和自车匀速运动曲线st_guide_line_，调用各自对应的Init函数完成初始化&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 初始化成员参考线信息集合reference_line_info_，调用参考线信息集合生成函数CreateReferenceLineInfo，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;获取provider中的reference line 和segement 生成对应的reference line info&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="612" width="750" height="214" as="geometry" />
        </mxCell>
        <mxCell id="819evsfKjJ2yCAPV1Aj8-3" value="-InitFrameData(&lt;span style=&quot;background-color: initial;&quot;&gt;const VehicleStateProvider *vehicle_state_provider,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const EgoInfo *ego_info)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;内部数据结构初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 初始化hdmap引擎指针，初始化成员hdmap_，调用hdmap::HDMapUtil::BaseMapPtr完成初始化，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 预测障碍物的时间补偿，调用成员函数CompensatePredictionObstacles，直接对成员local_view_中的预测障碍物进行时间补偿&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 将预测障碍物转换为内部结构obstacle，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;先调用Obstacle类提供的静态函数CreateObstacle将local_view_中的全部预测障碍物转化为内部类型Obstacle类对象数组&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将上面的到的数组内的各元素调用成员函数AddObstacle依次添加到成员obstacles_，完成障碍物的初始化&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="826" width="750" height="178" as="geometry" />
        </mxCell>
        <mxCell id="819evsfKjJ2yCAPV1Aj8-2" value="-CreateReferenceLineInfo(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::list&amp;lt;ReferenceLine&amp;gt;&amp;amp; reference_lines,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::list&amp;lt;hdmap::RouteSegments&amp;gt;&amp;amp; segments,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;hdmap::TrafficElements&amp;gt;&amp;amp; traffic_elements)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;参考线信息集合生成函数，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;获取provider中的reference line 和segement 生成对应的reference line info&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="uwaPr1xbMoD9fhfCSXmQ-1" vertex="1">
          <mxGeometry y="1004" width="750" height="124" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ReferenceLineProvider&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;参考线构造器&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-7250" y="6691" width="930" height="1210" as="geometry">
            <mxRectangle x="6640" y="1790" width="160" height="50" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-13" value="-map_time_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;地图时间，由local_view中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="50" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-17" value="-accs_state_ = ::haomo::hipilot::fsm::ACCS_STANDBY：::haomo::hipilot::fsm::HiPilotState&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;accs状态，由local_view中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="76" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-1" value="-pnc_map_：std::unique_ptr&amp;lt;hdmap::PncMap&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划地图信息，从local view中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="102" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-2" value="-vehicle_state_provider_ = nullptr：const&amp;nbsp;VehicleStateProvider*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车状态提供器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="128" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-3" value="-vehicle_state_：VehicleState&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="154" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-4" value="-lane_change_status_ = ChangeLaneStatus::STATUS_FORWARD_CURRENT_LANE：ChangeLaneStatus::Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;换道状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="180" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-6" value="-routing_：routing::RoutingResponse&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;routing信息，从local view中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="206" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-14" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="232" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-15" value="+ReferenceLineProvider(const VehicleStateProvider* vehicle_state_provider,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const hdmap::HDMap* base_map,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ChangeLaneStatus::Status&amp;amp; lane_change_status&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="240" width="930" height="84" as="geometry" />
        </mxCell>
        <mxCell id="lSMnCIXTzK2VsKVBzUK_-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+ResetReferenceProvider(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VehicleStateProvider* vehicle_state_provider,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const hdmap::HDMap* base_map,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ChangeLaneStatus::Status&amp;amp; lane_change_status)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线构建器重置函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;更新成员地图信息pnc_map_、自车状态提供器及自车状态&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_provider_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_、换道状态&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lane_change_status_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="324" width="930" height="102" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-5" value="+Start()：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线构建器开始运行函数，返回构建器是否被成功加载标志位&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="426" width="930" height="44" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-7" value="+UpdateVehicleState(const VehicleState&amp;amp; vehicle_state)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车状态vehicle_state_更新函数&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="470" width="930" height="50" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-8" value="+UpdateRoutingResponse(const routing::RoutingResponse&amp;amp; routing)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;routing信息成员routing_更新函数&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="520" width="930" height="50" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-16" value="+UpdateState(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;map_time,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ::haomo::hipilot::fsm::HiPilotState &amp;amp;accs_state)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;状态更新函数&lt;div&gt;更新成员地图时间和acc状态，map_time_、acc_state_&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="570" width="930" height="54" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-19" value="+GetReferenceLines(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;ReferenceLine&amp;gt;* reference_lines,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储生成的参考线内部类型对象&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt;* segments,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储参考线对应的导航路段&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt; TrafficElements &amp;gt;* traffic_elements = nullptr)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储路段中的交通元素，默认空指针&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//return是否成功获取参考线&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;参考线集合获取函数，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;调用参考线实时生成函数CreateReferenceLine，实时生成参考线(转化成内部类型&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLine&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)、通过路由信息生成对应路由片段segments和交通元素&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若实时生成失败调用函数PreReflineToCur将历史帧参考线转换到当前后，并输出&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="624" width="930" height="156" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-18" value="+CreateReferenceLine(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;ReferenceLine&amp;gt; *reference_lines,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt; *segments,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt; TrafficElements &amp;gt; * traffic_elements = nullptr)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;单条参考线实时生成函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 将路由信息成员routing_更新进地图信息成员pnc_map_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.&amp;nbsp;基于上一步pnc_map_中的routing信息，获取一定范围内的segments信息并写入输入&lt;span style=&quot;background-color: initial;&quot;&gt;segments&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，调用路由路段生成函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateRouteSegments&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.&amp;nbsp;对segments进行平滑，并将其转化为reference_line，调用路由片段平滑函数SmoothRouteSegment&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="780" width="930" height="170" as="geometry" />
        </mxCell>
        <mxCell id="PENQQbNwyGfPG_AwT5TW-20" value="+PreReflineToCur(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine &amp;amp;prev_ref,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine &amp;amp;cur_ref,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::RouteSegments &amp;amp;route_segment)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将历史帧参考线转换到当前坐标系下，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="950" width="930" height="80" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-9" value="-CreateRouteSegments(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VehicleState&amp;amp; vehicle_state,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt;* segments,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt; TrafficElements &amp;gt; * traffic_elements)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路由路段生成函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="1030" width="930" height="90" as="geometry" />
        </mxCell>
        <mxCell id="aKZoElbfc-0kpUNSL10w-10" value="-SmoothReferenceLine(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine&amp;amp; raw_reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入参考线粗解，由HDmap生成的path&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine* reference_line)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储平滑后的参考线，并转化为内部类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;参考线平滑器，主要函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PENQQbNwyGfPG_AwT5TW-12" vertex="1">
          <mxGeometry y="1120" width="930" height="90" as="geometry" />
        </mxCell>
        <mxCell id="dgFFTrxqhLXAYFf4LqYH-1" value="History&lt;div&gt;历史类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=36;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25074" y="-3212.5" width="880" height="180" as="geometry" />
        </mxCell>
        <mxCell id="dgFFTrxqhLXAYFf4LqYH-2" value="-history_frames_：std::list&amp;lt;HistoryFrame&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 0, 0);&quot;&gt;作用是管理若干特定历史帧中的特定数据？&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dgFFTrxqhLXAYFf4LqYH-1" vertex="1">
          <mxGeometry y="36" width="880" height="44" as="geometry" />
        </mxCell>
        <mxCell id="dgFFTrxqhLXAYFf4LqYH-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="dgFFTrxqhLXAYFf4LqYH-1" vertex="1">
          <mxGeometry y="80" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="dgFFTrxqhLXAYFf4LqYH-4" value="+Add(const ADCTrajectory&amp;amp; adc_trajectory_pb, const Frame* frame)：int&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史信息添加函数&lt;div&gt;若障碍物历史决策记录器成员history_frames_存储的元素个数大于能力上限(FLAGS标定值，10)，将&lt;span style=&quot;background-color: initial;&quot;&gt;history_frames_的首元素弹出&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;实例化HistoryFrame类对象history_frame，调用其初始化函数Init，将本帧的障碍物决策信息写入，并将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;推入障碍物历史决策记录器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frames_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dgFFTrxqhLXAYFf4LqYH-1" vertex="1">
          <mxGeometry y="88" width="880" height="92" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;template&amp;lt;I, T&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;IndexedQueue&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;用于管理带索引号的的队列，模板参数I表示索引号，T表示存储元素的类型&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=86;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23620" y="-4370" width="750" height="600" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+ capacity_：&lt;span style=&quot;background-color: initial;&quot;&gt;size_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;最大存储个数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;+ queue_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;queue&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;I&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;*&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;队列容器&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;+ map_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unordered_map&amp;lt;I, std::unique_ptr&amp;lt;T&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;哈希&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表，实现通过索引号&lt;/span&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;查找元素&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="sZENc7oY4UMACG6XxRMV-1" vertex="1">
          <mxGeometry y="86" width="750" height="104" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sZENc7oY4UMACG6XxRMV-1" vertex="1">
          <mxGeometry y="190" width="750" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-6" value="+explicit IndexedQueue(size_t capacity)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，队列最大存储容量&lt;br&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化成员存储个数capacity_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;div&gt;+Find(const I id) const：const T*&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，待查找元素的索引号&lt;/div&gt;&lt;div&gt;元素查找函数&lt;/div&gt;&lt;div&gt;根据输入的id在元素表成员map_中查找元素，若能找到返回指向该元素的指针，若找不到返回空指针&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+Latest() const：const T*&lt;/div&gt;&lt;div&gt;获取最新元素&lt;/div&gt;&lt;div&gt;若元素队列为空，返回空指针，若队列非空，返回队列中队尾元素的指针&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ Add(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const I id, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，待添加函数的索引号&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;std::unique_ptr&amp;lt;T&amp;gt; ptr)：bool&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，待添加元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//返回，true表示添加成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;元素添加函数&lt;/div&gt;&lt;div&gt;若输入的元素id在元素表map_中已存在，则不用重复添加，返回false&lt;/div&gt;&lt;div&gt;若元素队列queue_已达到最大存储个数，queue_弹出队首元素，并在map_中删除队首元素，然后将新元素ptr及其id推入queue_和map_&amp;nbsp;&lt;/div&gt;&lt;div&gt;若元素队列queue_未达到最大存储个数，直接将新元素ptr及其id推入queue_和map_&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+Clear()：void&lt;/div&gt;&lt;div&gt;元素清空函数&lt;/div&gt;&lt;div&gt;清空元素队列queue_和元素表map_&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="sZENc7oY4UMACG6XxRMV-1" vertex="1">
          <mxGeometry y="198" width="750" height="402" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;FrameHistory : public IndexedQueue&amp;lt;uint32_t, Frame&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;历史帧容器，存储整个Frame对象，有最全的历史数据但内存占用最大，用于短期历史数据的管理。&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;基类中的索引号用的是Frame对象的序列号&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=80;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23630" y="-3559" width="770" height="139" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-11" value="+FrameHistory()&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;div&gt;调用基类构造函数初始化基类成员，基类构造函数输入为gflags标定量，值为1，仅存储一帧的Frame数据，主要服务于规划算法的连续性&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-8" vertex="1">
          <mxGeometry y="80" width="770" height="59" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HistoryFrame&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;历史某一帧，全部障碍物的决策信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="26040" y="-3252.5" width="760" height="260" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-17" value="-seq_num_：int&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;算法运行序号" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-16" vertex="1">
          <mxGeometry y="50" width="760" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-25" value="-object_decisions_map_：std::unordered_map&amp;lt;std::string, HistoryObjectDecision&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部障碍物决策信息表&lt;div&gt;通过障碍物id查该障碍物对应的决策信息&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-16" vertex="1">
          <mxGeometry y="76" width="760" height="44" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-24" value="-object_decisions_：std::vector&amp;lt;HistoryObjectDecision&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物决策信息序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-16" vertex="1">
          <mxGeometry y="120" width="760" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sZENc7oY4UMACG6XxRMV-16" vertex="1">
          <mxGeometry y="146" width="760" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-19" value="+Init(const ADCTrajectory&amp;amp; adc_trajactory, const Frame* frame = nullptr)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;1. 读取输入&lt;span style=&quot;background-color: initial;&quot;&gt;adc_trajactory中的算法运行序号，初始化成员seq_num_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;读取输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_trajactory中全部障碍物决策，更新成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_decisions_map_和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_decisions_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 从输入frame中拿到控制选择的参考线信息，从该条参考线信息上遍历全部障碍物，若该障碍物在步骤2中漏选，从障碍物中读取决策信息，推入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_decisions_map_和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_decisions_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-16" vertex="1">
          <mxGeometry y="154" width="760" height="106" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-20" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HistoryObjectDecision&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;历史某一帧，某一个障碍物的决策信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=47;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="26884" y="-3189" width="590" height="133" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-21" value="-id_：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-20" vertex="1">
          <mxGeometry y="47" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-1" value="-obstacle_label_info_：ObstacleLabelInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物标签信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-20" vertex="1">
          <mxGeometry y="73" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-22" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sZENc7oY4UMACG6XxRMV-20" vertex="1">
          <mxGeometry y="99" width="590" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-23" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sZENc7oY4UMACG6XxRMV-20" vertex="1">
          <mxGeometry y="107" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sZENc7oY4UMACG6XxRMV-26" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="dgFFTrxqhLXAYFf4LqYH-1" target="sZENc7oY4UMACG6XxRMV-16" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26021" y="-3219.5" as="sourcePoint" />
            <mxPoint x="26181" y="-3219.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PfadxFHSDuf5iIOBuMj2-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="sZENc7oY4UMACG6XxRMV-16" target="sZENc7oY4UMACG6XxRMV-20" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26551" y="-3109.5" as="sourcePoint" />
            <mxPoint x="26711" y="-3109.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ObstaclesFilter&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;障碍物过滤器，进行横纵向规划前对障碍物进行首次过滤&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="37710" y="430" width="810" height="440" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-7" value="-frame_ = nullptr：Frame*&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="50" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-9" value="-reference_line_info_ = nullptr：ReferenceLineInfo*&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="76" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-10" value="-injector_：const&amp;nbsp;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="102" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-8" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_param_：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;haomo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;hios&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::VehicleParameter&amp;nbsp;&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="128" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-7" value="-middle_obstacle_ = nullptr：Obstacle*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在参考线所在车道内自车前方的最近障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="154" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="180" width="810" height="8" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-6" value="+ObstaclesFilter(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Frame* const frame,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLineInfo* const reference_line_info,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 初始化成员&lt;span style=&quot;background-color: initial;&quot;&gt;frame_、reference_line_info_、injector_，通过输入进行初始化&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 初始化成员vehicle_param_，调用整车硬件参数读取器行为类&lt;/span&gt;VehicleConfigHelper提供的方法函数GetConfig进行初始化&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="188" width="810" height="118" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-11" value="+Process()：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;处理函数&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="306" width="810" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-7" value="-SafeDrivingAreaFilter(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Obstacle* obs_ptr,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前判断的障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::stringstream&amp;amp; ignore_tag,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物滤除原因字符串，累加每次滤除处理函数给出的原因&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SLPoint start_point_sl,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起始点sl坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary&amp;amp; obs_safe_driving_st_boundary)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物在安全行驶空间上的投影&lt;/div&gt;&lt;div style=&quot;&quot;&gt;安全行驶空间筛选，滤除和自车安全行驶空间完全没有冲突的障碍物，同时构造障碍物在安全行驶空间上的投影&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-3" vertex="1">
          <mxGeometry y="332" width="810" height="108" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ReferenceLineInfo&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23590" y="990" width="630" height="470" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-13" value="-path_decision_：PathDecision&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="26" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-12" value="-reference_line_：ReferenceLine&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="52" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-15" value="-adc_sl_boundary_：SLBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车的sl边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="78" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-6" value="-vehicle_state_：VehicleState&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="104" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8rNabN1vOXToB5UpGeKC-1" value="-reference_lines_：std::list&amp;lt;ReferenceLine&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部参考线集合，adc架构特有成员" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="130" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-52" value="-candidate_path_boundaries_：std::vector&amp;lt;PathBoundary&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部候选path边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="156" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ykQ-1DgxZussGtBxt8Ce-1" value="-path_data_：PathData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径规划结果，路径数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="182" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ykQ-1DgxZussGtBxt8Ce-2" value="-speed_data_：SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度规划结果，速度线数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="208" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-3" value="&lt;span style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;----------------------------Spatio Temporal Planning------------------------------------&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="234" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-slt_graph_data_：&lt;span style=&quot;background-color: initial;&quot;&gt;SltGraphData&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt图数据类&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="260" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-5" value="-spatiotemporal_data_：SpatiotemporalData&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时空联合规划结果数据类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="286" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="whb2D-vPT6cYOq-rZ65T-14" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="312" width="630" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-20" value="+GetNearestLane(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec2d&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的给定点&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine* refline,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储找到的离给定点最近的参考线&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *curr_s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储给定点相对于最近参考线的s坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *curr_l) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储给定点相对于最近参考线的l坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;给定一点point，在全部参考线集合成员reference_lines_中找到距离给定点point法向距离最近的那条参考线&lt;/div&gt;&lt;div style=&quot;&quot;&gt;使用ReferenceLine中的成员函数GetProjection计算法向距离&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="320" width="630" height="126" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-58" value="+IsChangeLanePath(const Vec2d&amp;amp; point = Vec2d(0, 0)) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断当前参考线是否是变道参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="whb2D-vPT6cYOq-rZ65T-12" vertex="1">
          <mxGeometry y="446" width="630" height="24" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PathDecision&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;路径决策类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="27150" y="990" width="980" height="460" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-2" value="-obstacles_：IndexedList&amp;lt;std::string, Obstacle&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;与规划路径相关的全部障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="50" width="980" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-sorted_obstacle_ids_：std::vector&amp;lt;std::string&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对成员obstacles_按照start_s从小到大排序，得到的障碍物id序列&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-bSorted_ = false：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表示成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sorted_obstacle_ids_是否被初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="76" width="980" height="54" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="130" width="980" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-5" value="+GetSortedObstacles()：const std::vector&amp;lt;std::string&amp;gt;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物排序函数&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;若bSorted_置位，表示障碍物已排序，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sorted_obstacle_ids_已被初始化，直接返回&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;否则，&lt;/span&gt;&lt;span style=&quot;white-space: pre; background-color: initial;&quot;&gt;对成员obstacles_，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;按照sl边界的start_s进行从小到大排序，若start_s相等按照id从大到小排序(&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;有问题&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)，将排好序的障碍物的id序列写入成员sorted_obstacle_ids_，并返回&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="138" width="980" height="62" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-6" value="+Find(const std::string &amp;amp;object_id)：Obstacle*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物查找函数&lt;div&gt;根据输入障碍物id，在成员全部障碍物obstacles_中找到对应障碍物，并返回指向其对象的指针&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="200" width="980" height="40" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-4" value="+AddLateralDecision(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string &amp;amp;tag,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策说明字符串&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::string &amp;amp;object_id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的障碍物id&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectDecisionType &amp;amp;decision)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物横向决策添加函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据object_id在全部障碍物成员obstacles_中找到对应的障碍物对象指针，调用该障碍物的横向决策添加成员函数&lt;/span&gt;AddLateralDecision，将说明文字tag和决策类型decision写入该障碍物&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="240" width="980" height="100" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-3" value="+AddLongitudinalDecision(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string &amp;amp;tag,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策说明字符串&lt;br&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;const std::string &amp;amp;object_id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的障碍物id&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectDecisionType &amp;amp;decision)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策类型&lt;/div&gt;&lt;div style=&quot;&quot;&gt;障碍物横向决策添加函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;根据object_id在全部障碍物成员obstacles_中找到对应的障碍物对象指针，调用该障碍物的横向决策添加成员函数AddLongitudinalDecision，将说明文字tag和决策类型decision写入该障碍物&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-1" vertex="1">
          <mxGeometry y="340" width="980" height="120" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-7" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="EvTDT-Fj80fakcm31R0z-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25351" y="1080" as="sourcePoint" />
            <mxPoint x="25511" y="1080" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25060" y="1220" />
              <mxPoint x="25060" y="1220" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-8" value="Obstacle" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="28800" y="-60" width="1450" height="4760" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-11" value="-id_：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="26" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-12" value="-is_static_ = false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物是否为静止障碍物标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="52" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-9" value="-trajectory_：prediction::PredictedTrajectory&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物预测轨迹，间隔0.1s，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;障碍物box中心点&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="78" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-23" value="-perception_obstacle_：haomo::hidelivery::perception::Obstacle&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;感知障碍物的原始信息，障碍物在当前位置处的信息，类型定义在perception.proto" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="104" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-11" value="-speed_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;感知障碍物的线速度，绝对值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="130" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ROVE3hZnXSCa4a0t-8xv-2" value="-ego_heading_direction_speed_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物相对于自车x轴方向的速度，带正负" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="156" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ROVE3hZnXSCa4a0t-8xv-1" value="-ego_heading_perpendicular_speed_&amp;nbsp;= 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物相对于自车y轴方向的速度，左正右负" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="182" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PF6Y2xG01sav_Ssojxlx-3" value="-cross_out_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物穿出标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="208" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PF6Y2xG01sav_Ssojxlx-2" value="-cross_in_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物穿入标志位，&lt;div&gt;在成员函数GenerateObstacleLabel中进行赋值。障碍物轨迹点在距离范围内25m&amp;lt;s&amp;lt;120m，取障碍物轨迹起止点，若障碍物与自车轨迹有相交且在车道外开始进入 || 没有相交+障碍物轨迹起点在车道外终点在车道内，认为是穿入场景&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="234" width="1450" height="68" as="geometry" />
        </mxCell>
        <mxCell id="cpPd6Z0n5rfuXz8jY5iV-3" value="-is_oncoming_ = false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否为对向障碍物&lt;div&gt;障碍物相对于参考线的heading角(调用Obstacle类成员函数GetHeadingBetweenRef)大于150度或小于-150度，并且车速为逆向(&lt;span style=&quot;background-color: initial;&quot;&gt;调用Obstacle类成员函数IsBackMoving&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="302" width="1450" height="42" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-4" value="-lateral_decision_：ObjectDecisionType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物横向决策" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="344" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-5" value="-longitudinal_decision_：ObjectDecisionType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物纵向决策" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="370" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-8" value="-decisions_：std::vector&amp;lt;ObjectDecisionType&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储当前障碍物的全部历史帧决策，含横纵向决策，越靠近队尾的决策越新" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="396" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-9" value="-decider_tags_：std::vector&amp;lt;std::string&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储当前障碍物的全部历史帧决策说明，含横纵向决策，越靠近队尾的决策越新" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="422" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="wyOEuKBwkvOoyBCTQOAP-2" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;s_lateral_decision_safety_sorter_：&lt;/span&gt;static&amp;nbsp;const&amp;nbsp;std::unordered_map&amp;lt;ObjectDecisionType::ObjectTagCase ,&amp;nbsp;int ,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectTagCaseHash&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;横向决策优先级表，静态成员定义为{{ignore , 0} , {nudge , 100} , {stop , 200}}，数值越大表示优先级越高，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectTagCaseHash是自定义的哈希函数，在此不进行注释&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="448" width="1450" height="64" as="geometry" />
        </mxCell>
        <mxCell id="wyOEuKBwkvOoyBCTQOAP-1" value="-s_longitudinal_decision_safety_sorter_&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;static&amp;nbsp;const&amp;nbsp;std::unordered_map&amp;lt;ObjectDecisionType::ObjectTagCase ,&amp;nbsp;int ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectTagCaseHash&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;纵向决策优先级表，静态成员定义为{{ignore , 0} , {overtake , 100} , {follow , 300}&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, {yield , 400}&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, {stop , 500}&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, {avoid , 600}&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}，数值越大表示优先级越高，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectTagCaseHash是自定义的哈希函数，在此不进行注释&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="512" width="1450" height="64" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-6" value="-obst_ignore_method_：ObstIgnoreMethodInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物ignore忽略方式信息，默认信息为不忽略&lt;div&gt;ObstIgnoreMethodInfo枚举量，NONE&lt;span style=&quot;background-color: initial;&quot;&gt;不忽略&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;、RANGE角度忽略、COLLIDE碰撞点忽略、OTHERINGNORE其他方式忽略&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="576" width="1450" height="48" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-56" value="-speed_decision_ = SpeedDecision::None：SpeedDecision&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度决策信息，none、soft_overtake、soft_yield，dp做soft规划使用" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="624" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-10" value="-sl_boundary_：SLBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;感知障碍物的sl边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="650" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-9" value="-safe_driving_st_boundary_：STBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;安全行驶st边界，以参考线为基准的AABB判碰(使用障碍物sl边界)，考虑借道绕障及处于交换区时自车安全行驶区域的宽度不同" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="676" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-4" value="-reference_line_st_boundary_：STBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物相对于参考线的st边界，判碰区域为以参考线为基准左右扩展半个车宽+buffer(0.4m，双边)，进行AABB判碰" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="702" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-history_decision_：&lt;span style=&quot;background-color: initial;&quot;&gt;std::map&amp;lt;uint8_t, HistoryObjectDecision&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前障碍物的历史决策信息，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;key为历史帧id，当前帧为0，上一帧为1，依次类推&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="728" width="1450" height="40" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-50" value="+obstacle_label_info_：ObstacleLabelInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前障碍物的标签信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="768" width="1450" height="36" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-55" value="+collision_pt_variance_ = std::make_pair(-1.0, -1.0)：std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&lt;div&gt;当前障碍物第一次出现且存在碰撞点时(称为存在初始碰撞点)，此后几帧内碰撞点ts的方差，当前帧存在初始碰撞点，下一帧才会更新该障碍物碰撞点的方差，最多统计历史5帧(不含当前帧)&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若无碰撞，碰撞点ts记录为(0,0)，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在计算当前障碍物多帧碰撞点ts方差时会跳过ts(0,0)点，第一帧碰撞点一定有值，不会出现5帧碰撞点全为(0,0)的情况&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="804" width="1450" height="70" as="geometry" />
        </mxCell>
        <mxCell id="waFQSQXZVvnedTJgKvmD-3" value="&lt;span style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;----------------------------Spatio Temporal Planning------------------------------------&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="874" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="waFQSQXZVvnedTJgKvmD-4" value="+slt_boundarys_：std::vector&amp;lt;SltBoundary&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物的slt边界，vector中存储分段的slt边界段" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="900" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="926" width="1450" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-2" value="+IsLongitudinalIgnore() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物纵向决策是否为ignore" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="934" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-3" value="+IsLateralIgnore() const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物横向决策是否为ignore" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="960" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SrM8P582Z2bL8FnRWLyx-1" value="+IsIgnore() const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物横纵向决策是否都为ignore&lt;div&gt;要求成员lateral_decision_和longitudinal_decision_均为ignore时，才返回true&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="986" width="1450" height="52" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-11" value="+IsBackMoving() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查障碍物车速是否为逆向&lt;div&gt;读取感知障碍物perception_obstacle_的纵向速度vx，小于阈值1m/s&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1038" width="1450" height="42" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-13" value="+IsLaneCrossDirection(const ReferenceLine&amp;amp; reference_line) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;横穿判断函数&lt;div&gt;给定参考线判断当前障碍物的角度是否准备横穿车道&lt;/div&gt;&lt;div&gt;调用角度计算成员函数GetHeadingBetweenRef，计算当前障碍物相对于参考线的heading角，若该heading角绝对值在区间(pi/3 , 2pi/3)内认为障碍物在横穿&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1080" width="1450" height="68" as="geometry" />
        </mxCell>
        <mxCell id="cpPd6Z0n5rfuXz8jY5iV-4" value="+IsStableCrossObs() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;稳定横穿障碍物判断函数&lt;/span&gt;&lt;div&gt;调用稳定碰撞判断函数&lt;span style=&quot;background-color: initial;&quot;&gt;IsStableCollisionObstacle，若当前障碍物非稳定碰撞，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用历史帧决策信息读取函数getHistoryDecision，若历史5帧(不含当前帧)当前障碍物的决策都存在且横穿信息cross_obs_info中的横穿场景都为true，返回true稳定横穿，否则返回false&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1148" width="1450" height="88" as="geometry" />
        </mxCell>
        <mxCell id="cpPd6Z0n5rfuXz8jY5iV-5" value="+IsStableCollisionObstacle() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;稳定碰撞障碍物判断函数&lt;div&gt;读取障碍物碰撞点ts方差成员&lt;span style=&quot;background-color: initial;&quot;&gt;collision_pt_variance_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_pt_variance_为默认值(-1,-1)，说明当前障碍物碰撞点ts方差未初始化，障碍物在历史帧中出现不连续导致没有方差值，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_pt_variance_被初始化，划定ts方差稳定性评估线，var(s)_max = -5*var(t) + 1.9，若var(s) &amp;gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;var(s)_max，即ts方差点在评估线上方，说明不是稳定碰撞，返回false，否则返回true&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1236" width="1450" height="90" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-16" value="+GetHeadingBetweenRef(const ReferenceLine&amp;amp; reference_line) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的指定参考线&lt;div&gt;计算障碍物与指定参考线上的heading差，左正右负&lt;/div&gt;&lt;div&gt;1. 调用给定参考线&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line的参考点获取函数GetReferencePoint，得到障碍物sl边界sl_boundary_中点s处的参考线点，计算感知障碍物与参考点之间的角度差&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2. 调用数学工具集中的角度归一化函数NormalizeAngle，将角度差转化到[-pi , pi)&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1326" width="1450" height="72" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-21" value="+HasTrajectory() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物轨迹trajectory_是否为空" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1398" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-22" value="+GetBoundingBox(const TrajectoryPoint&amp;amp; point) const：Box2d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回障碍物在输入轨迹点处的bounding box&lt;div&gt;通过输入轨迹点得到障碍物的xy坐标和heading角，通过成员感知障碍物&lt;span style=&quot;background-color: initial;&quot;&gt;perception_obstacle_得到障碍物的长宽&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构造Box2d对象并返回&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1424" width="1450" height="52" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-2" value="+GetSafetyBuffer(SafetyBufType type = SafetyBufType::Default) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物边界单边膨胀值获取函数&lt;div&gt;按照不同工况下想要获取的是最大Max、最小Min还是默认Default单边边界膨胀值返回&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1476" width="1450" height="50" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-2" value="+AddLateralDecision(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string&amp;amp; decider_tag,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策说明字符串&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectDecisionType&amp;amp; decision)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;横向决策添加函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 判断需要添加的决策类型decision是否属于横向决策类型，调用判断成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsLateralDecision进行判断&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 将新添加的决策类型decision与老的横向决策类型成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lateral_decision_按照优先级进行融合，调用横向决策融合函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;MergeLateralDecision，融合结果更新到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lateral_decision_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 决策入列，将新添加的决策类型decision和决策说明decider_tag，推入当前障碍物决策历史队列&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;decisions_、decider_tags_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1526" width="1450" height="130" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-5" value="+AddLongitudinalDecision&lt;span style=&quot;background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::string&amp;amp; decider_tag,&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//需要添加的决策说明字符串&lt;/span&gt;&lt;br&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const ObjectDecisionType&amp;amp; decision)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要添加的决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;纵向决策添加函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 判断需要添加的决策类型decision是否属于纵向决策类型，调用判断成员函数&lt;/span&gt;IsLongitudinalDecision&lt;span style=&quot;background-color: initial;&quot;&gt;进行判断&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 将新添加的决策类型decision与老的纵向决策类型成员&lt;/span&gt;longitudinal_decision_&lt;span style=&quot;background-color: initial;&quot;&gt;按照优先级进行融合，调用纵向决策融合函数&lt;/span&gt;MergeLongitudinalDecision&lt;span style=&quot;background-color: initial;&quot;&gt;，融合结果更新到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;longitudinal_decision_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 决策入列，将新添加的决策类型decision和决策说明decider_tag，推入当前障碍物决策历史队列&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;decisions_、decider_tags_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1656" width="1450" height="130" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-7" value="+IsLateralDecision(const ObjectDecisionType&amp;amp; decision)：static&amp;nbsp;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的决策类型是否属于横向决策&lt;div&gt;当输入的决策类型&lt;span style=&quot;background-color: initial;&quot;&gt;decision为ignore或nudge时，认为属于横向决策类型，返回true&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1786" width="1450" height="70" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-6" value="+IsLongitudinalDecision(const ObjectDecisionType&amp;amp; decision)：static&amp;nbsp;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的决策类型是否属于纵向决策&lt;br&gt;&lt;div&gt;当输入的决策类型decision为ignore、stop、yield、follow、overtake时，认为属于纵向决策类型，返回true&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1856" width="1450" height="70" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-6" value="+getHistoryDecision(int history_num) const：const&amp;nbsp;HistoryObjectDecision*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获取当前障碍物历史某一帧的决策信息&lt;div&gt;从当前障碍物的历史决策信息成员history_decision_中获取给定历史帧&lt;span style=&quot;background-color: initial;&quot;&gt;history_num处的历史决策指针，当前帧为0上一帧为1，依次类推；若无法找到，返回空指针&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1926" width="1450" height="64" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-3" value="+BuildReferenceLineStBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine&amp;amp; reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//作为基准使用的参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double adc_start_s)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;//规划起点s坐标&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构建障碍物相对于参考线的st边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 若障碍物相对于参考线的st边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_非空，为节省算力无需重复更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 若障碍物静止，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_的生成方法同成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;BuildSafeDrivingAreaStBoundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 若障碍物是动态障碍物，直接调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;BuildTrajectoryStBoundary，使用默认参数，即&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判碰区域为以参考线为基准左右扩展半个车宽+buffer(0.4m，双边)，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="1990" width="1450" height="154" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-8" value="+BuildSafeDrivingAreaStBoundary(const ReferenceLine&amp;amp; reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//作为计算基准使用的参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double adc_start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起点的s坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double adc_start_l,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划起点&lt;/span&gt;&lt;span style=&quot;white-space: pre; background-color: initial;&quot;&gt;的l坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;bool in_exchange_area = false,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//是否在交换区标志位，默认不在交换区&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LaneBorrowNudgeStatus lane_borrow_status = LaneBorrowNudgeStatus::NO_BORROW,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//借道绕障状态，默认不借道&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double kLateralSafeDis = 0.0)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//横向安全buffer，默认不增加buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;安全行驶st边界构建函数&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;计算障碍物的安全行驶st边界并写入成员&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_非空并且不在交换区 !&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;in_exchange_area，说明此时参考线比较稳定，为节省算力无需重复更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 若障碍物静止 is_static_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用输入参考线reference_line的交叠判断函数IsOnLane判断障碍物的sl边界sl_boundary_与参考线是否有交叠，无交叠直接返回不进行&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_的构造&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若有交叠，在点对序列中只存入0s和规划终了时刻处的两个点对，lower_point = 障碍物sl边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sl_boundary_的start_s -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_start_s，upp&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;er_point = 障碍物sl边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sl_boundary_的end_s -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_start_s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用STBoundary构造函数，将点对序列变为障碍物的st边界(清除冗余点)存入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 若障碍物是动态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;确定自车安全行驶区域宽度，若自车向某一侧进行借道绕障，该侧的安全行驶区域边界为该侧车道线+buffer，另一侧的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;安全行驶区域边界为自车横向边界+buffer；若自车不绕障或在交换区，两侧的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;安全行驶区域左右边界都为自车横向边界+buffer，调用安全行驶st边界构建函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;BuildTrajectoryStBoundary，构建结果存入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;其实传入的自车后轴中心的l坐标转换成了&lt;span style=&quot;background-color: initial;&quot;&gt;安全行驶区域中心线的l坐标，传入的自车横向安全buffer就是安全行驶区域宽度 - 自车车宽，所以进行安全行驶st边界计算时就是按照上面的安全行驶区域宽度进行判碰的&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="2144" width="1450" height="360" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-1" value="-MergeLateralDecision(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectDecisionType&amp;amp; lhs,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//老决策类型&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectDecisionType&amp;amp; rhs)：&lt;span style=&quot;background-color: initial;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectDecisionType&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//新决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;横向决策融合函数，将新老决策进行融合，返回融合后的决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 若老决策类型没有进行初始化(默认决策类型标签为&lt;/span&gt;object_tag_no_set&lt;span style=&quot;background-color: initial;&quot;&gt;)，返回新决策类型；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若新决策类型没有进行初始化&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，返回老决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 调用Protobuf提供的map容器查值函数FindOrDie(根据输入的键在map容器中查对应的值，若找不到程序中断)，在横向决策优先级表成员&lt;/span&gt;s_lateral_decision_safety_sorter_中获取新老决策类型对应的优先级值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若不等返回优先级高的决策类型；&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若相等，都是ignore，返回新决策(返回谁都行)；都是nudge，若绕障方向不同相信老决策，若方向一致，返回横向位移大的决策类型；都是stop或其他决策类型，返回老决策&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="2504" width="1450" height="180" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-10" value="-MergeLongitudinalDecision&lt;span style=&quot;background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const ObjectDecisionType&amp;amp; lhs,&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//老决策类型&lt;/span&gt;&lt;br&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const ObjectDecisionType&amp;amp; rhs)：&lt;span style=&quot;background-color: initial;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectDecisionType&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//新决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;纵向决策融合函数，将新老决策进行融合，返回融合后的决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 若老决策类型没有进行初始化(默认决策类型标签为&lt;/span&gt;object_tag_no_set&lt;span style=&quot;background-color: initial;&quot;&gt;)，返回新决策类型；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若新决策类型没有进行初始化&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，返回老决策类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 调用Protobuf提供的map容器查值函数FindOrDie(根据输入的键在map容器中查对应的值，若找不到程序中断)，在纵向决策优先级表成员&lt;/span&gt;s_longitudinal_decision_safety_sorter_中获取新老决策类型对应的优先级值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若不等返回优先级高的决策类型；&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若相等，都是ignore，返回新决策(返回谁都行)；都是stop，优先选择跟停距离小的决策；都是yield，优先选择让行距离小的决策；都是follow，优先选择跟车距离小的决策；都是overtake，优先选择超车距离大的决策；都是avoid或其他决策类型，返回老决策&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="2684" width="1450" height="190" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-38" value="-BuildTrajectoryStBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine&amp;amp; reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//作为判碰基准的参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double adc_start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起点的s坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary* const st_boundary,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储生成的安全行驶st边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double adc_safe_drive_buffer =&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;FLAGS_nonstatic_obstacle_nudge_l_buffer,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车横向安全buffer，双边，默认值0.4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double adc_shift_l = 0.0)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车后轴中心点的l坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;安全行驶st边界构建函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;根据障碍物预测轨迹基于参考线构建安全行驶st边界&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 障碍物有效性检查，调用有效性检查成员函数IsValidObstacle，检查当前障碍物的感知信息成员perception_obstacle_是否有效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 若预测轨迹成员trajectory_中的轨迹点为空，返回false&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 确定粗搜索和细搜索步长&lt;/div&gt;&lt;div style=&quot;&quot;&gt;粗搜索步长代码中计算的过大，有可能出现对于横穿障碍物漏检，应为自车车宽+&lt;span style=&quot;background-color: initial;&quot;&gt;adc_safe_drive_buffer+障碍物box对角线长度，该长度是在障碍物法向横穿参考线时障碍物穿入穿出时的最大轨迹长度，有角度横穿的轨迹长度一定大于该步长，因此不会出现漏检&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;细搜索步长 = 0.25*障碍物总长，取值范围在[0.2, 0.6]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. 两层循环，外层粗搜索，内层细搜索&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;粗搜索，遍历预测轨迹成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;trajectory_中的各个轨迹点，每隔一个粗搜索步长(通过两点间距离计算函数DistanceXY判断两轨迹点之间的直线距离是否大于粗搜索步长)校验一次障碍物在该轨迹点处的sl边界(通过输入参考线reference_line的box sl边界计算函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetApproximateSLBoundary获得&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)与同参考线平行的自安全行驶区域进行AABB判碰，其中自车安全行驶区域与参考线reference_line平行，以自车后轴中心为起点，宽度为自车总宽+横向安全buffer&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_safe_drive_buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若粗搜索检测有碰撞则进行细搜索，以回退一个粗搜索步长的障碍物轨迹点作为起点，按照每隔一个细搜索步长进行进行AABB判碰，障碍物sl边界生成及与自车安全行驶区域的判碰方法同上，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;细搜索检测出有碰撞后将此时障碍物轨迹点上的t，障碍物sl边界的start_s - 细搜索步长 - 规划起点的s&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_start_s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;作为lower_point，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物sl边界的end_s + 细搜索步长&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 规划起点的s&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_start_s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;作为upper_point，存入点对序列&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5. 细搜索完成后得到完整的碰撞点对序列，调用std::unique函数序列中的清除重复点对(相邻点对的时间间隔小于0.05认为是重复点对)，调用STBoundary构造函数，将点对序列变为障碍物的st边界(清除冗余点)存入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="2874" width="1450" height="376" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-39" value="-IsValidObstacle(const perception::Obstacle&amp;amp; perception_obstacle)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物有效性校验函数&lt;div&gt;通过成员感知障碍物原始信息&lt;span style=&quot;background-color: initial;&quot;&gt;perception_obstacle_，校验该障碍物对象是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若感知障碍物原始信息中障碍物的长宽非nan值且大于0，返回true，认为该障碍物有效&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="3250" width="1450" height="60" as="geometry" />
        </mxCell>
        <mxCell id="lSMnCIXTzK2VsKVBzUK_-1" value="-template &amp;lt;typename U, typename V&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;DistanceXY(const U&amp;amp; u, const V&amp;amp; v) {&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;hypot&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;x&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;() &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;x&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(), &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;u&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;y&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;() &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;y&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;());&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;两点间距离计算函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="3310" width="1450" height="50" as="geometry" />
        </mxCell>
        <mxCell id="waFQSQXZVvnedTJgKvmD-1" value="&lt;span style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;----------------------------Spatio Temporal Planning------------------------------------&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="3360" width="1450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="waFQSQXZVvnedTJgKvmD-5" value="+BuildReferenceLineSltBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine &amp;amp;reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const FrenetFramePoint &amp;amp;adc_frenet_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltLateralBounds &amp;amp;lateral_bounds,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前路径的PathBound&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_expand,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//slt边界是否需要膨胀，如果是变道参考线则需要膨胀&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_lane_change_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前参考线是否为变道参考线&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const STBoundary::BoundaryType &amp;amp;boundary_type,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物st边界的类型&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_normal_road,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前是否是普通车道，有车道线的那种&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_routing_lane_change,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//在当前规划中是否有导航变道，未使用&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_need_merge)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//在当前规划中是否有合流，未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构建障碍物的slt边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 对于静态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1. 若障碍物的感知类型为ST_ROAD_SIDE_OBSTACLE&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.1.1. 若该障碍物的sl边界的长宽&amp;lt;=0.1，该静止障碍物可以近似成一个点，boundarys中该静止障碍物的起终点都为感知位置的&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;sl-box的尾边中点&lt;/span&gt;，起终点时间分别为0和最大规划时长，长宽为感知长宽&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.1.2. 否则该静止障碍物不能近似成一个点，将该静止障碍物的sl-box连接对角线(start_s, start_l)到(end_s, end_l)，从start_l起以0.1的分辨率沿对角线划分若干小sl-box，boundarys中存储这些小sl-box，每个&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;小sl-box的起终点都为其尾边中点&lt;/span&gt;，&lt;span style=&quot;background-color: initial;&quot;&gt;起终点时间分别为0和最大规划时长，长宽为该小sl-box的长宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.2. 若该静态障碍物的感知类型为其他，boundarys中该静止障碍物的&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;起点为其感知sl-box的尾边中点，终点为首边中点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;起终点时间分别为0和最大规划时长，长宽为感知长宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 对于动态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1. 将动态障碍物轨迹超过参考线长度的部分截断，注意轨迹点是障碍物box中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2. 以动态障碍物右切入为例，在障碍物轨迹起点和终点处建立相应的sl-box，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若在轨迹起点处动态障碍物的sl-box和adc当前的sl-box在l轴上没有交叠，且在轨迹终点处动态障碍物的sl-box与adc在pathbound内能到达的l最小位置处的sl-box有交叠，认为发生了右cutin。左cutin判断方法一致&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.1. 以动态障碍物右切入为例，找到障碍物轨迹点中障碍物sl-box左边界+0.4buffer未侵入adc的pathbound右边界的最近轨迹点，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用两次成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AddNonstaticObstacleSltBoundary，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每段轨迹的起终点都为&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;动态障碍物的轨迹点(box中心)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，且不记录每段轨迹中除首尾点外的其他点。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;注意存在满足条件2.2但不满足条件2.2.1的情况&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，此时一段轨迹为整段障碍物轨迹另一段起终点重合。左切入同理。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.3. 在非正常道路下，以动态障碍物右切入为例，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在障碍物轨迹起点和终点处建立相应的sl-box，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将adc的pathbound右侧向右扩展半个adc宽后，若轨迹起点在扩展后的边界右侧(这个条件与2.2有所不同)，且&lt;span style=&quot;background-color: initial;&quot;&gt;在轨迹终点处动态障碍物的sl-box与adc在pathbound内能到达的l最小位置处的sl-box有交叠，认为发生了右cutin。左cutin判断方法一致&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.3.1. 轨迹分段方法与boundarys填入方法同2.2.1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.4. 其他工况&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AddNonstaticObstacleSltBoundary将该动态障碍物整段轨迹填入boundarys&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateSltBoundary，将boundarys中的轨迹段生成该障碍物的slt边界四棱柱段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="3386" width="1450" height="554" as="geometry" />
        </mxCell>
        <mxCell id="waFQSQXZVvnedTJgKvmD-2" value="+AddNonstaticObstacleSltBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;adc_start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起始点的s&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;const double &amp;amp;start_s1,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该段障碍物轨迹起点的s，轨迹点位于障碍物box的中心&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;start_l,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//该段障碍物轨迹起点的l，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点位于障碍物box的中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;start_t,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//该段障碍物轨迹起点的t，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点位于障碍物box的中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;end_s1,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//该段障碍物轨迹终点的s，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点位于障碍物box的中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;end_l,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//该段障碍物轨迹终点的l，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点位于障碍物box的中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;end_t,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//该段障碍物轨迹终点的t，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点位于障碍物box的中心&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::array&amp;lt;double, 8&amp;gt;&amp;gt; &amp;amp;boundarys)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储slt轨迹的容器，slt轨迹分段存储(存于vector)，每段存储元素为&amp;lt;起点的slt，终点的slt，障碍物感知的长宽&amp;gt;(存于array)，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; 该填入该容器轨迹段的起终点都在对应轨迹点的sl-box的尾边中点处，且自车的start_s处为s原点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;添加动态障碍物的slt轨迹段，到slt轨迹段容器boundarys&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;向boundarys中填入轨迹段时将起终点修正为障碍物对应轨迹点sl-box的尾边中点&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="3940" width="1450" height="240" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-2" value="+CreateSltBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLine &amp;amp;reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const SltLateralBounds &amp;amp;lateral_bounds,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前路径的PathBound&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VehicleParam &amp;amp;adc_param,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车辆参数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;std::array&amp;lt;double, 8&amp;gt;&amp;gt; &amp;amp;boundarys,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//填充好的&lt;span style=&quot;background-color: initial;&quot;&gt;slt轨迹段的容器，slt轨迹分段存储(存于vector)，每段存储元素为&amp;lt;起点的slt，终点的slt，障碍物box的长宽&amp;gt;(存于array)，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; 该输入数据的起终点都在sl-box的尾边或首边中点处，且自车的start_s处为s原点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_expand,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//是否需要膨胀slt边界，只有在换道时需要膨胀&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_lane_change_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前参考线是否为变道参考线&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const bool is_cutin,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物轨迹是否为cutin&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double adc_start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起点的s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const STBoundary::BoundaryType &amp;amp;boundary_type)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//障碍物st边界的类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物slt边界棱柱生成函数，障碍物的每段slt边界棱柱都是垂直于ST平面的，即棱柱左右两面每个面的4个角点的l坐标相同。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;注意输入boundarys中存储的是slt轨迹段，在该函数中会将多段轨迹段生成为多段三维四棱柱段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;遍历输入的slt轨迹段容器boundarys中的每一个轨迹段，生成对应的slt四棱柱段，依次填入成员slt_boundarys_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;对于每一个slt四棱柱段的生成，关键输入为该四棱柱的8个顶点，为得到该8个顶点需要：底面的s范围[lower_start_s, upper_start_s]、顶面的s范围[lower_end_s, upper_end_s]、四棱柱在l轴上的范围[min_l, max_l]、四棱柱在t轴的范围[start_t, end_t]，下面分别说明这8个量的计算方法&lt;/div&gt;&lt;div style=&quot;&quot;&gt;lower_start_s：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点s坐标，考虑自车半长(减)，考虑buffer(减，静态障碍物为0动态为1)。若输入的boundary_type为OVERTAKE，向负s方向膨胀，将该值置为负，保证不搜索lower_s下方区域&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;upper_start_s：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点s坐标 + 障碍物感知长度，考虑自车半长(加)，考虑buffer(加，静态障碍物为0动态为0.2)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;。若输入的boundary_type为FOLLOW，向正s方向膨胀，将该值置为极大值，保证不搜索upper_s上方区域&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;lower_end_s：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段终点s坐标，考虑自车半长(减)，考虑buffer(减，静态障碍物为0动态为1)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;。若输入的boundary_type为OVERTAKE，向负s方向膨胀，将该值置为负，保证不搜索lower_s下方区域&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;upper_end_s：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段终点s坐标 + 障碍物感知长度，考虑自车半长(加)，考虑buffer(加，静态障碍物为0动态为0.2)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;。若输入的boundary_type为FOLLOW，向正s方向膨胀，将该值置为极大值，保证不搜索upper_s上方区域&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;min_l：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起终点l坐标取最小，考虑障碍物感知半宽(减)和adc半宽(减)，考虑buffer(减，默认0.2，静止障碍物0.3；若点(upper_start_s, 轨迹段起点l)不在参考线车道内或障碍物起点位置在adc后方，将buffer在前面基础上/2；若障碍物的感知类型为&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp;ST_ROAD_SIDE_OBSTACLE，buffer为0.1&lt;span style=&quot;background-color: initial;&quot;&gt;)；&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; 对于cutin工况，有第二段slt轨迹段的障碍物，上面求得的min_l与pathbound的min_l取最小；&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; 需要换道膨胀slt边界的情况且感知障碍物类型不为&lt;/span&gt;ST_TRAFFICCONE和ST_ROAD_SIDE_OBSTACLE，缩放min_l&lt;/div&gt;&lt;div style=&quot;&quot;&gt;max_l：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起终点l坐标取最大，考虑障碍物感知半宽(加)和adc半宽(加)，考虑buffer(加，同上&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; 对于cutin工况，有第二段slt轨迹段的障碍物，上面求得的max_l与pathbound的max_l取最大；&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; 需要换道膨胀slt边界的情况且感知障碍物类型不为&lt;/span&gt;ST_TRAFFICCONE和ST_ROAD_SIDE_OBSTACLE，缩放max_l&lt;/div&gt;&lt;div style=&quot;&quot;&gt;start_t：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点的相对时间&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;end_t：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段终点的相对时间&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_min_l：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点l坐标，考虑障碍物感知半宽(减)和adc半宽(减)，考虑buffer(减，同min_l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)；&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;start_max_l：&lt;span style=&quot;background-color: initial;&quot;&gt;boundarys中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点l坐标，考虑障碍物感知半宽(加)和adc半宽(加)，考虑buffer(加，同max_l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-8" vertex="1">
          <mxGeometry y="4180" width="1450" height="580" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-13" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ReferenceLine&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;参考线&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="23990" y="2080" width="940" height="1626" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-14" value="-accumulated_s_：std::vector&amp;lt;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;参考线上的离散参考点s坐标，递增序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="50" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-3" value="-reference_points_：std::vector&amp;lt;ReferencePoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;参考线上的离散参考点，平滑后的结果" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="76" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-7" value="-map_path_：hdmap::Path&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;高精地图上的路径，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;地图路径与参考线重合主要使用地图类中的操作函数获取一些地图相关信息&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="102" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-1" value="-width_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线所在车道宽度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="128" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-10" value="-is_curve_lane_ =false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线是否为弯道" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="154" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-15" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="180" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-8" value="+ReferenceLine() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="188" width="940" height="36" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-18" value="+ReferenceLine(const std::vector&amp;lt;ReferencePoint&amp;gt; &amp;amp;reference_points)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;给成员reference_points_赋值&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;ReferencePoint是MapPathPoint的子类，可以进行类型转换，调用Path的构造函数，初始化map_path_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="224" width="940" height="76" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-17" value="+Length() const { return accumulated_s_.back(); }：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回参考线长度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="300" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+GetLaneWidth(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//需要获取路宽的路径点s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double* lane_left_width,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//存储左半车道宽，绝对值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double* lane_right_width) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;/存储右半车道宽，绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路宽获取函数，通过成员width_计算&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;车道宽width_的一半，最大不超过2.5m，最小不超过1.1m，同时赋给&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lane_left_width、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lane_right_width&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="326" width="940" height="126" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-18" value="+GetRoadWidth(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double s,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double* road_left_width,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double* road_right_width) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路宽获取函数，由感知边界及记忆地图边界获取，到路沿的宽度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;获取s点处的道路宽度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;其中&lt;span style=&quot;background-color: initial;&quot;&gt;road_left_width存储参考线左侧路宽，绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;其中&lt;span style=&quot;background-color: initial;&quot;&gt;road_right_width存储参考线右侧路宽，绝对值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="452" width="940" height="130" as="geometry" />
        </mxCell>
        <mxCell id="EvTDT-Fj80fakcm31R0z-16" value="+IsOnLane(const SLBoundary&amp;amp; sl_boundary) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的物体sl边界是否与车道有交叠&lt;div&gt;1. 若输入的物体sl边界的end_s&amp;lt;0或start_s&amp;gt;参考线长度，返回false&lt;/div&gt;&lt;div&gt;2. 通过start_s和end_s找到中点s，通过路宽获取函数GetRoadWidth，得到中点s处的左右路宽，判断区间[start_l, end_l]和区间[-右路宽，左路宽]是否有交叠&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="582" width="940" height="60" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-3" value="+IsOnLane(const SLPoint&amp;amp; sl_point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断给定sl点是否在车道内&lt;div&gt;取该s点处的车道左右宽，判断该点的l值是否在车道内&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="642" width="940" height="50" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-4" value="+IsOnLaneBoundary(const SLBoundary&amp;amp; sl_boundary) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的sl边界是否与车道线有交叠，是否压线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="692" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-57" value="+IsInLane(const SLBoundary&amp;amp; sl_boundary) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的物体sl边界是否在车道内" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="718" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-5" value="+IsCenterPointInsideLaneBoundary(const SLBoundary&amp;amp; sl_boundary) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入的sl边界中心点是否在车道内" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="744" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-1" value="+XYToSL(const haomo::hidelivery::math::Vec2d&amp;amp; xy_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//笛卡尔坐标系下的点XY坐标&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;              &lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&amp;nbsp;haomo::hidelivery::planning::SLPoint* const sl_point) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储该点的SL坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将输入点xy_point从笛卡尔坐标系下转到frenet坐标系下，返回是否成功转换的标志位&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;调用投影函数GetProjection得到xy_point在参考线上的投影点s坐标和法线长度，分别作为该点的SL坐标存入sl_point&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="770" width="940" height="100" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-49" value="+template &amp;lt;class XYPoint&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;XYToSL(const XYPoint&amp;amp; xy, common::SLPoint* const sl_point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;上面转换函数的模板函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="870" width="940" height="54" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-2" value="+GetProjection(const Vec2d &amp;amp;point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入待求sl坐标的笛卡尔坐标系下的点&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;double *accumulate_s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储point的s坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;double *lateral) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储point的l坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回是否成功求解标志位&lt;br&gt;&lt;/div&gt;&lt;div&gt;求笛卡尔坐标点point的sl坐标&lt;/div&gt;&lt;div&gt;1. 遍历成员离散参考点reference_points_找到离point欧氏距离最近的参考点索引min_index&lt;/div&gt;&lt;div&gt;2. 由于point可能在&lt;span style=&quot;background-color: initial;&quot;&gt;min_index的前方或者后方，找到在point后方的参考点索引first_index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 通过成员accumulate_s_得到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;first_index处参考点的s坐标，通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;first_index到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;first_index+1参考点之间的单位向量与&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;first_index参考点到point向量之间的内积得到的s变化量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;二者相加得到point在参考线投影点的s坐标即point的s坐标；在通过上述两向量之间的叉积得到point到参考线的法线长度即point的l坐标，由叉积的右手定则，l的符号左正右负&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="924" width="940" height="144" as="geometry" />
        </mxCell>
        <mxCell id="lSMnCIXTzK2VsKVBzUK_-3" value="+GetNearestReferencePoint(const double s) const：ReferencePoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获取成员离散参考点序列refernece_points_中距离s最近的参考点&lt;div&gt;在成员&lt;span style=&quot;background-color: initial;&quot;&gt;accumulated_s_中二分查找找到距离输入s值最近的index，返回成员离散参考点序列reference_points_中对应index的参考点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1068" width="940" height="64" as="geometry" />
        </mxCell>
        <mxCell id="oX0-W374UDRZQNaD2xfE-1" value="+GetReferencePoint(const double s) const：ReferencePoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;插值获取s处的参考点&lt;div&gt;若s &amp;lt; 成员accumulate_s_.front()，返回成员离散参考点序列reference_points_中的第一个参考点&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;s &amp;gt; 成员accumulate_s_.back()，返回成员离散参考点序列reference_points_中的最后一个参考点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;其他情况，找到accumulate_s_中s前后的index，在成员reference_points_中读取对应元素，调用参考点插值构造函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Interpolate，返回插值构造得到的参考点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1132" width="940" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lSMnCIXTzK2VsKVBzUK_-2" value="+GetApproximateSLBoundary(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Box2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待求sl边界的box&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;SLBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sl_boundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储box的sl边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box sl边界近似计算函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 调用投影成员函数GetProjection得到box中心的sl坐标，调用参考点插值构造成员函数GetReferencePoint得到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;投影点的s坐标处的投影参考点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. box的heading与投影参考点的heading角之差，调用数学工具集中的角度归一化函数NormalizeAngle，将该角度差换算到[-pi, pi)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 利用角度差、box的长宽，得到以投影参考点切线和法线建立的笛卡尔坐标系下输入box的AABB box的半长和半宽&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. box中心点的sl坐标结合上一步AABB box的半长和半宽，得到box的sl边界的start_s、end_s、start_l、end_l写入输入sl_boundary&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1212" width="940" height="120" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-9" value="+GetSLBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Box2d&amp;amp; box,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待求sl边界的box&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SLBoundary* const sl_boundary) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储box的精确sl边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;获取box的精确sl边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 读取待求box的四个角点，调用坐标转换成员函数XYToSL将四个角点xy点转换成sl点，由于四个角点是逆时针顺序存储，故转化出来的sl点也是顺序存储&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 采样点增加，对于弯道(is_curv_lane_==true)，对于相邻角点间距离每大于3m(标定)增加一个采样点，各采样点间距相等，转化成sl点。将全部sl点逆时针顺序存入sl_boundary的boundary_point&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 遍历&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_point中的全部sl点，找到start_s、end_s、start_l、end_l，写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sl_boundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1332" width="940" height="142" as="geometry" />
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-10" value="+GetFrenetPoint(const common::PathPoint&amp;amp; path_point) const：FrenetFramePoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;给定一路径点path_point，求其对应的frenet点&lt;div&gt;调XYToSL根据path_point的xy坐标计算其sl坐标&lt;/div&gt;&lt;div&gt;调坐标转化行为类CartesianFrenetConverter中的静态函数CalculateLateralDerivative计算dl&lt;/div&gt;&lt;div&gt;调坐标转化行为类CartesianFrenetConverter中的静态函数CalculateSecondOrderLateralDerivative计算dl&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1474" width="940" height="80" as="geometry" />
        </mxCell>
        <mxCell id="4Gn_80e8UCISwccmX3ai-1" value="-Interpolate(const ReferencePoint&amp;amp; p0, const double s0,&lt;br&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const ReferencePoint&amp;amp; p1, const double s1,&lt;br&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;   &lt;/span&gt;const double s)：ReferencePoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;插值构造s处的参考点&lt;div&gt;指定的s，在p0点和p1点之间线形插值，构造s处的ReferencePoint对象并返回&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EvTDT-Fj80fakcm31R0z-13" vertex="1">
          <mxGeometry y="1554" width="940" height="72" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-1" value="Vec2d&lt;div&gt;二维平面中的向量&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4986" y="6276" width="605" height="610" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-2" value="#x_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;二维平面向量的x坐标&lt;div&gt;#y_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;二维平面向量的y坐标&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-1" vertex="1">
          <mxGeometry y="40" width="605" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="dB0ZBrRWOytsmOrJzNgf-1" vertex="1">
          <mxGeometry y="100" width="605" height="8" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-5" value="+constexpr Vec2d(const double x, const double y) noexcept : x_(x), y_(y) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;constexpr关键字表示常量成员函数，noexcept关键字表示该函数不会抛出异常，这两个关键字都是在编译时起作用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+rotate(const double angle) const：Vec2d &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;输入一个角度angle(弧度制)，返回将该向量旋转这个角度后得到的新向量，旋转角度正方向为x轴正方向到y轴正方向的旋转方向，通过坐标旋转矩阵实现&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+SelfRotate(const double angle)：void&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;将该向量本身绕起点旋转angle角度(弧度)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+Angle() const { return std::atan2(y_, x_); }：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回向量与x轴正方向的夹角，rad&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+InnerProd(const Vec2d &amp;amp;other) const {&lt;span style=&quot;background-color: initial;&quot;&gt;return x_ * other.x() + y_ * other.y();&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}：double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入另外一个向量other，计算两向量之间的内积/点积&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+CrossProd(const Vec2d &amp;amp;other) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入另一个向量other，计算两向量之间的外积/叉积&lt;div&gt;向量积的结果应该用向量表示，由于计算的是二维平面两向量的向量积，因此得到的向量的方向用正负表示，这里输出的是带正负的数值&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;当前向量如果是单位向量时，可以用于计算点到直线的距离&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+DistanceSquareTo(const Vec2d &amp;amp;other) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前点到另一点other之间欧氏距离的平方&lt;div&gt;利用向量的内积计算&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+Vec2d::Length() const { return std::hypot(x_, y_); }：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回向量的模&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+Normalize()：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将该向量转化为单位向量，前提是向量的模&amp;gt;1e-10&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-1" vertex="1">
          <mxGeometry y="108" width="605" height="502" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-10" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;数学工具集&lt;/font&gt;&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;apollo::common::math&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=510;strokeWidth=4;height=100;movable=1;resizable=1;rotatable=1;deletable=1;editable=1;locked=0;connectable=1;" parent="1" vertex="1">
          <mxGeometry x="3996" y="6170" width="3994" height="7980" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-5" value="ReferencePoint : public&amp;nbsp;MapPathPoint&lt;div&gt;参考点&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24810" y="5920" width="930" height="490" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-6" value="-s_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;参考点的s坐标，s轴就是参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="50" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-15" value="-kappa_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;参考点处的曲率" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="76" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-16" value="-dkappa_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;参考点处的曲率一阶导数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="102" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-14" value="-width_：std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;lt;左，右&amp;gt;车道宽，地图信息，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;不应该是子类的成员，父类中包含该信息&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="128" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-17" value="-boundary_type_：std::pair&amp;lt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::LaneBoundaryType::Type,&amp;nbsp;&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::LaneBoundaryType::Type&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;lt;左，右&amp;gt;车道边界线类型，实线or点线，地图信息，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;不应该是子类的成员，父类中包含该信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="154" width="930" height="76" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="230" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-8" value="+ReferencePoint(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const MapPathPoint &amp;amp;map_path_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double kappa,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double dkappa,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double s,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::pair&amp;lt;double, double&amp;gt; width,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::pair&amp;lt;&lt;span style=&quot;background-color: initial;&quot;&gt;hdmap::LaneBoundaryType::Type,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;hdmap::LaneBoundaryType::Type&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;boundary_type)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        : &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::MapPathPoint(map_path_point),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;kappa_(kappa),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;dkappa_(dkappa),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s_(s),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;width_(width),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;boundary_type_(boundary_type) {}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E8_Oqp6gndIfkOiQ3fTA-5" vertex="1">
          <mxGeometry y="238" width="930" height="252" as="geometry" />
        </mxCell>
        <mxCell id="E8_Oqp6gndIfkOiQ3fTA-9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-13" target="rDzTBxRO2xqlzFlOzq0q-34" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="22820" y="1650" as="sourcePoint" />
            <mxPoint x="20810" y="4710" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25490" y="4550" />
              <mxPoint x="25490" y="4550" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PathUtils&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;路径相关工具类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4146" y="4380" width="550" height="214" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-4" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="lMOeIjv8tCqPyVAb7kCa-3" vertex="1">
          <mxGeometry y="50" width="550" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="lMOeIjv8tCqPyVAb7kCa-3" vertex="1">
          <mxGeometry y="76" width="550" height="8" as="geometry" />
        </mxCell>
        <mxCell id="lMOeIjv8tCqPyVAb7kCa-6" value="+IsOverEgoBound(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SLBoundary&amp;amp; ego_sl_boundary,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SLBoundary&amp;amp; obst_sl_boundary,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double range_s,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double lateral_buf)：static&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过l坐标判断&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物和自车是否有横向重叠&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若障碍物在参考线有效长度range_s之外或者障碍物在自车车尾后方，认为与自车无横向重叠&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="lMOeIjv8tCqPyVAb7kCa-3" vertex="1">
          <mxGeometry y="84" width="550" height="130" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PointFactory&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4886" y="4380" width="490" height="140" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-3" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KHmVlSfc8GbFiuBYkc4g-2" vertex="1">
          <mxGeometry y="26" width="490" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="KHmVlSfc8GbFiuBYkc4g-2" vertex="1">
          <mxGeometry y="52" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KHmVlSfc8GbFiuBYkc4g-5" value="+template &amp;lt;typename XYZ&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;ToPoint3D(const XYZ&amp;amp; xyz)：&lt;span style=&quot;background-color: initial;&quot;&gt;static inline haomo::hios::Point3D&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入一个包含xyz坐标属性的类对象，返回一个点，其坐标跟输入对象xyz坐标一致&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KHmVlSfc8GbFiuBYkc4g-2" vertex="1">
          <mxGeometry y="60" width="490" height="80" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-1" value="STBoundary：public Polygon2d" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="30650" y="-1100" width="1000" height="1646" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-2" value="-id_: string&amp;nbsp; 表示这个st边界属于那个障碍物的id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="26" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-3" value="-min_s_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最小s，默认值是double类型能表示的最大值，在构造函数中赋有效值，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="52" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-4" value="-max_s_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最大s，默认值是double类型能表示的最小值，在构造函数中赋有效值，通过upper_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="78" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-5" value="-min_t_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最小t，默认值是double类型能表示的最大值，在构造函数中赋有效值,，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="104" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-6" value="-max_t_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最大t，默认值是double类型能表示的最小值，在构造函数中赋有效值，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="130" width="1000" height="30" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-7" value="-lower_points_:std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary的下边界点，按t从小到大排列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="160" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-8" value="-upper_points_:std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary的上边界点，按t从小到大排列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="186" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-9" value="-obstacle_road_right_ending_t_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物关注截止时间，与路权逻辑有关" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="212" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-1" value="-boundary_type_ = UNKNOWN：BoundaryType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st边界类型，UNKNOW、STOP、FOLLOW、YIELD、OVERTAKE、KEEP_CLEAR、IGNORE" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="238" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;rounded=0;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="264" width="1000" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-23" value="+STBoundary() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="272" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-11" value="+STBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;std::pair&amp;lt;STPoint, STPoint&amp;gt;&amp;gt;&amp;amp; point_pairs,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//st上下边界点对序列，&amp;lt;下边界点，上边界点&amp;gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;bool is_accurate_boundary = false)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//是否不删除冗余点，使用精确st边界，默认生成删除冗余点的st边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;构造函数&lt;div&gt;1. 调用校验函数IsValid对输入点对序列point_pairs进行有效性校验&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2. 根据输入标志位&lt;span style=&quot;background-color: initial;&quot;&gt;is_accurate_boundary决定是否删除点对point_pairs中的冗余点，调用冗余点删除函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;RemoveRedundantPoints对point_pairs进行冗余点的删除&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 初始化操作&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过点对初始化lower_points_、upper_points_、points_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用父类多边形构建函数BuildFromPoints，初始化父类成员&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points_、upper_points_初始化min_s_、max_s_、min_t_、max_t_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="298" width="1000" height="188" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-14" value="+static CreateInstanceAccurate(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; lower_points,&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;   &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; upper_points)：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st边界生成函数，不删除冗余点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将输入lower_points、upper_points组成点对序列，调用STBoundary构造函数，第二个参数为true，不删除冗余点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="486" width="1000" height="70" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-1" value="+static CreateInstance(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; lower_points,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; upper_points)：&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st边界生成函数，删除冗余点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将输入lower_points、upper_points组成点对序列，调用STBoundary构造函数，第二个参数为默认false，删除冗余点&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="556" width="1000" height="70" as="geometry" />
        </mxCell>
        <mxCell id="-9Jbov0V2EktvNGJLPIH-2" value="+IsEmpty() const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st边界非空校验函数&lt;div&gt;校验成员lower_points_、upper_points_非空，返回true&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="626" width="1000" height="50" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-12" value="+GetIndexRange(const std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp; points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定的st点序列，根据时间从小到大排列&lt;/span&gt;&lt;br&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; const double t,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定时刻t&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;size_t* left,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在给定st点序列points中正好包含给定t时刻点的相邻两个st点的较小index&lt;br&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;size_t* right) const:bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//输出，在给定st点序列&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;points中正好包含给定t时刻点的相邻两个st点的较大index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在给定st点序列points中通过二分查找找到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;正好包含给定t时刻点的相邻两个st点的index，较小index存入left，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;较大index存入right，返回是否成功找到标志位&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若输入的给定时刻t超过points的时间范围，返回false&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="676" width="1000" height="104" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-13" value="+&lt;span style=&quot;background-color: rgb(255, 0, 128);&quot;&gt;GetBoundarySRange&lt;/span&gt;(const double curr_time,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入的指定时刻&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double* s_upper,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储指定时刻&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time下的s上边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double* s_lower) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储指定时刻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time下的s下边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在障碍物st边界中找到指定时刻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time处的上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_upper和下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower，返回是否成功找到的标志位&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="780" width="1000" height="100" as="geometry" />
        </mxCell>
        <mxCell id="eADw-x0z1SkMKDb-0Q8s-1" value="+&lt;span style=&quot;background-color: rgb(255, 0, 128);&quot;&gt;GetUnblockSRange&lt;/span&gt;(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double curr_time,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，指定时刻&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *s_upper,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储找到的unblock区域的s_upper&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *s_lower) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输出，存储找到的unblock区域的s_lower&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;给定时刻，根据当前st边界的类型(超、让、停、跟)找到ublock区域的上下s边界，返回是否找到s边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认s_lower赋值为0，s_upper赋值为速度规划最远考虑距离(标定值为250m)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若curr_time不属于[min_t_, max_t_]返回false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;否则调用成员函数GetBoundarySRange找到当前st边界在curr_time下的s上下界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_type_为STOP、YIELD、FOLLOW，unblock区域的s上界为当前st边界的s下界，根据默认赋值此时&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;unblock区域的s下界为0，返回true&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_type_为OVERTAKE，unblock区域的s下界为当前st边界的s上界，根据默认赋值此时&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;unblock区域的s上界为&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;速度规划最远考虑距离(标定值为250m)，返回true&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;其他边界类型同unblock区域的s上下界同&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STOP、YIELD、FOLLOW类型，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;返回false&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="880" width="1000" height="200" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-15" value="+bottom_left_point() const：STPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回st边界的左下角st点，即返回成员lower_points_的第一个点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="1080" width="1000" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-16" value="+IsPointInBoundary(const STPoint&amp;amp; st_point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入需要判断的st点st_point，返回该点是否在调用该函数的STBoundary类对象内部的标志位&lt;div&gt;1.若输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_不在成员最大最小t组成的区间[min_t_，max_t_]内，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetIndexRange，找到在t轴上包含&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_的最小区间左右端点的index，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员lower_points&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建局部变量left、right存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在t轴上包含&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_的最小区间左右端点的index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若步骤2中的左右端点的索引left、right可以找到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，则在成员upper_points和lower_points中可以找到索引left、right对应的st边界四角点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.1调用math命名空间的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CrossProd函数计算输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point到上方两角点形成的两向量的叉乘结果check_upper，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入st_point，成员upper_points_[left]，upper_points_[right]&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.2调用math命名空间的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CrossProd函数计算输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point到下方两角点形成的两向量的叉乘结果check_lower，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入st_point，成员lower_points_[left]，lower_points_[right]&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2.1.3&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若输入st_point在步骤2.1中得到的四角点构成的四边形边界内，check_upper和check_lower应该异号，返回check_upper *&amp;nbsp;check_lower作为判断点是否在边界内的结果&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;否则若步骤2中的左右端点的索引left、right找不到，返回false&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="1106" width="1000" height="244" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-22" value="-IsValid(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const：&lt;/span&gt;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;点对序列有效性检查函数，通过校验返回true&lt;div&gt;对构造函数输入的点对序列point_pairs进行有效性检查&lt;/div&gt;&lt;div&gt;点对个数&amp;lt;2，返回false&lt;/div&gt;&lt;div&gt;校验几何特性，每个点对的上边界要大于下边界，否则返回false&lt;/div&gt;&lt;div&gt;校验时间一致性，每个点对对应的时间要一致，否则返回false&lt;/div&gt;&lt;div&gt;校验时间单调性，相邻两个点对对应的时间要严格单调递增，否则返回false&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="1350" width="1000" height="110" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-19" value="-IsPointNear(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const haomo::hidelivery::math::LineSegment2d&amp;amp; seg,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物st上边界或下边界上两点的连线构成的线段&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const haomo::hidelivery::math::Vec2d&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待判断的st上边界或下边界线段中的点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double max_dist)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//判断阈值，实际使用的是&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;max_dist&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断输入point到线段seg的距离小于阈值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;max_dist&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;会返回true，认为点到线段的距离过近&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="1460" width="1000" height="100" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-18" value="-RemoveRedundantPoints(&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：&lt;/span&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;冗余点删除函数，删除后的结果存在输入point_pairs&lt;div&gt;若输入的点对point_pairs的个数&amp;lt;3个不处理point_pairs&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;输入的点对point_pairs的个数&amp;gt;=3个，进行冗余点的删除，所谓冗余点就是在一条线段上除去线段的端点，其他在线段上的点都是冗余点，因为仅需要两个端点就可以描述这条线段，所以至少有3个点时才会存在冗余点(判断中间那个点是否是冗余点)。通过函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPointNear判断点是否是冗余点，通过点偏离线段的法向距离是否小于阈值0.05来判断该点是否是冗余点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-1" vertex="1">
          <mxGeometry y="1560" width="1000" height="86" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-17" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="4pA_-z59MKvHFUv5A8mC-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28738" y="2010" as="sourcePoint" />
            <mxPoint x="28898" y="2010" as="targetPoint" />
            <Array as="points">
              <mxPoint x="30374" y="250" />
              <mxPoint x="30374" y="250" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-36" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="EvTDT-Fj80fakcm31R0z-13" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25437" y="1490" as="sourcePoint" />
            <mxPoint x="25597" y="1490" as="targetPoint" />
            <mxPoint as="offset" />
            <Array as="points">
              <mxPoint x="24460" y="1410" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-37" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-1" target="EvTDT-Fj80fakcm31R0z-8" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26887" y="1430" as="sourcePoint" />
            <mxPoint x="27047" y="1430" as="targetPoint" />
            <Array as="points">
              <mxPoint x="27207" y="1260" />
              <mxPoint x="27207" y="1260" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="lSMnCIXTzK2VsKVBzUK_-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8WNt9KbTknfimQn_pb-V-8" target="PENQQbNwyGfPG_AwT5TW-12" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-7260" y="7561" as="sourcePoint" />
            <mxPoint x="-7100" y="7561" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;struct ObstacleLabelInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;障碍物标签信息&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=50;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="27544" y="-3235.5" width="710" height="226" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-12" value="+cross_obs_info = {false, {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}}}：std::pair&amp;lt;bool, ObstacleLogInfo&amp;gt;&amp;nbsp;&lt;div&gt;横穿场景信息，&amp;lt;是否为横穿场景，相关统计信息&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-11" vertex="1">
          <mxGeometry y="50" width="710" height="44" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-13" value="+oncoming_obs_info = {false, {OncomingState::State_negative, 0, 0, {0.0, 0.0}}}：std::pair&amp;lt;bool, OncomingObstacleStateInfo&amp;gt;&amp;nbsp;&lt;div&gt;对向场景信息，&amp;lt;是否为对向场景，对向障碍物状态信息&amp;gt;&lt;/div&gt;&lt;div&gt;是否为对向场景的判断：障碍物相对于参考线的heading角(调用Obstacle类成员函数GetHeadingBetweenRef)大于150度或小于-150度，并且车速为逆向(&lt;span style=&quot;background-color: initial;&quot;&gt;调用Obstacle类成员函数IsBackMoving&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-11" vertex="1">
          <mxGeometry y="94" width="710" height="106" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-14" value="+exchange_area_obs_info：ObstacleExchangeAreaInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;交换区场景信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-11" vertex="1">
          <mxGeometry y="200" width="710" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-15" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="sZENc7oY4UMACG6XxRMV-20" target="0_BYmk6WAn4M0TYc1FIY-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="27514" y="-2945.5" as="sourcePoint" />
            <mxPoint x="27674" y="-2945.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;struct ObstacleLogInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;障碍物相关统计信息&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=50;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="28444" y="-3585.5" width="650" height="240" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-17" value="+collision_point_info = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}：std::tuple&amp;lt;double, double, double, double, double, double&amp;gt;&amp;nbsp;&lt;div&gt;碰撞点信息，所谓碰撞就是st边界的左下点信息&lt;/div&gt;&lt;div&gt;&amp;lt;time, s, start_time, start_s, accumulate_s, accumulate_t&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_time ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_s&lt;/span&gt;：&lt;/div&gt;&lt;div&gt;当前障碍物的id在感知到的全部障碍物中第一次出现且相对于参考线的st边界&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_非空(说明有碰撞)时的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;碰撞点st(碰撞点是&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_st_boundary_的左下角点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;time ,&amp;nbsp;&lt;/span&gt;s：&lt;/div&gt;&lt;div&gt;以&lt;span style=&quot;background-color: initial;&quot;&gt;当前障碍物首次出现且相对于参考线存在碰撞时的规划起始点为原点，当前障碍物在&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;此后&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;的每一帧的碰撞点ts，若无碰撞，记录为(0,0)，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在计算当前障碍物多帧碰撞点ts方差时会跳过ts(0,0)点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;accumulate_s, accumulate_t：&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;当前障碍物在持续碰撞的过程中自车驶过的位移和时间累和&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-16" vertex="1">
          <mxGeometry y="50" width="650" height="190" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-20" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="0_BYmk6WAn4M0TYc1FIY-12" target="0_BYmk6WAn4M0TYc1FIY-16" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28178" y="-3165.5" as="sourcePoint" />
            <mxPoint x="28338" y="-3165.5" as="targetPoint" />
            <Array as="points">
              <mxPoint x="28408" y="-3145.5" />
              <mxPoint x="28408" y="-3439.5" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-21" value="struct&amp;nbsp;OncomingObstacleStateInfo&lt;div&gt;对向障碍物状态信息&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=46;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="28444" y="-3192.5" width="630" height="208" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-22" value="+state = OncomingState::State_negative：OncomingState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据对向障碍物位置划分的危险程度优先级" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-21" vertex="1">
          <mxGeometry y="46" width="630" height="34" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-23" value="+state_count = 0：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;限速保持计数&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-21" vertex="1">
          <mxGeometry y="80" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-24" value="+collision_pt_num = 0：int&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;碰撞点计数，碰撞点同横穿碰撞点，用于限速保持" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-21" vertex="1">
          <mxGeometry y="106" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-25" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+min_max_safe_dis = {0.0, 0.0}：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最小最大安全距离&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;最小安全距离：自车和障碍物以激烈减速度(-2)刹车停到时的距离之和&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;最大安全距离：自车和障碍物以舒适减速度(车-1，vru-0.5)刹车到停时的距离之和&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-21" vertex="1">
          <mxGeometry y="132" width="630" height="76" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-26" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="0_BYmk6WAn4M0TYc1FIY-13" target="0_BYmk6WAn4M0TYc1FIY-21" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28538" y="-3165.5" as="sourcePoint" />
            <mxPoint x="28698" y="-3165.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-27" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;struct ObstacleExchangeAreaInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;障碍物交换区场景信息&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=48;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="28444" y="-2835.5" width="320" height="314" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-28" value="+is_considered_obs = false：bool&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="48" width="320" height="32" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-44" value="+collision_pt_num = 0：int&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="80" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-43" value="+collision_pt_time = 0.0：double&amp;nbsp;&lt;div&gt;&lt;span style=&quot;color: rgb(204, 204, 204); font-family: &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;monospace&amp;quot;, monospace; font-size: 14px; white-space: pre; background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="106" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-42" value="+is_st_collision = false：bool&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="132" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-29" value="+is_filtered_by_speed = false：bool&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="158" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-48" value="+exchange_area_decision：ExchangeAreaDecision&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="184" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-47" value="+collision_s = 1e6：double&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="210" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-46" value="+target_t = 0.0：double&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="236" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-45" value="+target_a = 0.0：double&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="262" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-30" value="+count = 0：int&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-27" vertex="1">
          <mxGeometry y="288" width="320" height="26" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-31" value="enum OncomingState" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="29224" y="-3173.5" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-34" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;State_negative = -1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_0 = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_1 = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_2 = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_3 = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_4 = 4,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  State_5 = 5&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-31" vertex="1">
          <mxGeometry y="26" width="200" height="144" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-35" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="0_BYmk6WAn4M0TYc1FIY-21" target="0_BYmk6WAn4M0TYc1FIY-31" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28758" y="-3045.5" as="sourcePoint" />
            <mxPoint x="28918" y="-3045.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-36" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="0_BYmk6WAn4M0TYc1FIY-14" target="0_BYmk6WAn4M0TYc1FIY-27" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28338" y="-3065.5" as="sourcePoint" />
            <mxPoint x="28498" y="-3065.5" as="targetPoint" />
            <Array as="points">
              <mxPoint x="28388" y="-3022.5" />
              <mxPoint x="28388" y="-2665.5" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-37" value="enum&amp;nbsp;ExchangeAreaDecision" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="29034" y="-2683.5" width="250" height="90" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-38" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;NONE = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    OVERTAKE,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    YIELD,&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-37" vertex="1">
          <mxGeometry y="26" width="250" height="64" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-49" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="0_BYmk6WAn4M0TYc1FIY-48" target="0_BYmk6WAn4M0TYc1FIY-37" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="28818" y="-2682.5" as="sourcePoint" />
            <mxPoint x="28978" y="-2682.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-51" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;MathUtils&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;数学工具静态类，planning命名空间中定义的类，math_utils.h&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3476" y="4380" width="380" height="110" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-53" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="0_BYmk6WAn4M0TYc1FIY-51" vertex="1">
          <mxGeometry y="50" width="380" height="8" as="geometry" />
        </mxCell>
        <mxCell id="0_BYmk6WAn4M0TYc1FIY-54" value="+Variance(std::vector&amp;lt;double&amp;gt; nums)：static&amp;nbsp;double&amp;nbsp; &amp;nbsp; 方差计算函数&lt;div&gt;计算输入数组的方差&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="0_BYmk6WAn4M0TYc1FIY-51" vertex="1">
          <mxGeometry y="58" width="380" height="52" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-1" value="SLBoundary.proto" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="30889" y="910" width="490" height="428" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;start_s：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;end_s：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;start_l：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;end_l：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated boundary_point：SLPoint&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;障碍物的sl边界是AABB的边界框，尤其对于斜向障碍物&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;// start_s &amp;lt;= end_s.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;跟目标朝向无关，对象来车也满足此规则&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;//&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;end_s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;|&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;S  direction&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;               |&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;           start_s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;// start_l &amp;lt;= end_l&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相对于参考线左正右负&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;//  end_l  &amp;lt;-----L direction---- start_l&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nDCCbRazvlc0aV2-YhNl-1" vertex="1">
          <mxGeometry y="26" width="490" height="394" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="nDCCbRazvlc0aV2-YhNl-1" vertex="1">
          <mxGeometry y="420" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-4" value="SLPoint.proto&lt;div&gt;/thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=42;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="31974" y="1075" width="370" height="98" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-5" value="s：double&lt;div&gt;l：double&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nDCCbRazvlc0aV2-YhNl-4" vertex="1">
          <mxGeometry y="42" width="370" height="48" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="nDCCbRazvlc0aV2-YhNl-4" vertex="1">
          <mxGeometry y="90" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-7" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="nDCCbRazvlc0aV2-YhNl-1" target="nDCCbRazvlc0aV2-YhNl-4" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="30514" y="1760" as="sourcePoint" />
            <mxPoint x="30674" y="1760" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nDCCbRazvlc0aV2-YhNl-8" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="nDCCbRazvlc0aV2-YhNl-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="30134" y="1910" as="sourcePoint" />
            <mxPoint x="30294" y="1910" as="targetPoint" />
            <Array as="points">
              <mxPoint x="30554" y="1120" />
              <mxPoint x="30554" y="1120" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="cpPd6Z0n5rfuXz8jY5iV-1" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="0_BYmk6WAn4M0TYc1FIY-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="24890" y="570" as="sourcePoint" />
            <mxPoint x="25270" y="70" as="targetPoint" />
            <Array as="points">
              <mxPoint x="29525" y="-1610" />
              <mxPoint x="27899" y="-1610" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PncMap&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6050" y="6907" width="620" height="184" as="geometry" />
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-6" value="-adc_waypoint_：LaneWaypoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车在地图上的路径点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OyVou3_8nrAOeRSeYHn8-5" vertex="1">
          <mxGeometry y="26" width="620" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-50" value="-land_id_passage_：std::map&amp;lt;uint32_t,&amp;nbsp;int&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;第一个元素是lane的id，第二个元素是passage的index&lt;div&gt;passage指不含变道的可行驶通路，因此同一个lane不会在多条passage中&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OyVou3_8nrAOeRSeYHn8-5" vertex="1">
          <mxGeometry y="52" width="620" height="58" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-51" value="-lane_passages_：std::vector&amp;lt;std::vector&amp;lt;uint32_t&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;第一维顺&lt;/span&gt;序存储routing给出的passage，第二维顺序存储各passage中存储的lane的id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OyVou3_8nrAOeRSeYHn8-5" vertex="1">
          <mxGeometry y="110" width="620" height="40" as="geometry" />
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="OyVou3_8nrAOeRSeYHn8-5" vertex="1">
          <mxGeometry y="150" width="620" height="8" as="geometry" />
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-8" value="+IsMergeLaneInCurrentPassage()：const bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断自车路径点所在的当前通道passage是否有合流车道" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="OyVou3_8nrAOeRSeYHn8-5" vertex="1">
          <mxGeometry y="158" width="620" height="26" as="geometry" />
        </mxCell>
        <mxCell id="OyVou3_8nrAOeRSeYHn8-9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="PENQQbNwyGfPG_AwT5TW-12" target="OyVou3_8nrAOeRSeYHn8-5" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-6126" y="7301" as="sourcePoint" />
            <mxPoint x="-5966" y="7301" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-44" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;CartesianFrenetConverter&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;笛卡尔与Frenet坐标系转化行为类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3476" y="4640" width="520" height="310" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-45" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-44" vertex="1">
          <mxGeometry y="50" width="520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-46" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="rDzTBxRO2xqlzFlOzq0q-44" vertex="1">
          <mxGeometry y="76" width="520" height="8" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-47" value="+static CalculateLateralDerivative(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double theta_ref,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double theta,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double l,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double kappa_ref)：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dl计算函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-44" vertex="1">
          <mxGeometry y="84" width="520" height="96" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-48" value="+static CalculateSecondOrderLateralDerivative(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;theta_ref&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;theta&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;kappa_ref&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double kappa,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double dkappa_ref,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double l)：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ddl计算函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-44" vertex="1">
          <mxGeometry y="180" width="520" height="130" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-53" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PathBoundary&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25572" y="-120" width="820" height="206" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-57" value="-start_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界起始点s" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="26" width="820" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-58" value="-delta_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界点之间的s分辨率" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="52" width="820" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-59" value="-boundary_：std::vector&amp;lt;std::pair&amp;lt;double, double&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;右左边界序列，按s从小到大排列，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;pair的第一个元素是右边界l，第二个元素是左边界l&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="78" width="820" height="42" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-61" value="-label_ = &quot;regular&quot;：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界标签" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="120" width="820" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-60" value="-blocking_obstacle_id_ = &quot;&quot;：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;封死边界的障碍物id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="146" width="820" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-55" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="172" width="820" height="8" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-56" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-53" vertex="1">
          <mxGeometry y="180" width="820" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-62" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltLateralBounds&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;修改PathBoundary中边界点按右左排序，实际上跟PathBound是一回事，没有t&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25487" y="174" width="990" height="260" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-66" value="-slt_lateral_bounds_points_：std::vector&amp;lt;std::pair&amp;lt;double,&amp;nbsp;std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;横向边界点序列，第一个参数表示s，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;第二个参数表示左边界l，第三个参数表示右边界l&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在这里左右边界点是adc中心能到达的边界，而非adc的侧边，即计算PathBoundary时没有考虑自车宽&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="50" width="990" height="50" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-68" value="-max_l_ = -std::numeric_limits&amp;lt;double&amp;gt;::infinity()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界点上的l最大值，左边界最外点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="100" width="990" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-67" value="-min_l_ = std::numeric_limits&amp;lt;double&amp;gt;::infinity()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界点上的l最小值，右边界最外点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="126" width="990" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-64" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="152" width="990" height="8" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-65" value="+AppendSltLateralBounds(const double s, const double left, const double right)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;向slt_lateral_bounds_points_后面推入边界点，同时更新max_l_和min_l_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="160" width="990" height="26" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-2" value="+GetMinBoundsByLineSegment(const double start_s, const double end_s) const：std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;指定&lt;/span&gt;s范围[start_s , end_s]，返回这段s内pathbound中{左边界的最小l , 右边界的最大l}&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rDzTBxRO2xqlzFlOzq0q-62" vertex="1">
          <mxGeometry y="186" width="990" height="74" as="geometry" />
        </mxCell>
        <mxCell id="PfZQoZvVqfe-vRKPood8-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpeedPoint.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;速度轨迹点类&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24790" y="4936" width="510" height="188" as="geometry" />
        </mxCell>
        <mxCell id="PfZQoZvVqfe-vRKPood8-2" value="s：double&lt;div&gt;t：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;v：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;m/s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;a：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;m/s2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;da：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;jerk&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="PfZQoZvVqfe-vRKPood8-1" vertex="1">
          <mxGeometry y="60" width="510" height="120" as="geometry" />
        </mxCell>
        <mxCell id="PfZQoZvVqfe-vRKPood8-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="PfZQoZvVqfe-vRKPood8-1" vertex="1">
          <mxGeometry y="180" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Bm0cnpTh91KNojb0FH5s-4" value="FrenetFramePoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24790" y="4530" width="510" height="338" as="geometry" />
        </mxCell>
        <mxCell id="Bm0cnpTh91KNojb0FH5s-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;s：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点的s坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;l&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路径点的l坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;dl&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点的dl/ds，相对于参考线的弧长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ddl&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路径点的d(dl/ds)/ds&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，相对于参考线的弧长&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Bm0cnpTh91KNojb0FH5s-4" vertex="1">
          <mxGeometry y="40" width="510" height="290" as="geometry" />
        </mxCell>
        <mxCell id="Bm0cnpTh91KNojb0FH5s-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Bm0cnpTh91KNojb0FH5s-4" vertex="1">
          <mxGeometry y="330" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="ovLWcOrTUtnBkALvw988-1" value="PathPoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25450" y="4530" width="584" height="330" as="geometry" />
        </mxCell>
        <mxCell id="ovLWcOrTUtnBkALvw988-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;x：double&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下x坐标，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里的直角坐标系都是静态坐标系&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;y&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;z&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下z坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;theta&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;直角坐标系&lt;span style=&quot;background-color: initial;&quot;&gt;下路径点处的heading角&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;kappa&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;直角坐标系&lt;span style=&quot;background-color: initial;&quot;&gt;下路径点处的曲率&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s&lt;/span&gt;：double&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;从路径起点到该路径点的路径弧长，路径起点在规划起始点，认为是自车后轴中心&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dkappa&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;曲率的一阶导数，相对于路径弧长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ddkappa&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;曲率的二阶导数，相对于路径弧长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;lane_id&lt;span style=&quot;background-color: initial;&quot;&gt;：string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路径点所在车道的id&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // derivative of x and y w.r.t parametric parameter t in CosThetareferenceline&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double x_derivative = 10;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double y_derivative = 11;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;l：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点相对于参考线的法向距离，即路径点的l坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="ovLWcOrTUtnBkALvw988-1" vertex="1">
          <mxGeometry y="40" width="584" height="290" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-1" value="TrajectoryPoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;&lt;div&gt;轨迹点类&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;spacingLeft=4;spacingRight=4;fillColor=none;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="25450" y="4936" width="580" height="180" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-2" value="path_point_:PathPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;路径点&lt;div&gt;v：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向速度&lt;/div&gt;&lt;div&gt;a：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加速度&lt;/div&gt;&lt;div&gt;relative_time：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;相对于轨迹起点的时间&lt;br&gt;&lt;/div&gt;&lt;div&gt;da:：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加加速度&lt;/div&gt;&lt;div&gt;steer：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;前轮转角&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;gaussian_info：&lt;span style=&quot;background-color: initial;&quot;&gt;GaussianInfo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;概率信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;" parent="rDzTBxRO2xqlzFlOzq0q-1" vertex="1">
          <mxGeometry y="51" width="580" height="129" as="geometry" />
        </mxCell>
        <mxCell id="rDzTBxRO2xqlzFlOzq0q-34" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;全部点&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=570;strokeWidth=4;height=100;" parent="1" vertex="1">
          <mxGeometry x="24730" y="4370" width="2390" height="2210" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-6" value="SltBoundary : public&amp;nbsp;Prism3d" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="30594" y="1450" width="1080" height="980" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-29" value="-id_：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt边界id，分为两部分：障碍物id + 该slt边界棱柱属于障碍物的整个slt边界的第几段(计数从0开始)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="26" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-30" value="-original_id_：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt边界的原始id，即障碍物id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="52" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-31" value="-boundary_type_ = UNKNOWN：STBoundary::BoundaryType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界类型，同st边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="78" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-8" value="-upper_points_front_：std::vector&amp;lt;SltPoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;l最大值对应的棱柱平面上的s上边界点，即棱柱的左平面(这里称其为front平面)，该平面在ST平面上的投影的s上边界点，按t从小到大顺序存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="104" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-9" value="-lower_points_front_：std::vector&amp;lt;SltPoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;l最大值对应的棱柱平面上的s下边界点，即棱柱的左平面(这里称其为front平面)，该平面在ST平面上的投影的s下边界点，按t从小到大顺序存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="130" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-10" value="-upper_points_back_：std::vector&amp;lt;SltPoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;l最小值对应的棱柱平面上的s上边界点，即棱柱的右平面(这里称其为back平面)，该平面在ST平面上的投影的s上边界点，按t从小到大顺序存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="156" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-7" value="-lower_points_back_：std::vector&amp;lt;SltPoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;l最小值对应的棱柱平面上的s下边界点，即棱柱的右平面(这里称其为back平面)，该平面在ST平面上的投影的s下边界点，按t从小到大顺序存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="182" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-25" value="-min_s_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt边界的s最小值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="208" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-26" value="-max_s_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt边界的s最大值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="234" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-27" value="-min_t_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt边界的t最小值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="260" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-28" value="-max_t_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt边界的t最大值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="286" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-23" value="-min_l_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt边界的l最小值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="312" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-24" value="-max_l_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt边界的l最大值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="338" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-33" value="-start_min_l_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt轨迹段起点处l坐标考虑障碍物和adc的半宽及buffer后的l最小值，不同于min_l" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="364" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-34" value="-start_max_l_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt轨迹段起点处l坐标考虑障碍物和adc的半宽及buffer后的l最大值，不同于max_l" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="390" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-32" value="-is_cutin_：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否是cutin的slt边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="416" width="1080" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="442" width="1080" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-9" value="+explicit SltBoundary(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;std::pair&amp;lt;SltPoint, SltPoint&amp;gt;&amp;gt; &amp;amp;point_pairs,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入slt边界棱柱的8个顶点&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;bool is_accurate_boundary = false)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//是否生成精确的边界，默认不生成精确边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;slt边界构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs表示&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;SLT坐标系(右手系，拇指指向s正方向，食指指向l正方向，中指指向t正方向)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;下的三维棱柱的8个顶点，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;vector中存储的元素为棱柱上底和下底的四条边且存储顺序为：下底左边、上底左边、下底右边、上底右边，其中每条边按照&amp;lt;起点(s小)，终点(s大)&amp;gt;的组合存储于pair中，即point_pairs中前两个元素表示front平面中的四个顶点，后两个元素表示back平面的四个顶点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="450" width="1080" height="120" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-1" value="+GetBoundarySRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double curr_time,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//给定时刻t&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *s_upper,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储对应时刻t截面上s最大值&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *s_lower) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储对应时刻t截面上s最小值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;给定时刻t截面上s范围获取函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;当curr_time超过slt边界四棱柱t的范围[min_t_ , max_t_]时，返回false，无法获取对应截面上的s范围&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="570" width="1080" height="100" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-20" value="-IsPointNear(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::math::LineSegment3d &amp;amp;seg,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//三维空间中的线段&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::math::Vec3d &amp;amp;point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//三维空间中的点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_dist)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//距离阈值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;判断输入点point是否距离线段seg的距离小于阈值&lt;span style=&quot;background-color: initial;&quot;&gt;max_dist&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;点到线段距离通过seg成员函数DistanceSquareTo计算&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="670" width="1080" height="120" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-1" value="-RemoveRedundantPoints(std::vector&amp;lt;std::pair&amp;lt;SltPoint, SltPoint&amp;gt;&amp;gt; *point_pairs)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;删除slt边界中的冗余点&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs表示SLT坐标系(右手系，拇指指向s正方向，食指指向l正方向，中指指向t正方向)下的三维棱柱的8个顶点，vector中存储的元素为棱柱上底和下底的四条边且存储顺序为：下底左边、上底左边、下底右边、上底右边，其中每条边按照&amp;lt;起点(s小)，终点(s大)&amp;gt;的组合存储于pair中&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;若输入的&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs为空或元素个数&amp;lt;=2，直接返回，此时&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs中的元素个数不足以构成三维棱柱&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;输入的点对point_pairs的个数&amp;gt;=3个，进行冗余点的删除，所谓冗余点就是在一条线段上除去线段的端点，其他在线段上的点都是冗余点，因为仅需要两个端点就可以描述这条线段，所以至少有3个点时才会存在冗余点(判断中间那个点是否是冗余点)。通过函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPointNear判断点是否是冗余点，通过点偏离线段的法向距离是否小于阈值0.1来判断该点是否是冗余点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;同时判断三维棱柱上s小的平面和s大的平面，以其中一个平面为例，由于输入的&lt;span style=&quot;background-color: initial;&quot;&gt;point_pairs用8个顶点表示棱柱，因此一个面上只有4个顶点，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;第一次判断：连接左下点和右下点的线段通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPointNear&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断左上点是否为冗余点；第二次判断：连接左上点和右上点的线段&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPointNear&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断右下点是否为冗余点；done&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;由于z轴表示时间t，因此只有当时间间隔小于0.1时才有可能删除冗余点，否则按照8顶点的表示方式不会删除冗余点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-6" vertex="1">
          <mxGeometry y="790" width="1080" height="190" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;Prism3d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;三维棱柱，x轴是t、y轴是s、z轴是l，代码中用该类表示四棱柱，其中xy平面与棱柱的两个侧面平行&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5851" y="10316" width="970" height="1106" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-11" value="#points_：std::vector&amp;lt;Vec3d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;棱柱的顶点，这里是四棱柱因此是8个顶点，&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;点的顺序按front/back平面逆时针方向：{0前左下、1前左上、2后左上、3后左下、4前右下、5前右上、6后右上、7后右下}，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;即前四个点表示front平面上的顶点，后四个点表示back平面上的顶点。前表示s方向小的点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="52" width="970" height="68" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-13" value="#num_points_ = 0：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;顶点个数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="120" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-14" value="#is_convex_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该棱柱是否为凸的" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="146" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-1" value="#min_x_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;棱柱在三维空间中的最小x坐标&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;#max_x_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;棱柱在三维空间中的最大x坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;#min_y_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;棱柱在三维空间中的最小y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;#max_y_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;棱柱在三维空间中的最大y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;#min_z_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;棱柱在三维空间中的最小z坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;#max_z_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;棱柱在三维空间中的最大z坐标&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="172" width="970" height="118" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-2" value="#aabox_：AABox3d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该棱柱在三维空间中与xyz轴对齐的AABox" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="290" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-16" value="#theta_yz_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;命名有歧义，应使用xy，表示该四棱柱中与xy平面平行的侧面上的侧棱与x轴的夹角，夹角方向逆时针为正，夹角范围[-pi/2 , pi/2]&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;由于四棱柱垂直于xy平面，或理解成四棱柱与yz平面的夹角&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="316" width="970" height="44" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-15" value="#tan_yz_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;命名有歧义，应使用xy，表示该四棱柱中与xy平面平行的侧面上的侧棱与x轴夹角的正切" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="360" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-18" value="&lt;span style=&quot;background-color: rgb(128, 255, 0);&quot;&gt;棱柱xyz坐标系&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="386" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-19" value="#prism_origin_：double&amp;nbsp;[3]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;以棱柱的第4个顶点为原点建立xyz坐标系，原点xyz坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="412" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-20" value="#prism_x_axis_：double&amp;nbsp;[3]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;垂直于yz平面，过原点建立x轴，正方向指向第5个顶点，第5个顶点在x轴上的投影点坐标，x轴单位向量" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="438" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-21" value="#prism_y_axis_：double&amp;nbsp;[3]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;以棱柱的第4个顶点指向第7个顶点的连线为y轴，在以第4个顶点为原点时第7个顶点的xyz坐标，y轴单位向量" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="464" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-18" value="#prism_z_axis_：double&amp;nbsp;[3]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;以棱柱的第4个顶点指向第0个顶点的连线为z轴，在以第4个顶点为原点时第0个顶点的xyz坐标，z轴单位向量" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="490" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="516" width="970" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KQAypu7fDCoVw4pwxkO_-13" value="#BuildFromPoints()：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维棱柱构建函数&lt;div&gt;已知棱柱角点points_，初始化其他成员&lt;/div&gt;&lt;div&gt;1. 通过循环判断front平面相邻三个顶点构成的两向量间的向量积是否产生反向，从而判断该棱柱的凸性，初始化成员is_convex_，若该棱柱是凸的则不应该产生向量积结果向量的翻转反向&lt;/div&gt;&lt;div&gt;2. 初始化棱柱在xyz轴上的最大最小值，遍历points_中的元素即可得到结果&lt;/div&gt;&lt;div&gt;3. 调用成员aabox_的初始化函数，生成&lt;span style=&quot;background-color: initial;&quot;&gt;该棱柱在三维空间中与xyz轴对齐的AABox&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. 初始化成员theta_yz_和tan_yz_，表征四棱柱与x轴的夹角&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5. 初始化四棱柱坐标系，prism_origin_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_x_axis_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_y_axis_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_z_axis_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="524" width="970" height="146" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-15" value="#Prev(int at) const：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回输入编号为at处的顶点的上一个顶点的编号，编号分别在0123和4567中循环，当at=0时返回3，当at=4时返回7" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="670" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-16" value="#Next(int at) const：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回输入编号为at处的顶点的下一个顶点的编号，编号分别在0123和4567中循环，当at=3时返回0，当at=7时返回4" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="696" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-17" value="+HasOverlap(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint &amp;amp;start,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint &amp;amp;end) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入两点start和end的连线是否穿过四棱柱&lt;div&gt;首先将输入的slt点的坐标p_raw转换到类内存储的棱柱xyz坐标系下p_1，该坐标系是直角坐标系，以过原点&lt;span style=&quot;background-color: initial;&quot;&gt;prism_origin_的边作为基底建立坐标系，新建立的坐标系不是正交系，将slt点坐标转化到该坐标系下得到新坐标p，讨论问题。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;基底向量为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;a0 = [&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_x_axis_ ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_x_axis_ *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;tan_yz_ ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]^T&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;a1 = [0 ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_y_axis_ , 0&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]^T&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;a2 = [0 , 0,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_z_axis_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]^T&lt;/span&gt;&lt;/div&gt;&lt;div&gt;三种坐标表达形式为：&lt;/div&gt;&lt;div&gt;p_raw = [x_raw , y_raw , z_raw]^T&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;p_1 = [x_1 , y_1 , z_1]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;p = [x , y , z]^T&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;p_raw到p_1的变换是简单的平移变化，不做赘述&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;从p_1到p坐标变换方程为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;[ x_1 ]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_x_axis_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[ x ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;[ y_1 ]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[&lt;span style=&quot;background-color: initial;&quot;&gt;prism_x_axis_ *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;tan_yz_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_y_axis_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;]&amp;nbsp; &amp;nbsp;*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[ y ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;[ z_1 ]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_y_axis_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[ z ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;目标是求p&lt;/div&gt;&lt;div&gt;判断穿越的条件：如果连线穿过棱柱，则连线和棱柱在xy、yz、xz平面上的投影都有穿越关系，调用函数&lt;span style=&quot;background-color: initial;&quot;&gt;CheckLineAcrossSquare判断投影平面上连线是否穿越棱柱的投影矩形&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="722" width="970" height="228" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-19" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;inline CheckLineAcrossSquare(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double ax, double ay,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double bx, double by)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入两点[ax , ay]和[bx , by]的连线是否穿过矩形，单独定义在.cc文件中，不属于成员函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;当输入两点都不在矩形内时，通过叉乘判断，判断函数evaluator(x,y) = (x - ax) / (bx - ax) - (y - ay) / (by - ay)经过合并分式分子是叉乘的形式，分别代入矩形的对角点判断&lt;span style=&quot;background-color: initial;&quot;&gt;evaluator的符号是否变号&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，由于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;evaluator&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;分母符号在两次计算中一致，因此跟叉乘判断穿越是一致的&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="950" width="970" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-20" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;inline CheckPointInSquare(double x, double y)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断给定点是否在矩形内部，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;单独定义在.cc文件中，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;不属于成员函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;以矩形的临边作为单位向量作为基底建立坐标系，输入xy是目标点在该基底下的坐标值，通过判断xy是否同时在区间[0 , 1]内判断目标点是否在矩形内部&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KQAypu7fDCoVw4pwxkO_-10" vertex="1">
          <mxGeometry y="1040" width="970" height="66" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;LineSegment2d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;二维平面中的线段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4962" y="6992" width="760" height="1130" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-start_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段起点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-end_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段终点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-unit_direction_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量，方向从起点指向终点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-heading_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量在xy平面上与x轴正方向的夹角&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的长度&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-11" vertex="1">
          <mxGeometry y="50" width="760" height="110" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="dB0ZBrRWOytsmOrJzNgf-11" vertex="1">
          <mxGeometry y="160" width="760" height="8" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;//类外函数&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;IsWithin(double val, double bound1, double bound2)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入值val是否在由bound1和bound2构成的区间内&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;bound1和bound2不规定输入的大小关系，在函数内部通过std::swap函数将较小值作为区间左边界，将较大值作为区间右边界，判断输入val是否在该区间内&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-11" vertex="1">
          <mxGeometry y="168" width="760" height="112" as="geometry" />
        </mxCell>
        <mxCell id="-xp7tS0AX5Svhc8jlveX-2" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="dB0ZBrRWOytsmOrJzNgf-11" vertex="1">
          <mxGeometry y="280" width="760" height="8" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-14" value="+LineSegment2d(const Vec2d &amp;amp;start, const Vec2d &amp;amp;end)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，初始化上面全部的成员变量&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+rotate(const double angle)：Vec2d&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;旋转函数&lt;/div&gt;&lt;div&gt;以线端起点成员start_为圆心，将线段终点end_旋转输入angle角度(弧度制，逆时针为正)，返回得到的新的终点&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+GetPerpendicularFoot(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec2d &amp;amp;point,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//线段外一点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Vec2d *const foot_point) const：double&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//存储线段外一点到线段的垂足点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入线段外一点point，计算点point到线段的所在直线的垂足，并存储在输入foot_point中，返回垂线的长度&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+DistanceSquareTo(const Vec2d &amp;amp;point) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;点point到线段距离平方计算函数&lt;div&gt;1. 若线段过短，计算start_到point之间距离的平方并返回0&lt;/div&gt;&lt;div&gt;2. 考虑线段是有端点的，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;通过向量point - start_到线段单位向量unit_direction_上的投影(内积)&lt;/span&gt;判断过point到线段的垂足是否在线段上，若不在线段上，计算线段端点到point的距离平方并返回(投影小于0使用线段起点，投影大于线段长度length_使用线段终点)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;3. 若垂足在线段范围内，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;使用向量point - start_与线段单位向量unit_direction_的向量积&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;得到垂线长度，并返回平方值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+DistanceTo(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;点point到线段距离计算函数&lt;div&gt;计算方法与成员函数DistanceSquareTo一致，只是把返回值进行开方处理&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+IsPointIn(const Vec2d &amp;amp;point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入一点是否在线段上&lt;div&gt;1. 通过叉乘函数CrossProd的结果是否为0，判断输入点point是否在线段所在直线上，若叉乘结果不为0，point显然不在线段上&lt;/div&gt;&lt;div&gt;2. 再通过函数IsWithin，判断输入点point的xy坐标是否都在线段在xy轴投影范围内，若是，point在线段上&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+GetIntersect(const LineSegment2d &amp;amp;other_segment,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前线段判断相交的另一条线段&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Vec2d *const point) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储交点坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回两条线段是否相交标志位&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;线段相交计算函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 通过成员函数IsPointIn，排除两条线段端点在另一条线段上的情况&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 通过叉乘判断两条线段相交，存在交点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 通过向量法计算交点坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ProjectOntoUnit(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，从线段起点到给定点的向量在线段上的投影长度，带正负&lt;br&gt;&lt;/div&gt;&lt;div&gt;计算从线段起点到输入点point的向量到线段所在直线上的投影长度，带正负&lt;div&gt;构造从线段起点start_出发到point的向量，计算该向量与线段单位向量unit_direction的内积&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;常用于计算给定点的s坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ ProductOntoUnit(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，给定点到线段所在直线的垂直距离，带正负&lt;br&gt;&lt;/div&gt;&lt;div&gt;计算给定点到线段所在直线的垂线长度&lt;/div&gt;&lt;div&gt;构造从线段起点start_出发到point的向量，计算该向量与线段单位向量unit_direction的叉积&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;常用于计算给定点的l坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-11" vertex="1">
          <mxGeometry y="288" width="760" height="842" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-17" value="Box2d&lt;div&gt;二维平面中的可旋转包围盒&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4962" y="9480" width="650" height="580" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-18" value="&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-center_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box中点坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-length_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-width_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-half_length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box半长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-half_width_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box半宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-heading_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box朝向角&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-cos_heading_ = 1.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;朝向角余弦&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-sin_heading_ = 0.0;&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;朝向角正弦&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="40" width="650" height="190" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-19" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-corners_：std::vector&amp;lt;Vec2d&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储box的四个角点，按车头朝向的右前角点，逆时针顺序存入&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_x_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box四个角点中的最大x坐标&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -min_x_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最小x坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -max_y_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最大y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -min_y_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最小y坐标&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="230" width="650" height="120" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="350" width="650" height="8" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-21" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;+&lt;/span&gt;Box2d(const Vec2d &amp;amp;center,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double heading,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double length,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double width)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员corners_、&lt;span style=&quot;background-color: initial;&quot;&gt;max_x_、min_x_、max_y_、min_y_由角点初始化函数InitCorners进行初始化，其他成员由输入初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="358" width="650" height="82" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-22" value="&lt;span style=&quot;color: rgba(0, 0, 0, 0); font-family: monospace; font-size: 0px; text-wrap: nowrap;&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22%2BHasOverlap(const%20Box2d%20%26amp%3Bamp%3Bbox)%20const%EF%BC%9Abool%26lt%3Bspan%20style%3D%26quot%3Bwhite-space%3A%20pre%3B%26quot%3B%26gt%3B%26%239%3B%26lt%3B%2Fspan%26gt%3B%E8%BD%B4%E5%88%86%E7%A6%BB%E5%AE%9A%E7%90%86%E5%88%A4%E6%96%AD%E8%BE%93%E5%85%A5box%E4%B8%8E%22%20style%3D%22text%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dleft%3BverticalAlign%3Dtop%3BspacingLeft%3D4%3BspacingRight%3D4%3Boverflow%3Dhidden%3Brotatable%3D0%3Bpoints%3D%5B%5B0%2C0.5%5D%2C%5B1%2C0.5%5D%5D%3BportConstraint%3Deastwest%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22-1270%22%20y%3D%227556%22%20width%3D%22920%22%20height%3D%2226%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="440" width="650" height="26" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-23" value="+HasOverlap(const Box2d &amp;amp;box) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轴分离定理判断输入box与类实例化的box之间是否存在重叠" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="466" width="650" height="26" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-24" value="+InitCorners()：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;角点初始化函数&lt;div&gt;根据box中点坐标center_、box半长半宽half_length_和half_width_、以及朝向角正余弦sin_heading_和cos_heading_，得到四个角点的xy坐标，并初始化成员corners_&lt;/div&gt;&lt;div&gt;遍历四个角点的xy坐标，初始化成员max_x_、min_x_、max_y_、min_y_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="dB0ZBrRWOytsmOrJzNgf-17" vertex="1">
          <mxGeometry y="492" width="650" height="88" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-24" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;Polygon2d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;二维平面中的多边形&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4962" y="10310" width="830" height="742" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-25" value="-points_：std::vector&amp;lt;Vec2d&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储多边形角点的序列，逆时针方向存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="50" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-28" value="-num_points_ = 0：int&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;角点个数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="76" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-29" value="-line_segments_：std::vector&amp;lt;LineSegment2d&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储多边形边的序列，逆时针方向存储" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="102" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-30" value="-is_convex_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该多边形是否是凸多边形" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="128" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-31" value="-area_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;多边形面积，只有当points_中角点的存储顺序为逆时针时，通过向量叉积计算的面积才会是正值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="154" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-33" value="-min_x_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;多边形角点最小x坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="180" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-34" value="-max_x_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;多边形角点最大x坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="206" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-35" value="-min_y_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;多边形角点最小y坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="232" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-32" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-max_y_ = 0.0：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;多边形角点最大y坐标&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="258" width="830" height="32" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="290" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-7" value="+HasOverlap(const LineSegment2d &amp;amp;line_segment) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断当前二维平面中的多边形是否与输入线段有交叠&lt;div&gt;调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;GetOverlap判断输入线段和多边形是否存在交叠&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="298" width="830" height="62" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-8" value="+GetOverlap(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const LineSegment2d &amp;amp;line_segment,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入线段&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Vec2d *const first,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储交叠部分线段起点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Vec2d *const last) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储交叠部分线段终点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;输入线段，判断线段跟当前多边形是否有交叠，并输出交叠部分最外层的交点&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="360" width="830" height="90" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-9" value="+IsPointIn(const Vec2d &amp;amp;point) const：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入点是否在二维平面上的多边形内部&lt;div&gt;1. 调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;IsPointOnBoundary判断输入点point是否在多边形边上，若是返回true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2. 排除point在多边形边上的情况后，通过射线法判断点是否在多边形内部，&lt;/div&gt;&lt;div&gt;遍历多边形各边，当边的起终点y坐标在point的不同侧时，通过point到边端点的向量叉乘判断射线穿越次数，这样保证了从输入点point发出的射线包含多边形的某条边时和射线通过多边形角点时不计入穿越次数&lt;/div&gt;&lt;div&gt;令射线从point向x轴正方向发射，若射线是从多边形内部穿越边时，叉乘结果为负，若射线从多边形的外部穿越边时，叉乘结果为正&lt;/div&gt;&lt;div&gt;统计穿越次数，&lt;span style=&quot;background-color: initial;&quot;&gt;点在多边形内部穿越多边形边的次数为奇数次，奇数与1按位与的结果为true&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="450" width="830" height="120" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-12" value="+IsPointOnBoundary(const Vec2d &amp;amp;point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入点point是否在多边形的边界上&lt;div&gt;遍历多边形的边成员line_segments_，对每条边(LineSegment2d类)调用其成员函数IsPointIn判断输入点point是否在这条边上，若point不在任何一条边上，返回false&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="570" width="830" height="80" as="geometry" />
        </mxCell>
        <mxCell id="4pA_-z59MKvHFUv5A8mC-27" value="#BuildFromPoints()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;多边形构建函数&lt;div&gt;已知多边形角点成员points_，初始化其他成员&lt;/div&gt;&lt;div&gt;固定多边形一个角点，依次取剩下点中的相邻角点，通过向量叉乘函数CrossProd，累加可得多边形的面积&lt;/div&gt;&lt;div&gt;多边形凹凸性校验，通过上面叉乘结果的符号改变可以判断多边形是非凸的&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4pA_-z59MKvHFUv5A8mC-24" vertex="1">
          <mxGeometry y="650" width="830" height="92" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-2" value="Vec3d&lt;div&gt;三维空间中的向量&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=38;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5840" y="6276" width="740" height="322" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-7" value="#x_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维空间中向量的x坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="38" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-8" value="#y_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维空间中向量的y坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="64" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-6" value="#z_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维空间中向量的z坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="90" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="116" width="740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-5" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="124" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-17" value="+DistanceSquareTo(const Vec2d &amp;amp;other) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前点到另一点other之间欧氏距离的平方&lt;div&gt;利用向量的内积计算&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="150" width="740" height="46" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-18" value="+DistanceTo(const Vec2d &amp;amp;other) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前点到输入点other之间的欧氏距离&lt;div&gt;计算方法与成员函数DistanceSquareTo一致，返回进行开方处理&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="196" width="740" height="48" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-17" value="+InnerProd(const Vec3d &amp;amp;other) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前向量与输入的另一个三维向量other之间的内积/数量积" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="244" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-18" value="+CrossProd(const Vec3d &amp;amp;other) const：Vec3d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前向量与输入的另一个三维向量other之间的外积/向量积" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="270" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-19" value="+CrossProdNormalize(const Vec3d &amp;amp;other) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回两向量间向量积得到的向量的模/长度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-2" vertex="1">
          <mxGeometry y="296" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-13" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;LineSegment3d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;三维空间中的线段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5866" y="7172" width="610" height="320" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-14" value="&lt;div&gt;-start_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec3d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段起点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-end_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec3d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段终点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-unit_direction_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec3d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量，方向从起点指向终点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;-heading_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量在xy平面上与x轴正方向的夹角&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;-length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的长度&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-13" vertex="1">
          <mxGeometry y="50" width="610" height="90" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-15" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="1z-jq25ktQzDZzx0S193-13" vertex="1">
          <mxGeometry y="140" width="610" height="8" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-16" value="+DistanceSquareTo(const Vec3d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维空间点point到线段距离平方计算函数&lt;div&gt;&lt;div&gt;1. 若线段过短，计算start_到point之间距离的平方并返回0&lt;/div&gt;&lt;div&gt;2. 考虑线段是有端点的，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;通过向量point - start_到线段单位向量unit_direction_上的投影(内积)&lt;/span&gt;判断过point到线段的垂足是否在线段上，若不在线段上，计算线段端点到point的距离平方并返回(投影小于0使用线段起点，投影大于线段长度length_使用线段终点)&lt;/div&gt;&lt;div&gt;3. 若垂足在线段范围内，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;使用向量point - start_与线段单位向量unit_direction_的向量积&lt;/span&gt;得到垂线长度，并返回平方值&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-13" vertex="1">
          <mxGeometry y="148" width="610" height="122" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-19" value="+DistanceTo(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;点point到线段距离计算函数&lt;div&gt;计算方法与成员函数DistanceSquareTo一致，只是把返回值进行开方处理&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1z-jq25ktQzDZzx0S193-13" vertex="1">
          <mxGeometry y="270" width="610" height="50" as="geometry" />
        </mxCell>
        <mxCell id="hh4oIDYwnF3T4eblCJy6-1" value="STPoint：public Vec2d" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="31889" y="-452" width="590" height="130" as="geometry" />
        </mxCell>
        <mxCell id="hh4oIDYwnF3T4eblCJy6-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hh4oIDYwnF3T4eblCJy6-1" vertex="1">
          <mxGeometry y="26" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hh4oIDYwnF3T4eblCJy6-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="hh4oIDYwnF3T4eblCJy6-1" vertex="1">
          <mxGeometry y="52" width="590" height="8" as="geometry" />
        </mxCell>
        <mxCell id="hh4oIDYwnF3T4eblCJy6-4" value="&lt;div&gt;+STPoint(const double s, const double t) : Vec2d(t, s) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;x是t，y是s&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+STPoint(const math::Vec2d&amp;amp; vec2d_point) : Vec2d(vec2d_point) {}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数，初始化st坐标&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hh4oIDYwnF3T4eblCJy6-1" vertex="1">
          <mxGeometry y="60" width="590" height="70" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4pA_-z59MKvHFUv5A8mC-1" target="hh4oIDYwnF3T4eblCJy6-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="31469" y="-710" as="sourcePoint" />
            <mxPoint x="31629" y="-710" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-2" value="SltPoint：public Vec3d" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="31914" y="1786" width="590" height="308" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-v_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ds&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-a_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;dds&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-da_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ddds&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-dl_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-ddl_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-2" vertex="1">
          <mxGeometry y="26" width="590" height="124" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="msznmTYCVt2FFOrKI_xZ-2" vertex="1">
          <mxGeometry y="150" width="590" height="8" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-5" value="&lt;div&gt;+SltPoint(const double s, const double t&lt;span style=&quot;background-color: initial;&quot;&gt;, const double l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) : Vec3d(t, s, l) {}&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;x是t，y是s，z是l&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+SltPoint(const math::Vec3d&amp;amp; vec3d_point) : Vec3d(vec3d_point) {}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数，初始化slt坐标&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-2" vertex="1">
          <mxGeometry y="158" width="590" height="70" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-15" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+t() const { return x_; }：&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    +s() const { return y_; }：&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    +l() const { return z_; }：&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-2" vertex="1">
          <mxGeometry y="228" width="590" height="80" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="KQAypu7fDCoVw4pwxkO_-6" target="msznmTYCVt2FFOrKI_xZ-2" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="31504" y="2150" as="sourcePoint" />
            <mxPoint x="31664" y="2150" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-23" value="&lt;b&gt;头文件math_utils.h中的类外函数&lt;/b&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4056" y="6427" width="740" height="410" as="geometry" />
        </mxCell>
        <mxCell id="dB0ZBrRWOytsmOrJzNgf-25" value="CrossProd(const Vec2d &amp;amp;start_point,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const Vec2d &amp;amp;end_point_1,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const Vec2d &amp;amp;end_point_2)：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;二维平面向量叉乘计算函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;向量1 =&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_1，向量2 =&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_2，计算向量1叉乘向量2的结果，返回计算结果，通过返回值的正负表征向量积结果向量的方向&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-23" vertex="1">
          <mxGeometry y="26" width="740" height="124" as="geometry" />
        </mxCell>
        <mxCell id="MHpAOL2CRzzUpfwKXkaY-1" value="NormalizeAngle(const double angle)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;角度归一化函数&lt;div&gt;将输入角度angle(rad)，换算到区间[-pi, pi)&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-23" vertex="1">
          <mxGeometry y="150" width="740" height="50" as="geometry" />
        </mxCell>
        <mxCell id="1z-jq25ktQzDZzx0S193-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;inline Square(const T value) { return value * value; }：&lt;span style=&quot;background-color: initial;&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对输入值value进行平方运算并返回&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-23" vertex="1">
          <mxGeometry y="200" width="740" height="50" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-21" value="&lt;span style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;----------------------------Spatio Temporal Planning------------------------------------&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=center;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-23" vertex="1">
          <mxGeometry y="250" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="msznmTYCVt2FFOrKI_xZ-20" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;CrossProdNormalize3d(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec3d &amp;amp;start_point,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec3d &amp;amp;end_point_1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec3d &amp;amp;end_point_2)：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维空间内两向量向量积计算函数，返回结果向量的模/长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;向量1 =&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_1 - start_point，向量2 =&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_2 - start_point，计算向量12的向量积，并返回结果向量的长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 51, 51);&quot;&gt;代码中使用该函数目的是想通过该函数返回两向量向量积结果的方向，类似于二维平面中的向量积计算函数CrossProd通过返回结果的正负判断结果向量的方向，但是函数定义中返回的是向量的长度，因此按上述目的使用该函数时会存在错误&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="msznmTYCVt2FFOrKI_xZ-23" vertex="1">
          <mxGeometry y="276" width="740" height="134" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-3" value="AABox3d&lt;div&gt;三维空间中与轴对齐的包围盒&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5810" y="8410" width="560" height="360" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-7" value="-center_：Vec3d&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体中心" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="46" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-11" value="-length_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的全长，x轴上的区间长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="72" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-12" value="-width_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的全宽，y轴上的区间长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="98" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-13" value="-height_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的全高，z轴上的区间长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="124" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-9" value="-half_length_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的半长，x轴上的区间半长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="150" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-10" value="-half_width_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的半宽，y轴上的区间半长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="176" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-8" value="-half_height_ = 0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;三维盒体的半高，z轴上的区间半长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="202" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="228" width="560" height="8" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-6" value="+AABox3d() = default;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造，构造长宽高都为0的三维盒体" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="236" width="560" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-14" value="+Init(const double &amp;amp;min_x, const double &amp;amp;max_x,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;min_y, const double &amp;amp;max_y,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double &amp;amp;min_z, const double &amp;amp;max_z)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;该三维盒体是与xyz轴对齐的，因此输入该盒体在xyz轴上的范围可以轻易初始化其全部成员&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_x07SFxlUO99A7R2IKhX-3" vertex="1">
          <mxGeometry y="262" width="560" height="98" as="geometry" />
        </mxCell>
        <mxCell id="_x07SFxlUO99A7R2IKhX-35" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="KQAypu7fDCoVw4pwxkO_-6" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="30304" y="1830" as="sourcePoint" />
            <mxPoint x="30464" y="1830" as="targetPoint" />
            <Array as="points">
              <mxPoint x="30314" y="1911" />
              <mxPoint x="30314" y="1911" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="sz1bMD7Gj9Pl4Z5eluKM-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltGriddedGraph&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;slt网格图类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="35080" y="1400" width="1190" height="2270" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-23" value="-slt_dp_cost_：SltDpCost&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cost类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="50" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sz1bMD7Gj9Pl4Z5eluKM-2" value="-frame_ = nullptr：Frame*&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="76" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-1" value="-slt_graph_data_：const&amp;nbsp;SltGraphData&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt图数据类，在任务SPATIOTEMPORAL_BOUNDS_DECIDER中进行数据装填" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="102" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-2" value="-gridded_spatiotemporal_graph_config_：DpSltSpatiotemporalOptimizerConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;dp搜索配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="128" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-13" value="-speed_limit_by_index_s_：std::vector&amp;lt;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储每个s轴采样点上的限速值，与s轴采样点s值存储容器一一对应" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="154" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-12" value="-speed_limit_by_index_l_：std::vector&amp;lt;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储每个l轴采样点上的限速值，未使用" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="180" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-7" value="-spatial_distance_by_index_s_：std::vector&amp;lt;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴采样点s值存储容器，存储时按s递增存储，前密后疏" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="206" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-6" value="-spatial_distance_by_index_l_：std::vector&amp;lt;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;l轴采样点l值存储容器，存储时按自车横向位移边界pathbound从max_l到min_l，l值从大到小存入" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="232" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-3" value="-obstacles_：const&amp;nbsp;std::vector&amp;lt;const&amp;nbsp;Obstacle*&amp;gt;&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="258" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-4" value="-gap_path_descision_：const&amp;nbsp;hiphi::planning::PathDecision*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;插空路径决策类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="284" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-20" value="-gap_dis_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;插空点纵向距离" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="310" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-14" value="-lateral_bounds_：SltLateralBounds&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车横向位移边界pathbound" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="336" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-5" value="-init_point_：common::TrajectoryPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="362" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-6" value="-actual_time_gap_ = 0.9：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;设定时距，单位s，从frame中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="388" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-9" value="-total_length_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线长度，从slt_graph_data_中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="414" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-7" value="-total_length_t_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划总时长，配置中读取，默认5s" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="440" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-11" value="-dense_unit_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s方向步长，密，配置中读取，默认0.15m" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="466" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-10" value="-sparse_unit_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s方向步长，疏，配置中读取，默认2m" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="492" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-15" value="-unit_l_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;l方向步长，配置中读取，默认0.5m" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="518" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-8" value="-unit_t_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t方向步长，配置中读取，默认1.5s" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="544" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-5" value="-dimension_s_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;整条s轴的采样维度，dense_dimension_s_ + sparse_dimension_s_，前密后疏，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;包含s=0点&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="570" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-12" value="-dense_dimension_s_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴密集点的采样维度，配置中读取，默认61" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="596" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-13" value="-sparse_dimension_s_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴稀疏点的采样维度，(参考线总长total_length_s_ - 密集点占据的长度) / sparse_unit_s_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="622" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-2" value="-dimension_l_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;整条l轴采样维度，max_dimension_l_left_ + max_dimension_l_right_，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;包含l=0点&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="648" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-4" value="-max_dimension_l_left_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;l轴左半轴采样维度，lateral_bounds_的max_l_ / unit_l_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="674" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-3" value="-max_dimension_l_right_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;l轴右半轴采样维度，lateral_bounds_的min_l_的绝对值 / unit_l_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="700" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-1" value="-dimension_t_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t方向采样维度，total_length_t_ / unit_t_，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;包含t=0点&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="726" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-18" value="-max_acceleration_s_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车s方向最大加速度，配置中读取，task配置和车辆配置中取绝对值最小的" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="752" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-19" value="-max_deceleration_s_&amp;nbsp;=&amp;nbsp;0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车s方向最大减速度，配置中读取，带符号，task配置和车辆配置中取绝对值最小的" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="778" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-16" value="-max_acceleration_l_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车l方向最大加速度，配置中读取，默认2m/s2" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="804" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-17" value="-max_deceleration_l_&amp;nbsp;=&amp;nbsp;0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车l方向最大减速度，最大加速度取负号" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="830" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-20" value="-adc_frenet_point_：FrenetFramePoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;adc规划起点的frenet点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="856" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-8" value="-init_point_index_l_{}：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;adc规划起始点l，在l轴采样点容器中位置的索引值，从0开始计数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="882" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-21" value="-is_lane_change_path_ = false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前参考线是否为变道参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="908" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-11" value="-static cost_table_ = std::vector&amp;lt;std::vector&amp;lt;std::vector&amp;lt;SltGraphPoint&amp;gt;&amp;gt;&amp;gt; (&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;8, std::vector&amp;lt;std::vector&amp;lt;SltGraphPoint&amp;gt;&amp;gt;(&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;280, std::vector&amp;lt;SltGraphPoint&amp;gt;(&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                                                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;20, SltGraphPoint())))：&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;std::vector&amp;lt;std::vector&amp;lt;SltGraphPoint&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储slt点的三维数组，默认维度[t(8) , s(280) , l(20)]，将slt空间网格化，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;实际的维度使用dimension_t_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dimension_s_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dimension_l_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;包含原点[0 0 0]&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(204, 204, 204); font-family: &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;monospace&amp;quot;, monospace; font-size: 14px; white-space: pre; background-color: rgb(31, 31, 31);&quot;&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="934" width="1190" height="126" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-15" value="-struct SltGraphMessage {&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SltGraphMessage(const uint32_t c_, const int32_t r_, const int32_t v_) : c(c_), r(r_), v(v_) {}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;uint32_t c;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// column，t&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;uint32_t r; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// row，s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;uint32_t v; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// vertical，l&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储slt网格图节点索引值信息的类&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1060" width="1190" height="128" as="geometry" />
        </mxCell>
        <mxCell id="sz1bMD7Gj9Pl4Z5eluKM-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1188" width="1190" height="8" as="geometry" />
        </mxCell>
        <mxCell id="sz1bMD7Gj9Pl4Z5eluKM-4" value="+SltGriddedGraph(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltGraphData&amp;amp; slt_graph_data,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const DpSltSpatiotemporalOptimizerConfig&amp;amp; dp_config,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const hiphi::planning::PathDecision* gap_path_descision,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::TrajectoryPoint&amp;amp; init_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const FrenetFramePoint&amp;amp; adc_frenet_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double gap_dis,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double acutal_time_gap)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数，从输入和配置中依次初始化成员变量，基本为赋值操作，slt_dp_cost_调用其构造函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1196" width="1190" height="200" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-22" value="+Search(SltData* slt_data)：common::Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;搜索函数，生成种子轨迹节点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1396" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="G-0ok1hDa3zdvwAo5abW-24" value="-InitCostTable()：common::Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cost_table_初始化函数&lt;/span&gt;&lt;div&gt;1. 更新存储l轴采样点l值的容器，&lt;span style=&quot;background-color: initial;&quot;&gt;从原点开始以unit_l_向左右两边扩展，到达max_l和min_l为止，存储时按照l从大到小存入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SetCostInitPointIndexL更新步骤1中的容器内容&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 调用成员函数ResetCostTable，申请cost_table_的存储空间&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. 将slt空间网格化，将每个节点的tsl索引值及tsl坐标值作为一个SltGraphPoint写入cost_table_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1422" width="1190" height="116" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-9" value="-SetCostInitPointIndexL()：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;adc规划起始点l值索引值设置&lt;/span&gt;   &lt;span style=&quot;white-space: pre;&quot;&gt;及   &lt;/span&gt;换道时&lt;span style=&quot;white-space: pre;&quot;&gt;l轴采样点修正函数&lt;/span&gt;，&lt;/span&gt;返回值为是否成功设置adc规划起始点l值索引&lt;div&gt;1. 当adc规划起始点l值超过容器&lt;span style=&quot;background-color: initial;&quot;&gt;spatial_distance_by_index_l_中存储的l值的范围，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point_index_l_设置为首尾索引值，并返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 当&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc规划起始点l值在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;容器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;spatial_distance_by_index_l_中存储的l值范围内，在容器中插入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc规划起始点l值，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point_index_l_赋予容器更新后的起始点索引值，并更新l轴采样点维度dimension_l_(+1)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 对于换道工况，pathbound会包含当前车道和目标车道两条车道，l轴原点会在目标车道上，此时adc的l会偏向一边，步骤2中在unit_l_中间插入adc的l，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;以左换道为例，此时从l原点开始到adc的l点之间采样点开始是以unit_l_均分，adc的l及其前一个点之间的间隔不等于unit_l_，这一步就是在容器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;spatial_distance_by_index_l_中将这两点之间的采样点整体向原点方向平移，使得从adc的l开始以unit_l_均分，之前不等于unit_l_的间隔出现在原点及其后一个点之间。右换道同理&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1538" width="1190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-10" value="-ResetCostTable()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cost_table_重置函数&lt;/span&gt;，重置cost_table_的维度及其中存储的slt点&lt;div&gt;用成员变量tsl三个轴的采样维度，dimension_t_、&lt;span style=&quot;background-color: initial;&quot;&gt;dimension_s_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dimension_l_，重置cost_table_三个轴的采样维度(每个轴不超过默认维度)，对其中存储的每个slt点调用SltGraphPoint的重置函数Reset&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1658" width="1190" height="70" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-14" value="-InitSpeedLimitLookUp()：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;限速值查表更新函数&lt;div&gt;读取slt_graph_data_中的限速信息，根据s轴采样点s值插值得到对应的限速值大小依次填入容器&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_by_index_s_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1728" width="1190" height="62" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-13" value="-CalculateTotalCost()：common::Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算slt三维网格空间中所有节点的代价，即更新cost_table_中存储的各SltGraphPoint&lt;div&gt;step1：计算当前t截面上所有符合自车横纵向运动能力边界范围内的slt节点的代价，调用CalculateCostAt函数&lt;/div&gt;&lt;div&gt;step2：从当前&lt;span style=&quot;background-color: initial;&quot;&gt;t截面上所有符合自车横纵向运动能力边界范围内的slt节点出发，计算下一步长t界面上自车横纵向运动能力边界对应的s轴和l轴索引范围&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;循环执行上述步骤直到搜索到规划时长终点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1790" width="1190" height="80" as="geometry" />
        </mxCell>
        <mxCell id="JceGgxB48CCvmK49gIeo-1" value="-GetRowRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltGraphPoint&amp;amp; point,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;size_t* next_highest_row,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;size_t* next_lowest_row)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;得到下一搜索时刻的s轴采样点搜索范围&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据自车纵向加速能力，从当前s位置出发，计算一个时间步长后的s位置范围，在s轴采样点存储容器中找到该s位置范围对应的索引值范围[&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;next_lowest_row ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;next_highest_row&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1870" width="1190" height="110" as="geometry" />
        </mxCell>
        <mxCell id="JceGgxB48CCvmK49gIeo-2" value="-GetVerRange(const SltGraphPoint&amp;amp; point,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;size_t* next_highest_ver,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;size_t* next_lowest_ver)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;得到下一搜索时刻的l轴采样点搜索范围&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;根据自车横向加速能力，考虑自行车模型的最大转弯半径时的最大向心加速度，计算一个时间步长后的l位置范围，&lt;span style=&quot;background-color: initial;&quot;&gt;在l轴采样点存储容器中找到该l位置范围对应的索引值范围[&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;next_lowest_ver ,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;next_highest_ver&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;注意横向加速能力左右对称&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="1980" width="1190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-14" value="-CalculateCostAt(const std::shared_ptr&amp;lt;SltGraphMessage&amp;gt;&amp;amp; msg, double follow_dis)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新某一个SltGraphPoint中的内容(代价，前继关系，运动状态)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="2100" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-15" value="-CalSmoothReferenceSpeed()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对前端输入的巡航车速进行帧间平滑&lt;div&gt;只对加速工况进行平滑，车速小于30kph时，搜索使用的巡航车速每帧增加1m/s，高于30kph，每帧增加2m/s&lt;/div&gt;&lt;div&gt;减速工况对前端输入的巡航车速不进行平滑，直接返回&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="2126" width="1190" height="64" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-21" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;CheckOverlapOnDpSltGraph(const std::vector&amp;lt;const SltBoundary *&amp;gt; &amp;amp;boundaries,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltGraphPoint &amp;amp;p1, const SltGraphPoint &amp;amp;p2)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;重叠检查函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入p1、p2是slt节点及其前继节点，判断两节点的连线是否有穿越slt图中的slt边界四棱柱&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="sz1bMD7Gj9Pl4Z5eluKM-1" vertex="1">
          <mxGeometry y="2190" width="1190" height="80" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltDpCost&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="36440" y="2142" width="780" height="396" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-1" value="-point_：SltPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在slt三维空间中的点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="26" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-2" value="-pre_point_ = nullptr：const&amp;nbsp;SltGraphPoint*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;前继节点的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="52" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-4" value="-index_s_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在s轴采样点的索引号" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="78" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-5" value="-index_t_ = 0：uint32_t&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在t轴采样点的索引号" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="104" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-3" value="-index_l_ = 0：uint32_t&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在l轴采样点的索引号" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="130" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-6" value="-optimal_speed_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点的纵向速度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="156" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-7" value="-reference_cost_&amp;nbsp;=&amp;nbsp;0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点距离参考线的横向偏离代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="182" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-8" value="-obstacle_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点的障碍物代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="208" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-12" value="-prevent_dec_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;预防换道强烈制动的代价，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;总代价中未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="234" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-11" value="-spatial_potential_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果绕障决策判断需要进行绕障的话，例如需要左绕障，增大搜索到参考线右侧节点的代价。&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;不绕障代价为0&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="260" width="780" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-10" value="-total_cost_ = std::numeric_limits&amp;lt;double&amp;gt;::infinity()：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点的总代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="310" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-9" value="-point_fail_code_ = POINT_FAIL_CODE_NONE：PointFailCode&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点无效原因coding" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="336" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="362" width="780" height="8" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-19" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-16" vertex="1">
          <mxGeometry y="370" width="780" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-21" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltGraphPoint&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="36440" y="1400" width="700" height="606" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-22" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+enum PointFailCode {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_NONE = 0,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//未失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_OBSTACLE,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物代价无穷导致失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_ACC_S_RANGE,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//s方向加速度超过限制范围失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_SPEED_S_RANGE,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//s方向速度为负失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_ACC_L_RANGE,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//l方向加速度超过限制范围失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_OVERLAP,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点与前继节点连线穿越slt边界四棱柱失效&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_PREPOINT,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_PREPREPOINT,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;POINT_FAIL_CODE_PREPREPREPOINT,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; };&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点失效原因&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="26" width="700" height="234" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-25" value="-point_：SltPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt三维空间中的对应点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="260" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-30" value="-optimal_speed_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点处的车速" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="286" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-26" value="-pre_point_ = nullptr：const&amp;nbsp;SltGraphPoint*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点的前继节点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="312" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-28" value="-index_s_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在s轴上的索引" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="338" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-29" value="-index_t_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在t轴上的索引" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="364" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-27" value="-index_l_ = 0：uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点在l轴上的索引" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="390" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-32" value="-reference_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对于参考线l偏离的代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="416" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-31" value="-obstacle_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="442" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-33" value="-prevent_dec_cost_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="468" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-34" value="-spatial_potential_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;前行代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="494" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-35" value="-total_cost_ = std::numeric_limits&amp;lt;double&amp;gt;::infinity()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;总代价" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="520" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-36" value="-point_fail_code_ = POINT_FAIL_CODE_NONE：PointFailCode&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点失效原因" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="546" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-23" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="572" width="700" height="8" as="geometry" />
        </mxCell>
        <mxCell id="hjdbQetFe2aCVpx20L7k-24" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="hjdbQetFe2aCVpx20L7k-21" vertex="1">
          <mxGeometry y="580" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-22" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpatiotemporalPrismCorridors&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;时空走廊&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="37700" y="1400" width="1310" height="3170" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-44" value="-struct ConvexHullData {&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;start_t = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹段起点的t&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;end_t = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹段终点的t&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;min_l = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱l右边界，默认是自车pathbound的最右侧l&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;max_l = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱l左边界，默认是自车pahtbound的最左侧l&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;lower_start_s = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱下底的s下边界，默认为start_t处的减速能力上限s，有效值是start_t处障碍物的s上边界值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;lower_end_s = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱上底的s下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，默认为start_t处的减速能力上限s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，有效值是end_t处障碍物的s上边界值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;upper_start_s = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱下底的s上边界，默认为整条slt轨迹的最大s，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;有效值是start_t处障碍物的s下边界值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;upper_end_s = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包棱柱上底的s上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，默认为整条slt轨迹的最大s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，有效值是end_t处障碍物的s下边界值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cut_by_obs_in_s：&lt;span style=&quot;background-color: initial;&quot;&gt;std::set&amp;lt;std::string&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储计算凸包上下底s边界时使用过的slt边界四棱柱id&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cut_by_obs_in_l：&lt;span style=&quot;background-color: initial;&quot;&gt;std::set&amp;lt;std::string&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储计算凸包l边界时使用过的slt边界四棱柱id&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前轨迹点和下一个轨迹点形成的轨迹段构成的凸包数据&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="52" width="1310" height="238" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-23" value="-static constexpr kEpsilon_ = 1.0e-6：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断用无穷小量" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="290" width="1310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-37" value="-dp_config_：DpSltSpatiotemporalOptimizerConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;dp配置参数集" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="316" width="1310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-38" value="-init_point_：common::TrajectoryPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始轨迹点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="342" width="1310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-39" value="-adc_frenet_point_：common::FrenetFramePoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;起始轨迹点处的frenet点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="368" width="1310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-40" value="-unit_t_ = 1.0：float&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt轨迹t轴方向步长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="394" width="1310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-24" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="420" width="1310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8YXiNGvxbSWFXAr1xVmw-25" value="+Process(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DpSltSpatiotemporalOptimizerConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dp_config&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::TrajectoryPoint&amp;amp; init_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::FrenetFramePoint&amp;amp; adc_frenet_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; slt_boundaries,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltData&amp;amp; slt_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//dp搜索出的slt轨迹结果&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SltPrismCorridors* const prism_corridors)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储得到的时空走廊&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;处理函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 调用函数CreatePrismCorridors，生成包含dp搜出的slt轨迹的时空走廊&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 调用函数CheckSltPrismCorridorsFeasible判断时空走廊有效性&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="428" width="1310" height="192" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-42" value="-CreatePrismCorridors(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; slt_boundaries,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//st图中全部的slt边界四棱柱&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltData&amp;amp; slt_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//dp搜索得到的slt轨迹&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double pre_append_front_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//上一段轨迹段中轨迹起点s到对应时刻按减速能力上限到达的s点处的s之差的绝对值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double pre_append_back_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;上一段轨迹段中轨迹终点(即当前轨迹段起点)s到对应时刻按加速能力上限到达的s点处的s之差的绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SltPrismCorridors* const prism_corridors)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储得到的时空走廊&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;slt轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;时空走廊生成函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateOrderOnEachDirection，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将slt图中不同slt边界四棱柱与slt轨迹分别在t、s、l上的投影，存储向t、s、l方向投影的各步长轨迹段上与那些slt边界四棱柱有交叠&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 遍历slt轨迹上的各轨迹段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1. 计算每条轨迹段的起点s到对应时刻减速能力上限处的s之间的s差绝对值，计算&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每条轨迹段的终点s到对应时刻加速能力上限处的s之间的s差绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2. 调用成员函数&lt;/span&gt;CreatePrismCorridorsByPoint，生成每个轨迹段上的时空走廊&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="620" width="1310" height="218" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-43" value="-CreateOrderOnEachDirection(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;slt_boundaries&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//slt图中的所有slt边界四棱柱&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltData&amp;amp; slt_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//dp搜索得到的slt轨迹&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::vector&amp;lt;const SltBoundary*&amp;gt; &amp;gt;&amp;amp; t_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储容器，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;沿t方向&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每一个步长的轨迹段与哪些slt边界四棱柱有交叠&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前轨迹点与下一个轨迹点构成的轨迹段&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在t轴上的投影&lt;/span&gt;与slt边界四棱柱&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在t轴上的投影&lt;/span&gt;存在交叠时将该轨迹段的索引号存储在第一维&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//第二维存储不同slt边界四棱柱&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::vector&amp;lt;const SltBoundary*&amp;gt; &amp;gt;&amp;amp; s_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储容器，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;沿s方向&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每一个步长的轨迹段与哪些slt边界四棱柱有交叠&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//当前轨迹点与下一个轨迹点构成的轨迹段&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在s轴上的投影&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;与slt边界四棱柱&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在s轴上的投影&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存在交叠时将该轨迹段的索引号存储在第一维&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//第二维存储不同slt边界四棱柱&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::vector&amp;lt;const SltBoundary*&amp;gt; &amp;gt;&amp;amp; l_order)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储容器，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;沿l方向&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每一个步长的轨迹段与哪些slt边界四棱柱有交叠&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//当前轨迹点与下一个轨迹点构成的轨迹段&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在l轴上的投影&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;与slt边界四棱柱&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在l轴上的投影&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存在交叠时将该轨迹段的索引号存储在第一维&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//第二维存储不同slt边界四棱柱&lt;/div&gt;&lt;div&gt;将slt图中不同slt边界四棱柱与slt轨迹分别在t、s、l上的投影，存储向t、s、l方向投影的各步长轨迹段上与哪些slt边界四棱柱有交叠&lt;/div&gt;&lt;div&gt;用slt边界四棱柱的[min_t , max_t]、[&lt;span style=&quot;background-color: initial;&quot;&gt;min_s , max_s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]、[&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;min_l , max_l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="838" width="1310" height="270" as="geometry" />
        </mxCell>
        <mxCell id="zhNiNg01hYu3SgCsvtjg-1" value="-CreatePrismCorridorsByPoint(&lt;span style=&quot;background-color: initial;&quot;&gt;const SltData&amp;amp; slt_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//dp搜索得到的slt轨迹&lt;/span&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const SltPoint&amp;amp; start_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前轨迹段起点，轨迹段是精心切分前的轨迹段&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前轨迹段终点，&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段是精心切分前的轨迹段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const double append_front_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前轨迹段起点到对应时刻减速能力上界s处的s差绝对值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const double append_end_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//当前轨迹段终点到对应时刻加速能力上界s处的s差绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; slt_boundaries,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//slt图中所有slt边界四棱柱&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; t_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前轨迹段在t轴上投影有交叠的slt边界四棱柱集合&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; s_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//与当前轨迹段在s轴上投影有交叠的slt边界四棱柱集合&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; l_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//与当前轨迹段在l轴上投影有交叠的slt边界四棱柱集合&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; SltPrismCorridors* const prism_corridors)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储该轨迹段对应的时空走廊&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;轨迹段时空走廊生成函数，这里的轨迹段是dp按t轴一个搜索步长生成的轨迹段&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 按照轨迹段对应的t轴范围内的slt空间内没有障碍物生成包含该轨迹段的凸包四棱柱，凸包在t轴上的范围就是该轨迹段在t轴上的范围&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; 凸包上下底的s下边界都为轨迹段起点t时刻自车按纵向最大减速度能到达的s，&lt;span style=&quot;background-color: initial;&quot;&gt;s上边界都为slt轨迹的总长；&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 凸包l左边界为自车横向位移pathbound的l左边界，l右边界为pathbound的l右边界。此时凸包四棱柱是一个长方体&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 根据slt边界四棱柱扣凸包四棱柱&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 考虑全部与轨迹段在lt平面上投影有交叠的slt边界四棱柱，这些slt边界四棱柱会对凸包四棱柱上下底的s边界产生影响，对每一个slt边界四棱柱调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullSRange对凸包进行一次更新&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 考虑全部与轨迹段在st平面上投影有交叠的slt边界四棱柱&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;[min_s , max_s]、[min_t , max_t]&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，这些slt边界四棱柱会对凸包四棱柱左右l边界产生影响，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对每一个slt边界四棱柱&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullLRange对凸包进行一次更新&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 考虑自车横向位移边界pathbound，更新凸包四棱柱的左右l边界，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullLRangeByLaneBounds对凸包进行更新&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 对于原始的轨迹段与slt边界四棱柱的某些位置关系，无法生成包含轨迹段且与slt边界四棱柱在slt空间没有交叠的凸包，此时需要将轨迹段精细切分，将一个非凸集合转变成若干个凸集的并&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 进入精细切分的条件：在凸包更新函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullSRange和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullLRange中，能够保证当某一个slt边界四棱柱导致此次凸包更新无法包含轨迹段时，后续其他slt边界四棱柱导致的凸包更新都不会改变凸包无法包含轨迹段的结果，因此仅需判断遍历完所有slt边界四棱柱后的凸包若不包含轨迹段则需要进入轨迹段切分，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsStartPointInConvexHull和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsEndPointInConvexHull进行判断&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 获取该轨迹段上需要进行切分的时刻并构造子slt轨迹，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetAllIntersectOfConvexHullAndObstacles进行获取，将原轨迹段按照切分时刻进行切分，此时原轨迹段就成为了包含若干子轨迹段的子slt轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; 对子slt轨迹递归调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreatePrismCorridors生成该子slt轨迹的时空走廊，此时子slt轨迹中的子轨迹段对应的凸包就可以保证即包含子轨迹段又不跟slt边界四棱柱在slt空间上发生交叠，就不会再进入步骤3，从而跳出递归循环&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. 调用成员函数CreateConvexHull将凸包数据转化成凸包四棱柱，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltPrismCorridors类中的凸包添加函数AppendConvexHull，将包含该轨迹段的凸包添加进&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;时空走廊&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;prism_corridors&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="1108" width="1310" height="490" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-50" value="-UpdateConvexHullSRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段的起点&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段的终点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltBoundary* slt_boundarie,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待考虑的slt边界四棱柱，在lt平面上与轨迹段投影有交叠的slt边界四棱柱&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//将更新后的凸包上下底s边界写入凸包数据&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;-------原代码中逻辑有bug，这里写修正后的逻辑-------------&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;凸包四棱柱数据上下底s边界更新函数，只有当在lt平面上&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段与slt边界四棱柱的投影存在交叠时，该slt边界四棱柱才会影响轨迹段对应的凸包四棱柱的上下底s边界的大小&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;slt_boundarie中的s边界获取函数GetBoundarySRange，获取轨迹段起点t和轨迹段终点t截面上slt边界四棱柱切面上的s上下边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认slt边界四棱柱在轨迹段起终点t截面上的切面的s边界为[-inf , +inf]，原代码中需要更改&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;注意&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetBoundarySRange只有当给定时刻t在slt边界四棱柱的t范围内才会成功获取切面上的s上下边界，否则使用默认值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 更新凸包四棱柱上下底s边界。更新凸包四棱柱s下边界时，用老的s下边界与slt边界四棱柱的s上边界取大；更新凸包四棱柱s上边界时，用老的s上边界与slt边界四棱柱的s下边界取小&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;可以把所有情况全划分为以下几种情况&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点t截面和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段终点t截面其中一个截面不能截取到slt边界四棱柱切面，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;此时需要将轨迹段进一步切分，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;同时更新&lt;/span&gt;凸包四棱柱上下底s边界，&lt;span style=&quot;background-color: initial;&quot;&gt;更新凸包四棱柱s下边界时，用老的s下边界与slt边界四棱柱的s上边界取大；更新凸包四棱柱s上边界时，用老的s上边界与slt边界四棱柱的s下边界取小&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;其中截取slt边界四棱柱切面失败的凸包四棱柱的底上s的范围为[inf , -inf&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]，按照凸包s下边界取大上边界取小的规则，后续对不同的slt边界四棱柱都无法将该底上的s范围更新，使得该底上的轨迹段端点不在凸包底面内，保证遍历完所有在lt平面有交叠的slt边界四棱柱后该轨迹段可以进入精细切分逻辑&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点t截面和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段终点t截面都能截取到slt边界四棱柱切面&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1. 轨迹段起点s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;小于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对应截面上slt边界四棱柱切面的s下边界时，更新凸包四棱柱上下底的s上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段起点s大&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对应截面上slt边界四棱柱切面的s上边界时，更新凸包四棱柱上下底的s下边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.3. 轨迹段起点s大于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对应截面上slt边界四棱柱切面的s下边界小于切面s上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹段终点s小于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对应截面上slt边界四棱柱切面的s下边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;更新凸包四棱柱上下底的s上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹段终点s大于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对应截面上slt边界四棱柱切面的s上边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;更新凸包四棱柱上下底的s下边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;只有在“左左”、“右右”情况下凸包上下底s边界才会正常更新，无需对轨迹段精细切分；其他情况都需要对轨迹段进行精细切分，计算方法中保证了遍历完所有在lt平面与轨迹段有交叠的slt边界四棱柱后轨迹段其中一个端点在凸包s边界外，满足进入精细切分逻辑的条件&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="1598" width="1310" height="460" as="geometry" />
        </mxCell>
        <mxCell id="zhNiNg01hYu3SgCsvtjg-2" value="-UpdateConvexHullLRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const SltPoint&amp;amp; start_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段起点&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段终点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltBoundary* slt_boundarie,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;待考虑的slt边界四棱柱，在st平面上与轨迹段投影有交叠的slt边界四棱柱，[min_s , max_s]、[min_t , max_t]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//将更新后的凸包l边界写入凸包数据&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;-------原代码中逻辑有bug，这里写修正后的逻辑-------------&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;凸包四棱柱数据l边界更新函数，&lt;span style=&quot;background-color: initial;&quot;&gt;只有当在st平面上&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段与slt边界四棱柱的投影存在交叠时，该slt边界四棱柱才会影响轨迹段对应的凸包四棱柱l边界的大小&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;slt_boundarie中写一个l边界获取函数GetBoundaryLRange，获取轨迹段起点t和轨迹段终点t截面上slt边界四棱柱切面上的l左右边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认slt边界四棱柱在轨迹段起终点t截面上的切面的l边界为[+inf , -inf]，原代码中需要更改&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;注意&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetBoundaryLRange只有当给定时刻t在slt边界四棱柱的t范围内才会成功获取切面上的l左右边界，否则使用默认值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. 更新凸包四棱柱l边界。更新凸包四棱柱l右边界时，用老的l右边界与slt边界四棱柱上下切面的l左边界取大；更新凸包四棱柱l左边界时，用老的l左边界与slt边界四棱柱上下切面的l右边界取小&lt;/span&gt;&lt;/div&gt;&lt;div&gt;情况全划分与&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateConvexHullSRange中的分析类似&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2058" width="1310" height="250" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-3" value="-UpdateConvexHullLRangeByLaneBounds(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段起点&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段终点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltLateralBounds&amp;amp; lateral_bounds,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车的横向位移边界pathbound&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//将更新后的凸包l边界写入凸包数据&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;读取轨迹段对应自车横向位移边界段中左边界的最小l和右边界的最大l，更新凸包l左边界和右边界&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2308" width="1310" height="130" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-4" value="-IsStartPointInConvexHull(const SltPoint&amp;amp; start_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;判断轨迹段的起点是否在凸包四棱柱的下底内，若在返回true&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2438" width="1310" height="90" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-5" value="-IsEndPointInConvexHull(const SltPoint&amp;amp; end_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;判断轨迹段的终点是否在凸包四棱柱的上底内，若在返回true&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2528" width="1310" height="90" as="geometry" />
        </mxCell>
        <mxCell id="k1SaeBE1l209PvY3WMEk-6" value="-GetAllIntersectOfConvexHullAndObstacles(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段起点&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//轨迹段终点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; t_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前轨迹段在t轴投影有交叠的全部slt边界四棱柱&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; s_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//与当前轨迹段在s轴投影有交叠的全部slt边界四棱柱&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const SltBoundary*&amp;gt;&amp;amp; l_order,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//与当前轨迹段在l轴投影有交叠的全部slt边界四棱柱&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::set&amp;lt;double&amp;gt;&amp;amp; all_intersect)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储该轨迹段上需要精细切分的时刻t，set容器可以保证存入的时刻t有序(默认从小到大)且不重复&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹段精细切分函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;原代码中有bug这里写修正后的逻辑&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 遍历tl平面上投影与轨迹段投影有交叠的slt边界四棱柱，在tl平面上轨迹段投影线段和slt边界四棱柱投影平行四边形的交点t坐标就是该轨迹段上需要精细切分的时刻，按从小到大无重复的存入set容器&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 遍历tl、ts平面上投影与轨迹段投影有交叠的slt边界四棱柱，在ts平面上轨迹段投影线段和slt边界四棱柱投影平行四边形的交点t坐标就是该轨迹段上需要精细切分的时刻，按从小到大无重复的存入set容器&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;原代码中对每个轨迹段仅切一刀在中点处，为什么这么干，省算力？&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2618" width="1310" height="240" as="geometry" />
        </mxCell>
        <mxCell id="O7Bf-8ht46HnLuV7VFRU-6" value="-CreateConvexHull(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SltPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//轨迹段起点&lt;/span&gt;&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltPoint&amp;amp; end_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//轨迹段终点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ConvexHullData&amp;amp; convex_hull_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;ConvexHull&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;P&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//生成凸包所需的数据&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;根据凸包所需数据，生成凸包，该函数的返回值直接作为SltPrismCorridors类凸包添加函数AppendConvexHull的入参，由于AppendConvexHull的形参规定了模板参数P=2，因此在&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;该函数返回类型中编译器自动推断模板参数P=2，表示凸包内规划的轨迹包含s和l两部分的运动属性&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 按dp搜索时间步长的1/5对轨迹段进行插值加密，包含轨迹段起终点，更新凸包参考点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 更新凸包起终点时刻、凸包下底s边界、凸包下底到上底的斜率、凸包左右l边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 检查凸包有效性，通过成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;CheckConvexHullFeasible进行检查&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="2858" width="1310" height="160" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-25" value="-CheckConvexHullFeasible(const ConvexHull&amp;lt;2&amp;gt;&amp;amp; convex_hull)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包有效性检查函数&lt;div&gt;1. 检查凸包参考点个数是否大于0&lt;/div&gt;&lt;div&gt;2. 检查凸包上底对应的时刻是否大于下底对应的时刻&lt;/div&gt;&lt;div&gt;3. 检查凸包上下底的s上边界是否大于s下边界&lt;/div&gt;&lt;div&gt;4. 检查凸包l左边界是否大于l右边界&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="3018" width="1310" height="90" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-26" value="-CheckSltPrismCorridorsFeasible(SltPrismCorridors* prism_corridors)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查生成的时空走廊有效性&lt;div&gt;时空走廊中凸包个数&amp;gt;=2，且前后两个凸包时间上是连续的，即前一个凸包的终点时刻是后一个凸包的起点时刻&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8YXiNGvxbSWFXAr1xVmw-22" vertex="1">
          <mxGeometry y="3108" width="1310" height="62" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="sz1bMD7Gj9Pl4Z5eluKM-1" target="hjdbQetFe2aCVpx20L7k-21" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="36370" y="2200" as="sourcePoint" />
            <mxPoint x="36530" y="2200" as="targetPoint" />
            <Array as="points">
              <mxPoint x="36310" y="1703" />
              <mxPoint x="36310" y="1703" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-2" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="sz1bMD7Gj9Pl4Z5eluKM-1" target="hjdbQetFe2aCVpx20L7k-16" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="36650" y="2020" as="sourcePoint" />
            <mxPoint x="36810" y="2020" as="targetPoint" />
            <Array as="points">
              <mxPoint x="36310" y="2340" />
              <mxPoint x="36310" y="2340" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltGraphData&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;slt图数据类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=47;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24637" y="74" width="730" height="460" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-10" value="-init_ = false：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据类是否完成数据加载赋值标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="47" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-11" value="-slt_boundaries_：std::vector&amp;lt;const&amp;nbsp;SltBoundary&amp;nbsp;*&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储slt图中显示的所有slt边界四棱柱，不是按照障碍物的顺序排列，&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;一个障碍物存在两个边界棱柱时按两个元素存储&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="73" width="730" height="44" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-12" value="-init_point_：common::TrajectoryPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="117" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-13" value="-speed_limit_：SpeedLimit&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;限速信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="143" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-14" value="-lateral_bounds_：SltLateralBounds&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车pathbound，横向位移边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="169" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-15" value="-cruise_speed_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;设定巡航速度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="195" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-18" value="-path_data_length_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划路径总长度，从speed_limit中读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="221" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-17" value="-path_length_by_conf_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;配置信息中的规划路径总长，未使用因此不进行初始化" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="247" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-16" value="-total_time_by_conf_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;配置信息中的规划总时长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="273" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="299" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-9" value="+LoadData(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const SltBoundary *&amp;gt; &amp;amp;slt_boundaries,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const common::TrajectoryPoint &amp;amp;init_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SpeedLimit &amp;amp;speed_limit,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double cruise_speed,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double path_data_length,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SltLateralBounds &amp;amp;lateral_bounds,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double total_time_by_conf)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据加载函数&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-6" vertex="1">
          <mxGeometry y="307" width="730" height="153" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-19" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="EF7h5Wi_xNryY0zvsj3p-6" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="24977" y="600" as="sourcePoint" />
            <mxPoint x="25087" y="770" as="targetPoint" />
            <Array as="points">
              <mxPoint x="24500" y="1140" />
              <mxPoint x="24500" y="330" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-20" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EF7h5Wi_xNryY0zvsj3p-6" target="rDzTBxRO2xqlzFlOzq0q-62" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25762" y="464" as="sourcePoint" />
            <mxPoint x="25922" y="464" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-21" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpatiotemporalData&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;时空联合规划数据&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=53;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24637" y="-600" width="740" height="139" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-22" value="-slt_data_：SltData&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹点数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-21" vertex="1">
          <mxGeometry y="53" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-25" value="-prism_corridors_：SltPrismCorridors&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时空走廊数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-21" vertex="1">
          <mxGeometry y="79" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-23" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EF7h5Wi_xNryY0zvsj3p-21" vertex="1">
          <mxGeometry y="105" width="740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-24" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-21" vertex="1">
          <mxGeometry y="113" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-26" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltData : public&amp;nbsp; std::vector&amp;lt;SltPoint&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;slt轨迹&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=53;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25467" y="-780" width="500" height="217" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-49" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;min_s_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt轨迹的最小s，0&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="53" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-48" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;max_s_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt轨迹的最大s，规划总长度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="79" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-47" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;min_t_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;slt轨迹最小t，0&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="105" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-46" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;max_t_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;slt轨迹最大t，配置里写的规划总时长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="131" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-45" value="-lateral_bounds_：SltLateralBounds&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车的pathbound，横向位移边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="157" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-28" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="183" width="500" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-29" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-26" vertex="1">
          <mxGeometry y="191" width="500" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-30" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EF7h5Wi_xNryY0zvsj3p-21" target="EF7h5Wi_xNryY0zvsj3p-26" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25557" y="-79" as="sourcePoint" />
            <mxPoint x="25717" y="-79" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25417" y="-545" />
              <mxPoint x="25417" y="-680" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-31" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="EF7h5Wi_xNryY0zvsj3p-21" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25257" y="690" as="sourcePoint" />
            <mxPoint x="24957" y="450" as="targetPoint" />
            <Array as="points">
              <mxPoint x="24307" y="1030" />
              <mxPoint x="24307" y="-530" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-32" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SltPrismCorridors : public std::vector&amp;lt;ConvexHull&amp;lt;2&amp;gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;slt三维空间走廊&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25467" y="-510" width="830" height="210" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-33" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-32" vertex="1">
          <mxGeometry y="44" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-34" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="EF7h5Wi_xNryY0zvsj3p-32" vertex="1">
          <mxGeometry y="70" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-35" value="+AppendConvexHull(const ConvexHull&amp;lt;2&amp;gt;&amp;amp;new_convex_hull,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;//待添加的凸包四棱柱，模板参数2表示凸包包含s和l两部分的运动属性&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; float unit_t)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//dp搜索t轴步长，不是切分后的轨迹段的时间步长&lt;/div&gt;&lt;div&gt;向slt三维空间走廊中添加凸包四棱柱&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-32" vertex="1">
          <mxGeometry y="78" width="830" height="72" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-7" value="+GetVectorConvexHull() const：VectorConvexHullFor&amp;lt;2&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时空走廊凸包数组获取函数&lt;div&gt;返回值类型原始类型为使用Eigen内部分配器的vector&amp;lt;ConvexHull&amp;lt;2&amp;gt;&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="EF7h5Wi_xNryY0zvsj3p-32" vertex="1">
          <mxGeometry y="150" width="830" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EF7h5Wi_xNryY0zvsj3p-36" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EF7h5Wi_xNryY0zvsj3p-21" target="EF7h5Wi_xNryY0zvsj3p-32" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25707" y="-199" as="sourcePoint" />
            <mxPoint x="25867" y="-199" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25417" y="-509" />
              <mxPoint x="25417" y="-420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="O7Bf-8ht46HnLuV7VFRU-4" value="" style="shape=image;imageAspect=0;aspect=fixed;verticalLabelPosition=bottom;verticalAlign=top;image=data:image/png,;" parent="1" vertex="1">
          <mxGeometry x="37020" y="2960" width="520" height="257" as="geometry" />
        </mxCell>
        <mxCell id="O7Bf-8ht46HnLuV7VFRU-5" value="" style="edgeStyle=none;orthogonalLoop=1;jettySize=auto;html=1;rounded=0;" parent="1" source="O7Bf-8ht46HnLuV7VFRU-4" target="EF7h5Wi_xNryY0zvsj3p-50" edge="1">
          <mxGeometry width="80" relative="1" as="geometry">
            <mxPoint x="37560" y="3130" as="sourcePoint" />
            <mxPoint x="37640" y="3130" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="O7Bf-8ht46HnLuV7VFRU-11" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EF7h5Wi_xNryY0zvsj3p-32" target="_fWm_9wXaZLPQfpA4UY2-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26347" y="-209" as="sourcePoint" />
            <mxPoint x="26737" y="-324" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-1" value="&lt;div&gt;template&amp;lt;int P&amp;gt;&lt;/div&gt;ConvexHull&lt;div&gt;凸包类，包含轨迹段的最大凸集，参数P由编译器自动推断为2，表示凸包内优化的轨迹包含s和l两部分运动属性&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=54;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="26377" y="-585" width="880" height="360" as="geometry">
            <mxRectangle x="18750" y="3476" width="140" height="60" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-17" value="-t1_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱下底对应的时刻t，start_t" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="54" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-2" value="-t2_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱上底对应的时刻t，end_t" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="80" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-18" value="-reference_points_：ConvexRefPoints&amp;lt;P&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包参考点，该凸包四棱柱包含的轨迹段(切分后的轨迹段)按dp搜索时间步长的1/5作为步长对该轨迹段插值加密，&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;包含轨迹段起终点&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="106" width="880" height="44" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-20" value="-upper_slope_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱上下底s上边界所在平面与lt平面夹角的斜率" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="150" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-19" value="-lower_slope_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱上下底s下边界所在平面与lt平面夹角的斜率" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="176" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-22" value="-cor_upper_s_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱下底s上边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="202" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-21" value="-cor_lower_s_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱下底s下边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="228" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-24" value="-cor_upper_l_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱l左边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="254" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-23" value="-cor_lower_l_ = 0.0：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;凸包四棱柱l右边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="280" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="306" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-4" value="+IsSame(const ConvexHull&amp;lt;P&amp;gt;&amp;amp; other) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查当前的凸包与输入的另一个凸包other是否相同&lt;div&gt;只检查斜率和l边界是否相同。&lt;strike&gt;在函数外需配合起终时刻是否相同的判断，从而最终判断两个凸包是否相同&lt;/strike&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-1" vertex="1">
          <mxGeometry y="314" width="880" height="46" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-11" value="template&amp;lt;int M , int N&amp;gt;&lt;div&gt;MatF&lt;/div&gt;&lt;div&gt;描述一个M行N列的矩阵&lt;/div&gt;&lt;div&gt;原始数据类型为Eigen::Matrix&amp;lt;decimal_t , M , N&amp;gt;，其中的decimal_t的原始类型为double表示矩阵中元素的类型，M和N表示M行N列矩阵&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=80;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39857.5" y="3637" width="760" height="140" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-12" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-11" vertex="1">
          <mxGeometry y="80" width="760" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="_fWm_9wXaZLPQfpA4UY2-11" vertex="1">
          <mxGeometry y="106" width="760" height="8" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-14" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-11" vertex="1">
          <mxGeometry y="114" width="760" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-17" value="template&amp;lt;int P&amp;gt;&lt;div&gt;PlanningPoint&lt;/div&gt;&lt;div&gt;描述规划点，包含规划点的属性&lt;/div&gt;&lt;div&gt;原始类型为MatF&amp;lt;P , 4&amp;gt;，P表示该规划点包含哪类属性(通常包含s和l两类)，4表示对时间的0到3阶导数&lt;/div&gt;&lt;div&gt;————————————————————————————————————————&lt;/div&gt;&lt;div&gt;|&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; a&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;da&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|&lt;/div&gt;&lt;div&gt;————————————————————————————————————————&lt;/div&gt;&lt;div&gt;|&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;l&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dl&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ddl&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;dddl&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;/div&gt;&lt;div&gt;————————————————————————————————————————&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=144;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39877.5" y="3273" width="720" height="204" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-18" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-17" vertex="1">
          <mxGeometry y="144" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-19" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="_fWm_9wXaZLPQfpA4UY2-17" vertex="1">
          <mxGeometry y="170" width="720" height="8" as="geometry" />
        </mxCell>
        <mxCell id="_fWm_9wXaZLPQfpA4UY2-20" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="_fWm_9wXaZLPQfpA4UY2-17" vertex="1">
          <mxGeometry y="178" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-3" value="Extends&lt;div&gt;模板实例化&lt;/div&gt;" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="_fWm_9wXaZLPQfpA4UY2-17" target="_fWm_9wXaZLPQfpA4UY2-11" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="39837.5" y="2407" as="sourcePoint" />
            <mxPoint x="39997.5" y="2407" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-4" value="template&amp;lt;int P&amp;gt;&lt;div&gt;PlanningPointPair&lt;/div&gt;&lt;div&gt;描述轨迹点，包含时间及规划点的属性&lt;/div&gt;&lt;div&gt;原始类型为std::pair&amp;lt;decimal_t, PlanningPoint&amp;lt;P&amp;gt;&amp;gt;，第一个位置表示轨迹点对应的时刻t(类型为double)，第二个位置表示规划点上的运动属性&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=84;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39812.5" y="3043" width="850" height="144" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-5" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="n895gSTYapxIoZ0YR_si-4" vertex="1">
          <mxGeometry y="84" width="850" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="n895gSTYapxIoZ0YR_si-4" vertex="1">
          <mxGeometry y="110" width="850" height="8" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-7" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="n895gSTYapxIoZ0YR_si-4" vertex="1">
          <mxGeometry y="118" width="850" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-8" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="n895gSTYapxIoZ0YR_si-4" target="_fWm_9wXaZLPQfpA4UY2-17" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="39707.5" y="2677" as="sourcePoint" />
            <mxPoint x="39867.5" y="2677" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-9" value="template&amp;lt;int P&amp;gt;&lt;div&gt;ConvexRefPoints&lt;/div&gt;&lt;div&gt;凸包内参考轨迹&lt;/div&gt;&lt;div&gt;原始类型为std::vector&amp;lt;PlanningPointPair&amp;lt;P&amp;gt;, Eigen::aligned_allocator&amp;lt;PlanningPointPair&amp;lt;P&amp;gt;&amp;gt;&amp;gt;，第一个参数表示这条轨迹中的元素是一系列轨迹点，第二个参数表示vector容器使用Eigen库内定义的分配器用于管理内存，因为轨迹点类型是基于Eigen库的类型而来的&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=94;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39760" y="2813" width="955" height="154" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-10" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="n895gSTYapxIoZ0YR_si-9" vertex="1">
          <mxGeometry y="94" width="955" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="n895gSTYapxIoZ0YR_si-9" vertex="1">
          <mxGeometry y="120" width="955" height="8" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-12" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="n895gSTYapxIoZ0YR_si-9" vertex="1">
          <mxGeometry y="128" width="955" height="26" as="geometry" />
        </mxCell>
        <mxCell id="n895gSTYapxIoZ0YR_si-14" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="n895gSTYapxIoZ0YR_si-9" target="n895gSTYapxIoZ0YR_si-4" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="39597.5" y="2917" as="sourcePoint" />
            <mxPoint x="39757.5" y="2917" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-3" value="&lt;div&gt;template&amp;lt;int N , int P&amp;gt;&lt;/div&gt;BezierCurve&lt;div&gt;贝塞尔曲线类，定义域[0 , 1]，模板参数N=5表示贝塞尔曲线的阶数，5阶bezier曲线有6个控制点，P=2表示每个控制点的sl两个方向上的坐标&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=58;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40850" y="1032" width="880" height="258" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-4" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="58" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="84" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-6" value="+GetBezierCurveMatrixB(decimal_t t)：MatF&amp;lt;P, (N&amp;nbsp;+&amp;nbsp;1)&amp;nbsp;*&amp;nbsp;P&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;计算给定归一化时刻t时的n次多项式空间的Bernstein-basis矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="92" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-1" value="+GetBezierCurveDerivationMatrixB(decimal_t t)：MatF&amp;lt;P,&amp;nbsp;N&amp;nbsp;*&amp;nbsp;P&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;计算给定归一化时刻t时的n-1次多项式空间的Bernstein-basis矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="118" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-7" value="+GetBezierCurveIntegralDDerivationMatrixB()：MatF&amp;lt;N&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;N&amp;nbsp;+&amp;nbsp;1&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;计算bezier曲线二阶导数基于Bernstein-basis的Gram方阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="144" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-8" value="+GetBezierCurveIntegralDDDerivationMatrixB()：MatF&amp;lt;N&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;N&amp;nbsp;+&amp;nbsp;1&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算bezier曲线三阶导数基于Bernstein-basis的Gram方阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="170" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-15" value="+template &amp;lt;int T&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;Combine(int m)：&lt;span style=&quot;background-color: initial;&quot;&gt;decimal_t&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算从T个元素中取出m个元素的组合数C(T,m)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-3" vertex="1">
          <mxGeometry y="196" width="880" height="62" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-8" value="template&amp;lt;int N , int P&amp;gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;PiecewiseBezierCurveSpatiotemporalOptimizer&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;分段贝塞尔曲线时空优化器，模板参数在该task构造时给定，N=5表示每段都为5阶贝塞尔曲线，P=2表示每个离散点上有s和l两部分的运动属性&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39540" y="1470" width="1210" height="256" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-9" value="-hessian_matrix_：MatD&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;目标函数中的hessian方阵，方阵维度P*(N+1)*(M+1)，由此推断待求变量为：(每个控制点的sl坐标)*(各个5阶bezier曲线有6个控制点)*(整个规划区域内被分成了M+1段bezier曲线)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="60" width="1210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-12" value="-gradient_matrix_：MatD&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;目标函数中的梯度矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="86" width="1210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-13" value="-convexhulls_：VectorConvexHull&amp;lt;P&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时空走廊中包含的凸包数组" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="112" width="1210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-13" value="-piecewisebeziercurves_：vector&amp;lt; PieceWiseBezierCurve&amp;lt;N, P&amp;gt; &amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划区域的优化轨迹切分成多段5阶bezier曲线的拼接" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="138" width="1210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="164" width="1210" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nBdmFC9K8sZakrukwIs_-11" value="-ConstructPiecewiseBezierCurveSpatiotemporalOptimizer(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const VectorConvexHull&amp;lt;P&amp;gt;&amp;amp; convexhulls,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//时空走廊中包含的凸包序列&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const PlanningPoint&amp;lt;P&amp;gt;&amp;amp; planning_start_point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划起点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const PlanningSpeedAccJerkBoundary&amp;lt;P&amp;gt;&amp;amp; max_min_speed_acc_jerk_matrix)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//s和l方向上速度、加速度、jerk边界矩阵&lt;/div&gt;&lt;div&gt;构建分段贝塞尔曲线时空优化器&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="nBdmFC9K8sZakrukwIs_-8" vertex="1">
          <mxGeometry y="172" width="1210" height="84" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-2" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;Bezier曲线相关元素&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=570;strokeWidth=4;height=100;" parent="1" vertex="1">
          <mxGeometry x="39470" y="2650" width="2140" height="1260" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;template&amp;lt;int P&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;PlanningSpeedAccJerkBoundary&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;优化bezier曲线时时空轨迹上速度、加速度、jerk约束矩阵&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;原始类型为MatF&amp;lt;P , 6&amp;gt;，模板参数P=2表示有s和l两个维度上的约束&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;—————————————————————————————————————————————————————&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;|&amp;nbsp; &amp;nbsp; &amp;nbsp;max_speed_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp;min_speed_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp;max_acc_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp;min_acc_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp;max_jerk_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp;min_jerk_s&amp;nbsp; &amp;nbsp; &amp;nbsp;|&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;—————————————————————————————————————————————————————&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; max_speed_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; min_speed_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; max_acc_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; min_acc_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; max_jerk_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp; &amp;nbsp; &amp;nbsp; min_jerk_l&amp;nbsp; &amp;nbsp; &amp;nbsp;|&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;—————————————————————————————————————————————————————&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=200;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40850" y="2840" width="700" height="260" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-4" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-3" vertex="1">
          <mxGeometry y="200" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="bRqQJQdjOiIrDmUthpR_-3" vertex="1">
          <mxGeometry y="226" width="700" height="8" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-6" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-3" vertex="1">
          <mxGeometry y="234" width="700" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;int N, int P&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;PieceWiseBezierCurve : public BezierCurve&amp;lt;N, P&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;分段贝塞尔曲线类，将整个规划区域内的轨迹切分成多段5阶贝塞尔曲线的拼接，各段贝塞尔曲线的表达式，乘上区间长度，定义域[t1 , t2]&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=72;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40970" y="1347" width="880" height="554" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-14" value="-t1_：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前段bezier曲线定义在的时间区间的起点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="72" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-8" value="-t2_：decimal_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前段bezier曲线定义在的时间区间的终点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="98" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-4" value="-matrix_epsilon_：MatF&amp;lt;P*(N&amp;nbsp;+&amp;nbsp;1), P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对于参考点的位置偏差代价的hessian矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="124" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-5" value="-matrix_aleph_：MatF&amp;lt;1, P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对于参考点的位置偏差代价的梯度矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="150" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-3" value="-matrix_re_：MatF&amp;lt;P*(N&amp;nbsp;+&amp;nbsp;1), P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对于参考点的速度偏差代价的hessian矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="176" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-6" value="-matrix_jmath_：MatF&amp;lt;1, P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对于参考点的速度偏差代价的梯度矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="202" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-10" value="-matrix_hess_acc_：MatF&amp;lt;P*(N&amp;nbsp;+&amp;nbsp;1), P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;合加速度(二阶导数)平顺性代价的hessian矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="228" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-9" value="-matrix_hess_jerk_：MatF&amp;lt;P*(N&amp;nbsp;+&amp;nbsp;1), P*(N&amp;nbsp;+&amp;nbsp;1)&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;合jerk(三阶导数)平顺性代价的hessian矩阵" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="254" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="280" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-10" value="+CalPieceWiseBezierCurveHessianMatrix(const ConvexRefPoints&amp;lt;P&amp;gt;&amp;amp; convex_reference_points)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//计算该段bezier曲线代价时所需的参考点序列&lt;div&gt;计算分段bezier曲线代价函数的hessian矩阵&lt;/div&gt;&lt;div&gt;代价包含四部分：&lt;/div&gt;&lt;div&gt;1. 相对于参考点的位置偏差代价&lt;/div&gt;&lt;div&gt;2. 相对于参考点的速度偏差代价&lt;/div&gt;&lt;div&gt;3. 轨迹合加速度平顺性代价&lt;/div&gt;&lt;div&gt;4. 轨迹合jerk平顺性代价&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="288" width="880" height="134" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-16" value="+GetPieceWiseBezierCurveMatrixB(decimal_t t)：MatF&amp;lt;P, (N&amp;nbsp;+&amp;nbsp;1)&amp;nbsp;*&amp;nbsp;P&amp;gt;&lt;div&gt;获取N阶分段贝塞尔曲线在给定时刻t上的基矩阵&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="422" width="880" height="62" as="geometry" />
        </mxCell>
        <mxCell id="6bNwdpW4k6qqOI0UIzwP-2" value="+GetPieceWiseBezierCurveDerivationMatrixB(decimal_t t)：MatF&amp;lt;P, (N&amp;nbsp;+&amp;nbsp;1)&amp;nbsp;*&amp;nbsp;P&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;获取N阶分段贝塞尔曲线的一阶导数在给定时刻t上的基矩阵&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bRqQJQdjOiIrDmUthpR_-7" vertex="1">
          <mxGeometry y="484" width="880" height="70" as="geometry" />
        </mxCell>
        <mxCell id="bRqQJQdjOiIrDmUthpR_-12" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="nBdmFC9K8sZakrukwIs_-8" target="bRqQJQdjOiIrDmUthpR_-7" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="40520" y="1370" as="sourcePoint" />
            <mxPoint x="40680" y="1370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-2" value="&lt;font style=&quot;font-size: 50px;&quot;&gt;Return&lt;/font&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="OeGwjfl64N3prnyIZkna-9" target="l5mofZLHDOxuWX_CN06--1" edge="1">
          <mxGeometry x="0.1739" y="5" width="160" relative="1" as="geometry">
            <mxPoint x="-10907" y="6861" as="sourcePoint" />
            <mxPoint x="-13490" y="6551" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-11650" y="6651" />
              <mxPoint x="-11640" y="7551" />
            </Array>
            <mxPoint y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-3" value="&lt;font style=&quot;font-size: 50px;&quot;&gt;Return&lt;/font&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="OeGwjfl64N3prnyIZkna-10" target="l5mofZLHDOxuWX_CN06--10" edge="1">
          <mxGeometry x="0.1739" y="5" width="160" relative="1" as="geometry">
            <mxPoint x="-9241" y="6486" as="sourcePoint" />
            <mxPoint x="-9590" y="7784" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-9800" y="6481" />
              <mxPoint x="-9800" y="7841" />
            </Array>
            <mxPoint y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-4" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="uwaPr1xbMoD9fhfCSXmQ-1" target="whb2D-vPT6cYOq-rZ65T-12" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="23210" y="1220" as="sourcePoint" />
            <mxPoint x="23370" y="1220" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-5" value="VehicleState proto&lt;div&gt;描述车辆物理状态的字段，数据来源于定位和底盘，属于底层数据层，提供原始的状态信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24720" y="-1970" width="830" height="344" as="geometry" />
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-6" value="&lt;div&gt;&amp;nbsp; optional double x &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位信息，自车在相对定位静态坐标系下的x坐标，m&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相对定位指的是t0时刻(系统上电时刻)的车辆坐标系，本质还是一个静态坐标系&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double y &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[default =0.0]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;定位信息，自车在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;相对定位静态&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;坐标系下的y坐标，m&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double z &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[default =0.0]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;定位信息，自车在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;相对定位静态&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;坐标系下的z坐标，m&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double timestamp &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时间戳，与定位message的帧头时间戳一致，&lt;span style=&quot;background-color: initial;&quot;&gt;s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double roll &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位信息，自车在相对定位静态坐标系下的侧倾角，rad&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double pitch &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;定位信息，自车在相对定位静态坐标系下的俯仰角&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，rad&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double yaw &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;定位信息，自车在相对定位静态坐标系下的横摆角&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，rad&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double heading &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;定位信息，自车在相对定位静态坐标系下的朝向角&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;(与横摆角一致)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，rad&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double kappa &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车当前位置行驶轨迹的曲率，1/m&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double linear_velocity &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘信息，自车线速度，m/s&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double angular_velocity &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位信息，自车横摆角速度，rad/s&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double linear_acceleration &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;底盘信息，自车线加速度，m/s2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional uint32 gear&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘信息，自车当前档位&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional uint32 driving_mode&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘信息，自车当前驾驶模式，自动驾驶or人驾&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; optional double lon_acceleration &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘信息，自车纵向加速度，m/s2&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double lat_acceleration &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;[default =0.0]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;底盘信息，自车侧向加速度，m/s2&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E1nd5LPOkrhoZcOrzsKl-5" vertex="1">
          <mxGeometry y="52" width="830" height="258" as="geometry" />
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="E1nd5LPOkrhoZcOrzsKl-5" vertex="1">
          <mxGeometry y="310" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-8" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="E1nd5LPOkrhoZcOrzsKl-5" vertex="1">
          <mxGeometry y="318" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="E1nd5LPOkrhoZcOrzsKl-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="-2tjBECkQyzoMxF3ZpL_-1" target="E1nd5LPOkrhoZcOrzsKl-5" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25630" y="-2220" as="sourcePoint" />
            <mxPoint x="25630" y="-1760" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25150" y="-2030" />
              <mxPoint x="25150" y="-2030" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="P7qkli-06ar2Wz1b_aGu-4" value="&lt;font style=&quot;font-size: 50px;&quot;&gt;Use&lt;/font&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="5pu_Kej1jPFEDkICz0Om-4" target="CYiUb-rMYyweTCQEhznL-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="23076" y="-1675.5" as="sourcePoint" />
            <mxPoint x="23236" y="-1675.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-1" value="&lt;span style=&quot;font-weight: 400; text-align: left;&quot;&gt;&lt;b&gt;PlanningContext&lt;/b&gt;&lt;/span&gt;&lt;div style=&quot;font-weight: 400;&quot;&gt;管理规划时的多帧不变量&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="22940" y="-5560" width="790" height="1090" as="geometry">
            <mxRectangle x="-4880" y="1970" width="150" height="41" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-3" value="&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;规划状态管理器，它存储了规划模块在运行过程中的各种状态信息，这些状态信息在多个规划周期之间保持持久性&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;建议不要新增成员，若需要添加，在&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PlanningStatus字段中添加属性&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning_status_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PlanningStatus&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="60" width="790" height="79" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-cruise_status_:CruiseState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;巡航状态&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;none = 0,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  noh_activate = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  mry_activate = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  accs_activate = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  acc_activate = 4&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="139" width="790" height="139" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-4" value="-&lt;span style=&quot;&quot;&gt;traffic_light_keeper_:&lt;/span&gt;&lt;span style=&quot;&quot;&gt;TrafficLightKeeper&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;结构体&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="278" width="790" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-5" value="-&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt;unprotected_left_turn_stop_s_:&lt;/span&gt;&lt;span style=&quot;&quot;&gt;UnprotectedLeftTurnStopS&lt;/span&gt;&lt;div style=&quot;&quot;&gt;无保护左转相关数据&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="318" width="790" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-6" value="-&lt;span style=&quot;text-align: center;&quot;&gt;exchange_area_target_info_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ExchangeAreaTargetInfo&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;交换区目标信息，目标id&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="358" width="790" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-7" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;-&lt;span style=&quot;text-align: center;&quot;&gt;lane_borrow_status_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;LaneBorrowNudgeStatus&lt;/span&gt;&lt;/font&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;借道状态，默认为非借道状态&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  NO_BORROW = 0,  // 常规的非借道状态&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  LEFT_BORROW_PROCESSING = 1,  // 左借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  RIGHT_BORROW_PROCESSING = 2,  // 右借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  TRY_LEFT_BORROW = 3, // 尝试左借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  TRY_RIGHT_BORROW = 4, // 尝试右借道过程中&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="398" width="790" height="140" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-8" value="-&lt;span style=&quot;text-align: center;&quot;&gt;change_lane_reason_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ChangeLaneReason&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;换道原因，默认为none&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  none = 0, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;  human_lane_change = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  noh_lane_change = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  low_speed_lane_change = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  exchange_area_lane_change = 4,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  avoid_obstacle_lane_change = 5,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  mp_lane_change = 6,&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="538" width="790" height="170" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-9" value="-&lt;span style=&quot;text-align: center;&quot;&gt;change_lane_direct_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ChangeLaneDirect&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;换道方向，默认为none&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  none = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  left_lane_change = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  right_lane_change = 2,&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="708" width="790" height="100" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-10" value="-predecider_processed_ = false:bool&amp;nbsp; &amp;nbsp;当前帧规划过程是否进行过前决策处理标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="808" width="790" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="834" width="790" height="8" as="geometry" />
        </mxCell>
        <mxCell id="3tiY78gPMrKfr5yvbISs-12" value="+ PlanningContext() = default&lt;div&gt;使用默认构造&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Init()：void&lt;/div&gt;&lt;div&gt;初始化函数，空，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning_status_不需要初始化，后续根据新增的成员是否需要初始化添加逻辑&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Clear()：void&lt;/div&gt;&lt;div&gt;上下文清空函数&lt;/div&gt;&lt;div&gt;调用规划状态管理器planning_status_的Clear函数，清空所用字段值但保留内存分配，注意如果有多个成员，需要对每个成员执行清空操作&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ planning_status() const：const PlanningStatus&amp;amp;&lt;/div&gt;&lt;div&gt;规划状态查询函数，返回&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;常量&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning_status_，用于读取规划状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;mutable_planning_status()：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;PlanningStatus*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;规划状态修改函数，返回planning_status_指针，用于写入规划状态&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="3tiY78gPMrKfr5yvbISs-1" vertex="1">
          <mxGeometry y="842" width="790" height="248" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-17" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;路径数据&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=170;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="25450" y="1438" width="1190" height="530" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-55" value="&lt;font style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;轨迹数据&lt;/b&gt;&lt;/font&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=177;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="23451.5" y="4800" width="517" height="520" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-56" value="TrajectoryPoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;spacingLeft=4;spacingRight=4;fillColor=none;gradientColor=none;" parent="tqYFgfrxraj3NhB9yT1O-55" vertex="1">
          <mxGeometry x="52" y="110" width="430" height="180" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-57" value="path_point_:PathPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;路径点&lt;div&gt;v：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向速度&lt;/div&gt;&lt;div&gt;a：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加速度&lt;/div&gt;&lt;div&gt;relative_time：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;相对于轨迹起点的时间&lt;br&gt;&lt;/div&gt;&lt;div&gt;da:：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加加速度&lt;/div&gt;&lt;div&gt;steer：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;前轮转角&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;gaussian_info：&lt;span style=&quot;background-color: initial;&quot;&gt;GaussianInfo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;概率信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;" parent="tqYFgfrxraj3NhB9yT1O-56" vertex="1">
          <mxGeometry y="51" width="430" height="129" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-58" value="Trajectory.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-55" vertex="1">
          <mxGeometry x="57" y="370" width="420" height="102" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-59" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;string name = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated TrajectoryPoint trajectory_point = 2;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-58" vertex="1">
          <mxGeometry y="40" width="420" height="54" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-60" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-58" vertex="1">
          <mxGeometry y="94" width="420" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-61" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="tqYFgfrxraj3NhB9yT1O-55" source="tqYFgfrxraj3NhB9yT1O-58" target="tqYFgfrxraj3NhB9yT1O-56" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-113" y="290" as="sourcePoint" />
            <mxPoint x="47" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tqYFgfrxraj3NhB9yT1O-11" target="rDzTBxRO2xqlzFlOzq0q-34" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25585" y="1846" as="sourcePoint" />
            <mxPoint x="25585" y="1980" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25120" y="2170" />
              <mxPoint x="25120" y="2170" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpeedData：public&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;SpeedPoint&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24886" y="1460" width="510" height="146" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-12" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-11" vertex="1">
          <mxGeometry y="26" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-11" vertex="1">
          <mxGeometry y="52" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-14" value="+explicit SpeedData(std::vector&amp;lt;SpeedPoint&amp;gt; speed_points)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-11" vertex="1">
          <mxGeometry y="60" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-15" value="+EvaluateByTime(const double t,&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedPoint* const speed_point) const：bool&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在速度线上找到对应输入时间t上的速度点，并存储在输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_point中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-11" vertex="1">
          <mxGeometry y="86" width="510" height="60" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-62" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="tqYFgfrxraj3NhB9yT1O-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="24480" y="1330" as="sourcePoint" />
            <mxPoint x="24810" y="2094" as="targetPoint" />
            <mxPoint as="offset" />
            <Array as="points">
              <mxPoint x="24690" y="1330" />
              <mxPoint x="24690" y="1533" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-18" value="DiscretizedPath：public std::vector&amp;lt;PathPoint&amp;gt;&lt;div&gt;离散规划路径点序列&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25910" y="1778" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-19" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-18" vertex="1">
          <mxGeometry y="40" width="420" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-18" vertex="1">
          <mxGeometry y="66" width="420" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-21" value="+Length() const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径总长&lt;div&gt;调用vector的方法back和front，取到末了和起始路径点，s相减得到总长&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-18" vertex="1">
          <mxGeometry y="74" width="420" height="46" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-22" value="PathData&lt;div&gt;路径规划数据类，规划结果&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=36;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25520" y="1518" width="1060" height="170" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-23" value="-discretized_path_：DiscretizedPath&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;离散规划路径点序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-22" vertex="1">
          <mxGeometry y="36" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-24" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;path_point_decision_guide_：&lt;/span&gt;std::vector&amp;lt;std::tuple&amp;lt;double, PathPointType, double&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;每个路径点上的决策信息，用于速度决策&lt;div&gt;ctor存储每个路径点，每个路径点的属性由tuple存储，包括&amp;lt;该路径点在参考线上的s坐标，路径点类型，距离最近障碍物的距离&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-22" vertex="1">
          <mxGeometry y="62" width="1060" height="48" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-25" value="-frenet_path_：FrenetFramePath&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在参考线frenet坐标系下的路径" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-22" vertex="1">
          <mxGeometry y="110" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-22" vertex="1">
          <mxGeometry y="136" width="1060" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-27" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-22" vertex="1">
          <mxGeometry y="144" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-28" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tqYFgfrxraj3NhB9yT1O-22" target="tqYFgfrxraj3NhB9yT1O-18" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26065" y="1628" as="sourcePoint" />
            <mxPoint x="26225" y="1628" as="targetPoint" />
            <Array as="points">
              <mxPoint x="26090" y="1728" />
              <mxPoint x="26090" y="1728" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-41" value="FrenetFramePath：public std::vector&amp;lt;FrenetFramePoint&amp;gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;离散frenet坐标系路径点&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25514" y="1778" width="360" height="120" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-42" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-41" vertex="1">
          <mxGeometry y="40" width="360" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-43" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-41" vertex="1">
          <mxGeometry y="66" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-44" value="+EvaluateByS(const double s) const：FrenetFramePoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;指定s，返回路径上对应的frenet点&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-41" vertex="1">
          <mxGeometry y="74" width="360" height="46" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-50" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tqYFgfrxraj3NhB9yT1O-22" target="tqYFgfrxraj3NhB9yT1O-41" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26059" y="1708" as="sourcePoint" />
            <mxPoint x="26059" y="1808" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25630" y="1738" />
              <mxPoint x="25630" y="1738" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-37" value="PathPointType" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="26390" y="1718" width="200" height="208" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-38" value="enum：&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;IN_LANE,&lt;/div&gt;&lt;div&gt;    OUT_ON_FORWARD_LANE,&lt;/div&gt;&lt;div&gt;    OUT_ON_REVERSE_LANE,&lt;/div&gt;&lt;div&gt;    OFF_ROAD,&lt;/div&gt;&lt;div&gt;    NO_TURN,&lt;/div&gt;&lt;div&gt;    LEFT_TURN,&lt;/div&gt;&lt;div&gt;    RIGHT_TURN,&lt;/div&gt;&lt;div&gt;    UNKNOWN,&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tqYFgfrxraj3NhB9yT1O-37" vertex="1">
          <mxGeometry y="26" width="200" height="174" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-39" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tqYFgfrxraj3NhB9yT1O-37" vertex="1">
          <mxGeometry y="200" width="200" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-40" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="tqYFgfrxraj3NhB9yT1O-24" target="tqYFgfrxraj3NhB9yT1O-37" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="25500" y="1778" as="sourcePoint" />
            <mxPoint x="25660" y="1778" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-63" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tqYFgfrxraj3NhB9yT1O-17" target="rDzTBxRO2xqlzFlOzq0q-34" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="26660" y="2120" as="sourcePoint" />
            <mxPoint x="26660" y="4904" as="targetPoint" />
            <Array as="points">
              <mxPoint x="25920" y="2440" />
              <mxPoint x="25920" y="2440" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tqYFgfrxraj3NhB9yT1O-64" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="whb2D-vPT6cYOq-rZ65T-12" target="tqYFgfrxraj3NhB9yT1O-17" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="24320" y="1270" as="sourcePoint" />
            <mxPoint x="25530" y="1380" as="targetPoint" />
            <mxPoint as="offset" />
            <Array as="points">
              <mxPoint x="25920" y="1270" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;MapPathPoint : public math::Vec2d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;地图路径点&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24810" y="5440" width="660" height="298" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-2" value="#heading_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;地图路径点上的朝向角" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Q2yjMZpAwS2SziCi53ad-1" vertex="1">
          <mxGeometry y="50" width="660" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-2" value="#lane_waypoints_：std::vector&amp;lt;LaneWaypoint&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储已经记录的车道途经点序列，车道途经点包含所在车道信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Q2yjMZpAwS2SziCi53ad-1" vertex="1">
          <mxGeometry y="76" width="660" height="34" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Q2yjMZpAwS2SziCi53ad-1" vertex="1">
          <mxGeometry y="110" width="660" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-4" value="+MapPathPoint(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const math::Vec2d &amp;amp;point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//调用基类构造函数构造基类对象&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double heading,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//初始化heading_&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LaneWaypoint lane_waypoint)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//向lane_waypoints_后面依次推入&lt;span style=&quot;background-color: initial;&quot;&gt;lane_waypoint&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Q2yjMZpAwS2SziCi53ad-1" vertex="1">
          <mxGeometry y="118" width="660" height="90" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-3" value="+MapPathPoint(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const math::Vec2d &amp;amp;point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//调用基类构造函数构造基类对象&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double heading,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//初始化heading_&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;LaneWaypoint&amp;gt; lane_waypoints)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//初始化lane_waypoints_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Q2yjMZpAwS2SziCi53ad-1" vertex="1">
          <mxGeometry y="208" width="660" height="90" as="geometry" />
        </mxCell>
        <mxCell id="Q2yjMZpAwS2SziCi53ad-6" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="E8_Oqp6gndIfkOiQ3fTA-5" target="Q2yjMZpAwS2SziCi53ad-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="24867.5" y="5590" as="sourcePoint" />
            <mxPoint x="25027.5" y="5590" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-13" value="&lt;span style=&quot;background-color: rgb(51, 153, 255);&quot;&gt;参考点是地图路径经过smooth之后的参考线上的点&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(51, 153, 255);&quot;&gt;经过smooth之后参考点对应的地图路径点会被修正，二者再次重合&lt;/span&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Q2yjMZpAwS2SziCi53ad-6" vertex="1" connectable="0">
          <mxGeometry x="0.3796" y="1" relative="1" as="geometry">
            <mxPoint y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;struct LaneWaypoint&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;车道途经点&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25690" y="5508" width="540" height="162" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-5" value="+s：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;以车道中心线为s轴，s轴原点位于车道中心线起点，该车道途经点的s坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-4" vertex="1">
          <mxGeometry y="50" width="540" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-8" value="+l：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该车道途经点的l坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-4" vertex="1">
          <mxGeometry y="76" width="540" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-9" value="+lane = nullptr：std::shared_ptr&amp;lt;const LaneInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;关联车道" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-4" vertex="1">
          <mxGeometry y="102" width="540" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Z7sNKP3E3HT_N7aFND93-4" vertex="1">
          <mxGeometry y="128" width="540" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-7" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-4" vertex="1">
          <mxGeometry y="136" width="540" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="Q2yjMZpAwS2SziCi53ad-1" target="Z7sNKP3E3HT_N7aFND93-4" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="25567.5" y="5800" as="sourcePoint" />
            <mxPoint x="25727.5" y="5800" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-11" value="&lt;font style=&quot;background-color: rgb(51, 153, 255);&quot;&gt;地图路径点和车道途经点&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;background-color: rgb(51, 153, 255);&quot;&gt;在地图上的位置重合&lt;/font&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Z7sNKP3E3HT_N7aFND93-10" vertex="1" connectable="0">
          <mxGeometry x="0.0667" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-20" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;perception::Obstacle&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;感知障碍物类&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;perception.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=57;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="29760" y="-340" width="550" height="164" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-21" value="optional double theta&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物在静态世界坐标系下的朝向角&lt;div&gt;optional double heading_flu&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车车辆坐标系下的朝向角，相对于自车的朝向角&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-20" vertex="1">
          <mxGeometry y="57" width="550" height="73" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-22" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Z7sNKP3E3HT_N7aFND93-20" vertex="1">
          <mxGeometry y="130" width="550" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-23" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Z7sNKP3E3HT_N7aFND93-20" vertex="1">
          <mxGeometry y="138" width="550" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Z7sNKP3E3HT_N7aFND93-24" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="Z7sNKP3E3HT_N7aFND93-20" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="29690" y="-140" as="sourcePoint" />
            <mxPoint x="29850" y="-140" as="targetPoint" />
            <Array as="points">
              <mxPoint x="30035" y="-90" />
              <mxPoint x="30035" y="-90" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="lt1kv0aLVrNbqvNkrJnT-1" value="Trajectory.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="30790" y="2727" width="420" height="102" as="geometry" />
        </mxCell>
        <mxCell id="lt1kv0aLVrNbqvNkrJnT-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;string name = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated TrajectoryPoint trajectory_point = 2;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="lt1kv0aLVrNbqvNkrJnT-1" vertex="1">
          <mxGeometry y="40" width="420" height="54" as="geometry" />
        </mxCell>
        <mxCell id="lt1kv0aLVrNbqvNkrJnT-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="lt1kv0aLVrNbqvNkrJnT-1" vertex="1">
          <mxGeometry y="94" width="420" height="8" as="geometry" />
        </mxCell>
        <mxCell id="lt1kv0aLVrNbqvNkrJnT-4" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="EvTDT-Fj80fakcm31R0z-8" target="lt1kv0aLVrNbqvNkrJnT-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="30260" y="1130" as="sourcePoint" />
            <mxPoint x="30899" y="1130" as="targetPoint" />
            <Array as="points">
              <mxPoint x="30430" y="2778" />
              <mxPoint x="30430" y="2778" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="lt1kv0aLVrNbqvNkrJnT-5" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="lt1kv0aLVrNbqvNkrJnT-1" target="rDzTBxRO2xqlzFlOzq0q-34" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="30930" y="2950" as="sourcePoint" />
            <mxPoint x="31220" y="5572" as="targetPoint" />
            <Array as="points">
              <mxPoint x="31000" y="5475" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-5" value="Projection.proto&lt;div&gt;投影信息，描述如何将地球这个椭球体上的点投影到平面上的投影方式&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16140" y="-7708" width="570" height="450" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-6" value="&lt;div&gt;&lt;font style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;optional string proj = 1;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;// PROJ.4 setting:&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;// &quot;+proj=tmerc +lat_0={origin.lat} +lon_0={origin.lon} +k={scale_factor}&amp;nbsp;+ellps=WGS84 +no_defs&quot;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font&gt;采用 PROJ.4 格式来描述投影参数，&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font&gt;PROJ.4 格式是一种用于描述地理坐标投影方式的字符串标准，由开源投影库 PROJ（原名 PROJ.4）定义。它通过一系列以加号（+）开头的参数，详细指定了如何将地球表面的经纬度坐标投影到平面坐标系（如地图）上。&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+proj&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：投影类型（如 tmerc 表示横轴墨卡托投影）&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+lat_0&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：投影原点的纬度&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+lon_0&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：投影原点的经度&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+k&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：比例因子&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+ellps&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：椭球体类型（如 WGS84）&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); border-radius: 4px; padding: 1px 3px;&quot;&gt;+no_defs&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：不使用默认参数&lt;/span&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;全局坐标系的分类&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENU(东北天)坐标系和UTM(通用横轴墨卡托)坐标系都是平面坐标系，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ENU 是局部的、相对的，UTM 是全球分带的、绝对的。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ENU坐标系，以某个参考点为原点，建立的局部直角坐标系（东、北、天顶方向），用于小范围高精度定位和导航。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;UTM 坐标系，它是将地球表面的经纬度（球面坐标）通过横轴墨卡托投影转换到平面上得到的坐标系。UTM 用于全球范围的地图和定位，单位为米。&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="5cXoNBp30RIJxR7JaeBA-5" vertex="1">
          <mxGeometry y="40" width="570" height="410" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-9" value="Header.proto&lt;div&gt;地图文件头描述&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=43;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16670" y="-7148" width="520" height="500" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  optional bytes version = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图版本&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes date = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图日期&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional Projection projection = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图使用的投影坐标系&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes district = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图区域ID&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes generation = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图生成相关信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes rev_major = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图主版本号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes rev_minor = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图次版本号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;//地图覆盖区域的边界坐标（通常为投影坐标系下的左、上、右、下边界）。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double left = 8;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double top = 9;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double right = 10;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double bottom = 11;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional bytes vendor = 12; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//供应商&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="5cXoNBp30RIJxR7JaeBA-9" vertex="1">
          <mxGeometry y="43" width="520" height="297" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-11" value="&lt;font style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px;&quot;&gt;bytes&lt;/span&gt;&lt;span&gt;&amp;nbsp;表示&lt;/span&gt;&lt;span&gt;字节序列&lt;/span&gt;&lt;span&gt;类型，可以存储任意二进制数据或原始字节流，就是二进制数据&lt;/span&gt;&lt;/font&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font&gt;在地图 proto 里，像&amp;nbsp;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px;&quot;&gt;version&lt;/span&gt;、&lt;span style=&quot;border-radius: 4px; padding: 1px 3px;&quot;&gt;date&lt;/span&gt;、&lt;span style=&quot;border-radius: 4px; padding: 1px 3px;&quot;&gt;district&lt;/span&gt;&amp;nbsp;等字段用&amp;nbsp;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px;&quot;&gt;bytes&lt;/span&gt;&amp;nbsp;类型，通常是为了兼容不同格式或长度的数据，或者直接存储原始二进制内容。&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font&gt;&lt;font style=&quot;&quot; face=&quot;var(--monaco-monospace-font)&quot;&gt;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px; white-space-collapse: preserve;&quot;&gt;bytes&lt;/span&gt;&lt;/font&gt;&amp;nbsp;可以兼容存储任意格式的数据，包括字符串（如 &quot;v1.0&quot;）、二进制内容等。&lt;br style=&quot;&quot;&gt;如果实际存储的是字符串（比如版本号、日期等），一般会用 UTF-8 编码后放进&amp;nbsp;&lt;font style=&quot;&quot; face=&quot;var(--monaco-monospace-font)&quot;&gt;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px; white-space-collapse: preserve;&quot;&gt;bytes&lt;/span&gt;&lt;/font&gt;&amp;nbsp;字段。&lt;br style=&quot;&quot;&gt;这样做的好处是灵活性更高，既能存文本，也能存二进制数据，便于不同系统间兼容和扩展。&lt;br style=&quot;&quot;&gt;但如果你确定只存文本，也可以用&amp;nbsp;&lt;font style=&quot;&quot; face=&quot;var(--monaco-monospace-font)&quot;&gt;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px; white-space-collapse: preserve;&quot;&gt;string&lt;/span&gt;&lt;/font&gt;&amp;nbsp;类型，&lt;font style=&quot;&quot; face=&quot;var(--monaco-monospace-font)&quot;&gt;&lt;span style=&quot;border-radius: 4px; padding: 1px 3px; white-space-collapse: preserve;&quot;&gt;bytes&lt;/span&gt;&lt;/font&gt;&amp;nbsp;只是更通用。&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="5cXoNBp30RIJxR7JaeBA-9" vertex="1">
          <mxGeometry y="340" width="520" height="160" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-13" value="Map.proto&lt;div&gt;存储高精地图的字段，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;base_map中的数据会存储在这个字段中从而可以在apollo中使用&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=43;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-17260" y="-6347" width="560" height="420" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-14" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;optional Header header = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//地图文件头描述,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;以下元素地图中会有多个，故以序列方式存储&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Crosswalk crosswalk = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//人行横道元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Junction junction = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Lane lane = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated StopSign stop_sign = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车让行标识元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Signal signal = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//红绿灯元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated YieldSign yield = 7; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//减速让行元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Overlap overlap = 8; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//重叠关系元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated ClearArea clear_area = 9; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//禁止停车区元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated SpeedBump speed_bump = 10; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//减速带元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Road road = 11; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated ParkingSpace parking_space = 12; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车位元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated PNCJunction pnc_junction = 13; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//PNCJunction元素&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated RSU rsu = 14; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//V2X路边广播设备&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;repeated Area ad_area = 15;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//区域，支持用户自定义将整张地图划分若干区域&lt;/div&gt;&lt;div&gt;repeated BarrierGate barrier_gate = 16;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//描述道路上的各种类型的物理隔离设施&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="5cXoNBp30RIJxR7JaeBA-13" vertex="1">
          <mxGeometry y="43" width="560" height="377" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;Crosswalk.proto&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;主要是对人性横道元素的表达&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16040" y="-6838" width="700" height="230" as="geometry" />
        </mxCell>
        <mxCell id="5cXoNBp30RIJxR7JaeBA-17" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//人行横道(Crosswalk)元素的全局唯一ID&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&amp;nbsp;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;apollo使用的是全局地图，地图中的各个元素的id都是唯一的&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional Polygon polygon = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//人行横道的外边框的几何多边形，地图没有表达人行横道的斑马线，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;// &lt;/span&gt;而是把所有同一个方向的所有斑马线用一个外包围框包围起来&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 此id是Oerlap字段的id(即压盖关系的id)而非产生压盖关系的另一个元素的id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 这样设计的目的是为了快速查找压盖关系&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;repeated Id overlap_id = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//重叠id&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontStyle=0;horizontal=1;" parent="5cXoNBp30RIJxR7JaeBA-16" vertex="1">
          <mxGeometry y="52" width="700" height="178" as="geometry" />
        </mxCell>
        <mxCell id="0n_qP153wrmHRf4xtIjW-1" value="Junction.proto&lt;div&gt;主要是路口元素的表达&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-15550" y="-7298" width="570" height="370" as="geometry" />
        </mxCell>
        <mxCell id="0n_qP153wrmHRf4xtIjW-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口(Junction)元素的全局唯一ID&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  optional Polygon polygon = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口区域的边界范围，包含了真实边界和虚拟边界的形状点，但无法区分哪些是真实边界，哪些是虚拟边界。&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  repeated Id overlap_id = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//压盖关系id&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  enum Type {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;UNKNOWN = 0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;IN_ROAD = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//包含车道多变少的路口，比如分合流区、交换区&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CROSS_ROAD = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//包含丁字路口，十字路口等&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;FORK_ROAD = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//包含车道少变多的路口&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;MAIN_SIDE = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//包含主辅路连接路的路口&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DEAD_END = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//包含断头路的路口&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  };&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional Type type = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口(Junction)的类型&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="0n_qP153wrmHRf4xtIjW-1" vertex="1">
          <mxGeometry y="46" width="570" height="324" as="geometry" />
        </mxCell>
        <mxCell id="0n_qP153wrmHRf4xtIjW-3" value="Lane.proto&lt;div&gt;描述了地图车道元素的信息，一般来讲仅允许单车通行的叫车道&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;apollo中与车道相关的属性(比如车道线、车道采样信息LaneSampleAssociation)涉及sl坐标系时，s坐标原点就是该车道的起点，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;但是不同车道的起点不同，因此不同车道的上的s无法直接比较，apollo通过比例映射的方式将一个车道上的s位置，通过计算该点在当前车道中所在位置的百分比来映射到目标车道来得到在目标车道上的近似s，这样的操作要求制图时有换道关系的车道间要尽量保持平行且起终点保持对齐才不会有大的误差产生&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=108;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14890" y="-7978" width="810" height="1458" as="geometry" />
        </mxCell>
        <mxCell id="0n_qP153wrmHRf4xtIjW-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//目前具体由三部分构成：road_id-road_section_id-lane id构成&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional Curve central_curve = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道中心线，作为车道的参考轨迹使用；&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // 车道边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional LaneBoundary left_boundary = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//车道左侧边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional LaneBoundary right_boundary = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道右侧边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double length = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道的长度，m&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional double speed_limit = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道最高限速，m/s&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  repeated Id overlap_id = 7; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//压盖关系id&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // 一条车道可由多条车道驶入，一条车道也可以驶入多条车道，因此使用repeated&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Id predecessor_id = 8; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的前驱车道ID&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Id successor_id = 9; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的后继车道ID&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // 两侧同向相邻车道，由近及远依次存储&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Id left_neighbor_forward_lane_id = 10; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的&amp;nbsp;同向左邻车道ID&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Id right_neighbor_forward_lane_id = 11; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的同向右邻车道ID&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  enum LaneType { &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;NONE = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CITY_DRIVING = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//城市车道（机动车道）&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;BIKING = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自行车道（非机动车道）&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SIDEWALK = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//人行道&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PARKING = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车区&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SHOULDER = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路肩车道，比如高速应急车道这类用于临时停靠的车道&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  };&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional LaneType type = 12; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路类型&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  enum LaneTurn {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;NO_TURN = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//直行&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LEFT_TURN = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//左转&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;RIGHT_TURN = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//右转&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;U_TURN = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//调头&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  };&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional LaneTurn turn = 13; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道标识转弯方向&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;// 两侧反向相邻车道，由近及远存储，&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;// 比如对于双向单车道道路两条车道彼此各为对方的反向相邻车道&lt;br&gt;&lt;div style=&quot;&quot;&gt;  repeated Id left_neighbor_reverse_lane_id = 14; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的反向左邻车道ID&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated Id right_neighbor_reverse_lane_id = 15; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的反向右邻车道ID&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;// 路口区域会包含驶入路口的左转、右转、直行车道或者驶出该路口的车道，&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;// 因此车道元素会有是否属于路口这一属性&lt;br&gt;&lt;div style=&quot;&quot;&gt;  optional Id junction_id = 16; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道所属的Junction的ID，如果当前车道不属于任何Junction，该字段为空；&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // 车道中心线上各采样点据中心线起点的s和到车道边界的半宽&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated LaneSampleAssociation left_sample = 17; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道中心线采样点到车道左侧边界的关联属性&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated LaneSampleAssociation right_sample = 18; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道中心线采样点到车道右侧边界的关联属性&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  enum LaneDirection {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    FORWARD = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道行驶方向与车道形状点(中心线)方向相同&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    BACKWARD = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;车道行驶方向与车道形状点(中心线)方向&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;相反&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    BIDIRECTION = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道行驶方向既可以与车道形状点(中心线)方向相同，也可以与车道形状点方向相反。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  optional LaneDirection direction = 19; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道方向，以&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;车道中心线方向(即中心线s增长的方向)&lt;/span&gt;为依据&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;// 车道中心线上各采样点据中心线起点的s和到道路边界的半宽&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated LaneSampleAssociation left_road_sample = 20; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//中心点与最近左路边界之间的关联&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated LaneSampleAssociation right_road_sample = 21; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//中心点与最近右路边界之间的关联&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;//自相反的Lane的ID。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// 对于双向通行的lane，地图会将其处理为两条空间重叠，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// 但是方向相反的Lane，这两条Lane之间是自相反的关系。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// PNC利用这个关系实现在允许双向通行的车道上进行变道。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// 因此需要repeated存储两条自相反车道的lane_id&lt;/div&gt;&lt;div style=&quot;&quot;&gt;repeated Id self_reverse_lane_id = 22;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="0n_qP153wrmHRf4xtIjW-3" vertex="1">
          <mxGeometry y="108" width="810" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-3" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="5cXoNBp30RIJxR7JaeBA-16" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15970" y="-6508" as="sourcePoint" />
            <mxPoint x="-15810" y="-6508" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-4" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="0n_qP153wrmHRf4xtIjW-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15720" y="-5783" as="sourcePoint" />
            <mxPoint x="-15330" y="-6518" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-5" value="Polygon.proto&lt;div&gt;描述地图元素几何形状的多边形，没有必要保证是凸多边形&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-18004" y="-5546.5" width="760" height="90" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-6" value="&lt;div&gt;// 通过围成该多边形的角点来描述，按顺时针或逆时针方向存储&lt;/div&gt;repeated apollo.common.PointENU point = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 使用命名空间apollo::common中的ENU坐标系的点来表示角点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-5" vertex="1">
          <mxGeometry y="40" width="760" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-7" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;apollo::hdmap&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;提供地图数据及相关算法操作&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="-18390" y="-9088" width="1130" height="620" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-8" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="0n_qP153wrmHRf4xtIjW-3" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15060" y="-5822" as="sourcePoint" />
            <mxPoint x="-13922" y="-6418" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-9" value="LineSegment.proto&lt;div&gt;线段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-17909" y="-4786" width="570" height="110" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-10" value="&lt;div&gt;// 一条线段由两个端点来表示，因此使用repeated&lt;/div&gt;&lt;div&gt;// 存储的是曲线采样点的集合，不是线段两端点，因此数量不一定是两个&lt;/div&gt;repeated apollo.common.PointENU point = 1;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-9" vertex="1">
          <mxGeometry y="40" width="570" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-11" value="CurveSegment.proto&lt;div&gt;曲线段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-18044" y="-5100" width="840" height="194" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-12" value="&lt;div&gt;// 曲线段的类型，目前只设计了用直线表示曲线，后续可以增加样条、圆弧来表示曲线&lt;/div&gt;&lt;div&gt;&amp;nbsp; oneof curve_type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; LineSegment line_segment = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 与其说是线段，说这是点集更为合适，因为存储的是曲线上采样点的坐标&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double s = 6;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 曲线段的起点s&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional apollo.common.PointENU start_position = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 曲线段起点的ENU坐标，由于整条曲线只有一个曲线段，这里的起始点就是整条曲线的起始点&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double heading = 8;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 起点的heading，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENU&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;直角坐标系下计算&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; optional double length = 9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 曲线段的长度，m&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-11" vertex="1">
          <mxGeometry y="40" width="840" height="154" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-13" value="Curve.proto&lt;div&gt;曲线，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这里曲线的每个曲线段首尾连接，曲线段的端点之间肯定存在重合，这里没有进行去重处理&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-17931" y="-5330" width="614" height="104" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-14" value="&lt;div&gt;// 一条曲线由若干曲线段来表示，因此用repeated，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;原始地图中的曲线只由一条曲线段表示&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated CurveSegment segment = 1;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-13" vertex="1">
          <mxGeometry y="40" width="614" height="64" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-15" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;curved=1;" parent="1" source="Nd508ExnG5eQxn5qj6Ja-11" target="Nd508ExnG5eQxn5qj6Ja-9" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-17380" y="-5053" as="sourcePoint" />
            <mxPoint x="-17220" y="-5053" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-16" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Nd508ExnG5eQxn5qj6Ja-13" target="Nd508ExnG5eQxn5qj6Ja-11" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-17550" y="-4733" as="sourcePoint" />
            <mxPoint x="-17390" y="-4733" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-17" value="&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;地图元素中的通用元素&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=220;strokeWidth=4;height=45;" parent="1" vertex="1">
          <mxGeometry x="-18150" y="-5736.5" width="1040" height="1118.5" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-18" value="LaneBoundary.proto&lt;div&gt;车道边界&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=43;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-13710" y="-7932.5" width="730" height="240" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-19" value="&lt;div&gt;optional Curve curve = 1; //车道边界的形状点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double length = 2; //车道边界的长度，即curve的长度&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在路口区域，真实世界中本没有车道标线，但是为了更好的支持下游使用，会人为的补充车道，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// 这类车道边界都是虚拟车道边界。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;//也就是说在apollo的高精地图中路口内车道的连接关系是存在，会通过一条虚拟车道实现路口外两车道的连接，并且支持多对多连接&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional bool virtual = 3; //车道边界是否真实存在。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//车道边界类型 该字段定义为数组结构是为了支持同一条车道边界上有不同边界类型的情况。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;// 按照s增长的方向存储&lt;/div&gt;&lt;div&gt;repeated LaneBoundaryType boundary_type = 4;&amp;nbsp;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-18" vertex="1">
          <mxGeometry y="43" width="730" height="197" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-20" value="LaneBoundaryType prot&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;o&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;车道边界类型&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12830" y="-7968" width="540" height="311" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-21" value="&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; DOTTED_YELLOW = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黄色虚线&lt;/div&gt;&lt;div&gt;&amp;nbsp; DOTTED_WHITE = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//白色虚线&lt;/div&gt;&lt;div&gt;&amp;nbsp; SOLID_YELLOW = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黄色实线&lt;/div&gt;&lt;div&gt;&amp;nbsp; SOLID_WHITE = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//白色实线&lt;/div&gt;&lt;div&gt;&amp;nbsp; DOUBLE_YELLOW = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//双黄线&lt;/div&gt;&lt;div&gt;&amp;nbsp; CURB = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路牙&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double s = 1; //车道边界类型(的起点?)相对于车道边界起始位置的s偏移量。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// 上面边界类型的枚举只给出来一些基础类型，比如虚实线的边界其类型是由多个基础类型组成&lt;/div&gt;&lt;div&gt;// 因此这里需要支持多类型&lt;/div&gt;&lt;div&gt;repeated Type types = 2; //车道边界类型&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-20" vertex="1">
          <mxGeometry y="48" width="540" height="263" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-24" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Nd508ExnG5eQxn5qj6Ja-18" target="Nd508ExnG5eQxn5qj6Ja-20" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13000" y="-7470.5" as="sourcePoint" />
            <mxPoint x="-12840" y="-7470.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-25" value="Id" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-17829" y="-5666.5" width="410" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-26" value="&lt;div&gt;// 地图元素的全局唯一id(包括车道、路口、重叠等)&lt;/div&gt;optional string id = 1;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-25" vertex="1">
          <mxGeometry y="26" width="410" height="44" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-27" value="LaneSampleAssociation proto&lt;div&gt;车道采样信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-13710" y="-7481.5" width="590" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-28" value="&lt;div&gt;optional double s = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//沿车道中心线几何的采样点，记录采样点位置与车道中心线起点的s距离；&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double width = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//采样点位置，车道中心线与单侧边界(车道/道路边界)几何的距离；&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-27" vertex="1">
          <mxGeometry y="41" width="590" height="59" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-29" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="0n_qP153wrmHRf4xtIjW-3" target="Nd508ExnG5eQxn5qj6Ja-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13930" y="-7030.5" as="sourcePoint" />
            <mxPoint x="-13770" y="-7030.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-30" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="0n_qP153wrmHRf4xtIjW-3" target="Nd508ExnG5eQxn5qj6Ja-18" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13890" y="-7168.5" as="sourcePoint" />
            <mxPoint x="-13520" y="-7380.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-31" value="StopSign proto&lt;div&gt;停车让行标牌&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-13960" y="-7018" width="420" height="284" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-32" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车让行标牌(StopSign)的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Curve stop_line = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 停止线几何&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;// 重叠元素的id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;enum StopType {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; ONE_WAY = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; TWO_WAY = 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; THREE_WAY = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; FOUR_WAY = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; ALL_WAY = 5;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional StopType type = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 停止标牌的类型，在美国比较常见&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-31" vertex="1">
          <mxGeometry y="40" width="420" height="244" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-33" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="Nd508ExnG5eQxn5qj6Ja-31" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15890" y="-5608" as="sourcePoint" />
            <mxPoint x="-15730" y="-5608" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-34" value="Signal proto&lt;div&gt;红绿灯总成&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-13422.5" y="-7018" width="540" height="410" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-35" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全局id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional Polygon boundary = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//红绿灯的边框几何形状&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Subsignal subsignal = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//一组红绿灯中包含多个灯泡&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//重叠元素id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; MIX_2_HORIZONTAL = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//水平两灯泡&lt;/div&gt;&lt;div&gt;&amp;nbsp; MIX_2_VERTICAL = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//垂直两灯泡&lt;/div&gt;&lt;div&gt;&amp;nbsp; MIX_3_HORIZONTAL = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//水平三灯泡&lt;/div&gt;&lt;div&gt;&amp;nbsp; MIX_3_VERTICAL = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//垂直三灯泡&lt;/div&gt;&lt;div&gt;&amp;nbsp; SINGLE = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//单个灯泡&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;/div&gt;&lt;div&gt;optional Type type = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//红绿灯的布局类型&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;一个红绿灯可能对应一个或者多个停止线，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// 比如左转、右转、直行车道由不同的灯泡控制，其每个车道的停止线也不一样&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// 存储顺序与subsignal中的存储顺序一致？&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated Curve stop_line = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//红绿灯对应的停止线&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated SignInfo sign_info = 7; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//标牌信息&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-34" vertex="1">
          <mxGeometry y="40" width="540" height="370" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-37" value="Subsignal proto&lt;div&gt;红绿灯灯泡&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12747.5" y="-7158" width="650" height="315" as="geometry" />
        </mxCell>
        <mxCell id="Nd508ExnG5eQxn5qj6Ja-38" value="&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; CIRCLE = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//圆灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_LEFT = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//左转箭头灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_FORWARD = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//直行箭头灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_RIGHT = 5; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//右转箭头灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_LEFT_AND_FORWARD = 6; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//左转直行箭头灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_RIGHT_AND_FORWARD = 7; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//右转直行箭头灯&lt;/div&gt;&lt;div&gt;&amp;nbsp; ARROW_U_TURN = 8; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//掉头箭头灯&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional Type type = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//灯泡的类型&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//红绿灯灯泡(Subsignal)的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional apollo.common.PointENU location = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//灯泡中心位置坐标，目前地图中没有该属性的数据&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Nd508ExnG5eQxn5qj6Ja-37" vertex="1">
          <mxGeometry y="41" width="650" height="274" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-1" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="Nd508ExnG5eQxn5qj6Ja-34" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15960" y="-6038" as="sourcePoint" />
            <mxPoint x="-12025.33" y="-6370.33" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-2" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Nd508ExnG5eQxn5qj6Ja-34" target="Nd508ExnG5eQxn5qj6Ja-37" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12862.5" y="-7148" as="sourcePoint" />
            <mxPoint x="-12702.5" y="-7148" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-3" value="SignInfo proto&lt;div&gt;红绿灯标牌信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=39;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12712.5" y="-6758" width="320" height="140" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-4" value="&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; None = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; NO_RIGHT_TURN_ON_RED = 1; //红灯禁止右转&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Type type = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//标牌的类型&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-3" vertex="1">
          <mxGeometry y="39" width="320" height="101" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-5" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Nd508ExnG5eQxn5qj6Ja-34" target="LWFpOxd7QR8SVaHnObAa-3" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12822.5" y="-6710" as="sourcePoint" />
            <mxPoint x="-12687.5" y="-6898" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-6" value="YieldSign proto&lt;div&gt;减速让行标志牌&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-11930" y="-6968" width="510" height="150" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-7" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车让行(yield)标牌的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;repeated Curve stop_line = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车让行标识对应的停止线，支持多条停止线&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 重叠元素id&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-6" vertex="1">
          <mxGeometry y="46" width="510" height="104" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-8" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-6" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15890" y="-5473" as="sourcePoint" />
            <mxPoint x="-15500" y="-6208" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-9" value="Overlap proto&lt;div&gt;描述两个地图元素的空间重叠关系&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16640" y="-5758" width="890" height="240" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-10" value="&lt;div&gt;// 在其他地图元素比如lane、junction等中的overlap_id其实就是压盖关系的id而非产生压盖关系的另一个元素的id&lt;/div&gt;&lt;div&gt;// 这样设计的目的是为了快速查找压盖关系&lt;/div&gt;&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//在apollo里对于压盖关系也生成一个全局id来唯一的标识它&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Overlap表示两两元素的关系，所以一个Overlap一般包含两个ObjectOverlapInfo元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated ObjectOverlapInfo object = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//地图元素压盖关系信息&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 一个例子：在同一个Oevrlap中有多个RegionOverlapInfo，同时每个RegionOverlapInfo中又有多个Polygon&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//&amp;nbsp;一个Overlap有多个RegionOverlapInfo：比如车道与人行横道，人行横道被中央隔离带分成南段和北段，两段之间有绿化带无法通行。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 每个RegionOverlapInfo有多个polygon：比如每段重叠区域因为有安全岛或隔离墩被分割成多个多边形(比如重叠区域内部被挖空，此时需要多个多边形表示)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;repeated RegionOverlapInfo region_overlap = 3;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//两个元素公共重叠区域的信息&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-9" vertex="1">
          <mxGeometry y="52" width="890" height="188" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-11" value="ObjectOverlapInfo proto&lt;div&gt;描述在压盖关系中一个元素的信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16800" y="-5131.5" width="410" height="300" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-12" value="&lt;div&gt;//Overlap元素的ID，元素的类型可以根据第二个字段判断，&lt;/div&gt;&lt;div&gt;//比如如果overlap_info为lane_overlap_info，则id为车道(lane)的id&lt;/div&gt;&lt;div&gt;optional Id id = 1;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;oneof overlap_info {&lt;/div&gt;&lt;div&gt;&amp;nbsp; LaneOverlapInfo lane_overlap_info = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; SignalOverlapInfo signal_overlap_info = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; StopSignOverlapInfo stop_sign_overlap_info = 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; CrosswalkOverlapInfo crosswalk_overlap_info = 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; JunctionOverlapInfo junction_overlap_info = 7;&lt;/div&gt;&lt;div&gt;&amp;nbsp; YieldOverlapInfo yield_sign_overlap_info = 8;&lt;/div&gt;&lt;div&gt;&amp;nbsp; ClearAreaOverlapInfo clear_area_overlap_info = 9;&lt;/div&gt;&lt;div&gt;&amp;nbsp; SpeedBumpOverlapInfo speed_bump_overlap_info = 10;&lt;/div&gt;&lt;div&gt;&amp;nbsp; ParkingSpaceOverlapInfo parking_space_overlap_info = 11;&lt;/div&gt;&lt;div&gt;&amp;nbsp; PNCJunctionOverlapInfo pnc_junction_overlap_info = 12;&lt;/div&gt;&lt;div&gt;&amp;nbsp; RSUOverlapInfo rsu_overlap_info = 13;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-11" vertex="1">
          <mxGeometry y="40" width="410" height="260" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-13" value="RegionOverlapInfo proto&lt;div&gt;描述即属于地图元素A又属于地图元素B的公共重叠区域&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16130" y="-5352" width="480" height="170" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-14" value="&lt;div&gt;//该公共重叠区域有不同于元素A、B的单独的全局id&lt;/div&gt;&lt;div&gt;optional Id id = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//公共重叠区域可能中间有孔洞等情况，需要多个多边形来表示，因此这里使用repeated&lt;/div&gt;&lt;div&gt;repeated Polygon polygon = 2;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-13" vertex="1">
          <mxGeometry y="50" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-15" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-9" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15720" y="-5888" as="sourcePoint" />
            <mxPoint x="-15365" y="-5703" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-16" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-9" target="LWFpOxd7QR8SVaHnObAa-11" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15435" y="-6032" as="sourcePoint" />
            <mxPoint x="-15275" y="-6032" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-17" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-9" target="LWFpOxd7QR8SVaHnObAa-13" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15395" y="-5783" as="sourcePoint" />
            <mxPoint x="-15245" y="-5872" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-18" value="LaneOverlapInfo proto&lt;div&gt;压盖关系中车道元素的信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=42;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16275" y="-5137.5" width="580" height="312" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-19" value="&lt;div&gt;optional double start_s = 1;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 重叠区段在本车道中心线上的起点s距离&lt;/div&gt;&lt;div&gt;optional double end_s = 2;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重叠区段在本车道中心线上的终点s距离&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//仅当Lane与Lane的Overlap时，才有该字段&lt;/div&gt;&lt;/div&gt;&lt;div&gt;optional bool is_merge = 3;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 表示该重叠是否为合流关系，比如匝道汇入主路&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Id region_overlap_id = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 指向该重叠区域的ID，便于表达复杂的重叠形状&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-18" vertex="1">
          <mxGeometry y="42" width="580" height="128" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-20" value="CrosswalkOverlapInfo proto&lt;div&gt;压盖关系中人行横道元素信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=42;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="LWFpOxd7QR8SVaHnObAa-18" vertex="1">
          <mxGeometry y="170" width="580" height="142" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-21" value="optional Id region_overlap_id = 1; // 指向该重叠区域的ID，便于表达复杂的重叠形状" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-20" vertex="1">
          <mxGeometry y="42" width="580" height="48" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-32" value="压盖关系的其他元素的信息暂未使用" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="LWFpOxd7QR8SVaHnObAa-20" vertex="1">
          <mxGeometry y="90" width="580" height="52" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-33" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-32" vertex="1">
          <mxGeometry y="26" width="580" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-24" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-11" target="LWFpOxd7QR8SVaHnObAa-18" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-16810" y="-4955" as="sourcePoint" />
            <mxPoint x="-16650" y="-4955" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-26" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="5cXoNBp30RIJxR7JaeBA-9" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-16590" y="-5998" as="sourcePoint" />
            <mxPoint x="-16620" y="-5988" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-27" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-9" target="5cXoNBp30RIJxR7JaeBA-5" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-16690" y="-6781.5" as="sourcePoint" />
            <mxPoint x="-16800" y="-6853.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-34" value="ClearArea proto&lt;div&gt;禁停区元素&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-15490" y="-5758" width="430" height="140" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-35" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//禁停区(ClearArea)元素的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//禁停区几何与其他元素的overlap关系ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Polygon polygon = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//禁止停车区的几何外边框&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-34" vertex="1">
          <mxGeometry y="40" width="430" height="100" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-36" value="SpeedBump proto&lt;div&gt;减速带&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14910" y="-5758" width="500" height="190" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-37" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//减速带(SpeedBump)的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//减速带几何与其他元素的overlap关系ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//减速带的位置，用曲线表示，曲线中的采样点有坐标，&lt;/div&gt;&lt;div&gt;//某些减速带会有分段的情况，因此使用repeated关键字&lt;/div&gt;&lt;div&gt;repeated Curve position = 3;&amp;nbsp;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-36" vertex="1">
          <mxGeometry y="40" width="500" height="150" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-38" value="Road proto&lt;div&gt;道路元素&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14345" y="-5817.5" width="690" height="370" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-39" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路(Road)元素的全局唯一标识&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated RoadSection section = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//Road中包含的所有的Section，一个Road可以包含一个或者多个Section&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//如果Road在Junction中，junction_id为该Junction的ID；如果Road不在Junction中，该字段为空&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//为什么不用repeated表示？&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//在高精地图建模中，Road 通常被定义为“非重叠、连续的道路段”，&lt;/div&gt;&lt;div&gt;//每一段 Road 要么完全处于某个 Junction 区域内，要么完全处于普通道路区域。&lt;/div&gt;&lt;div&gt;//&lt;span style=&quot;background-color: transparent;&quot;&gt;现实中，一个 Road 不会同时跨越多个 Junction。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//比如一条路口区域的 Road，全部都在该路口内，不会一部分属于 A 路口，一部分属于 B 路口。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//在高精地图建模中会在路口Junction内部人为填充Road，为保证Lane的前后继关系存在，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//这是高精地图建模与物理世界中的典型差异&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional Id junction_id = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 道路所属junction的id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; HIGHWAY = 1; //高速路&lt;/div&gt;&lt;div&gt;&amp;nbsp; CITY_ROAD = 2; //城市路&lt;/div&gt;&lt;div&gt;&amp;nbsp; PARK = 3; //内部路&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional Type type = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路等级&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-38" vertex="1">
          <mxGeometry y="41" width="690" height="329" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-40" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-34" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15220" y="-5968" as="sourcePoint" />
            <mxPoint x="-14105" y="-5770" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-41" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-36" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-14520" y="-6060" as="sourcePoint" />
            <mxPoint x="-12615" y="-5476" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-43" value="RoadSection proto&lt;div&gt;道路段，沿道路延长方向分割&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14220" y="-5368.5" width="440" height="164" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-44" value="&lt;div&gt;optional Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路段id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// 一个道路段中沿道路宽度方向有多个Lane，因此使用repeated&lt;/div&gt;&lt;div&gt;repeated Id lane_id = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该Section中包含的所有的Lane的ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional RoadBoundary boundary = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路边界&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-43" vertex="1">
          <mxGeometry y="50" width="440" height="114" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-45" value="RoadBoundary proto&lt;div&gt;道路段两侧边界，允许道路边界中带有孔洞&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14250" y="-5136.5" width="500" height="160" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-46" value="&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//通常由道路两侧的路缘石（curb）、护栏、绿化带、墙体、隔离带等物理设施组成。&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional BoundaryPolygon outer_polygon = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//道路两侧的物理外边界，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//比如绿化带不连续导致外边界中存在孔洞，&lt;/div&gt;&lt;div&gt;//对道路边界的描述中支持把这种情况表达出来&lt;/div&gt;&lt;div&gt;repeated BoundaryPolygon hole = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路两侧边界中间的孔洞&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-45" vertex="1">
          <mxGeometry y="50" width="500" height="110" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-47" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-38" target="LWFpOxd7QR8SVaHnObAa-43" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-14275" y="-5376.5" as="sourcePoint" />
            <mxPoint x="-14115" y="-5376.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-48" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-43" target="LWFpOxd7QR8SVaHnObAa-45" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13815" y="-5096.5" as="sourcePoint" />
            <mxPoint x="-13655" y="-5096.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-49" value="BoundaryPolygon proto&lt;div&gt;描述道路两侧边界的几何形状&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14192" y="-4892" width="380" height="80" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-50" value="repeated BoundaryEdge edge = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 道路的左右侧边界" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-49" vertex="1">
          <mxGeometry y="40" width="380" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-52" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-45" target="LWFpOxd7QR8SVaHnObAa-49" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-13140" y="-5216.5" as="sourcePoint" />
            <mxPoint x="-13235" y="-5095.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-53" value="BoundaryEdge proto&lt;div&gt;道路单侧边界&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-14247" y="-4736.5" width="490" height="190" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-54" value="&lt;div&gt;optional Curve curve = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//道路边界的几何，线状几何，由形状点构成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; NORMAL = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//左右边界之外的其它类型&lt;/div&gt;&lt;div&gt;&amp;nbsp; LEFT_BOUNDARY = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路左边界&lt;/div&gt;&lt;div&gt;&amp;nbsp; RIGHT_BOUNDARY = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路右边界&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional Type type = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路边界的类型，区分左右&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-53" vertex="1">
          <mxGeometry y="40" width="490" height="150" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-55" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-49" target="LWFpOxd7QR8SVaHnObAa-53" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-14162" y="-4655" as="sourcePoint" />
            <mxPoint x="-13752" y="-4726" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-56" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-38" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15350" y="-6332" as="sourcePoint" />
            <mxPoint x="-13790" y="-5948" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-57" value="ParkingSpace proto&lt;div&gt;描述单个停车位&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-13573" y="-5808" width="510" height="184" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-58" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车位(ParkingSpace)元素的全局唯一标识&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Polygon polygon = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车位(ParkingSpace)元素的边界&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//减速带几何与其他元素的overlap关系ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double heading = 4; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停车位(ParkingSpace)的朝向&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-57" vertex="1">
          <mxGeometry y="40" width="510" height="144" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-60" value="RSU proto&lt;div&gt;路边广播设备&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12260" y="-5808" width="400" height="124" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-61" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路边广播设备(RSU)的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Id junction_id = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//RSU所属的Junction ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//RSU要素相关的Overlap ID&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-60" vertex="1">
          <mxGeometry y="40" width="400" height="84" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-62" value="PNCJunction proto&lt;div&gt;PNCJunction是对人理解的路口的表达，相对于Junction，它对边界有更高的约束，比如要求边界沿着停止线等等，这样对于PNC来说提供了一个更为精准的路口建模&lt;/div&gt;&lt;div&gt;假设你在城市道路上遇到一个有红绿灯、停止线、多个进口道和出口道的十字路口。对于人类驾驶员来说，路口的范围大致就是停止线包围的区域。但在高精地图中，普通Junction的边界可能比较宽泛，甚至包含一些虚拟边界，不能精确反映车辆实际需要决策的区域。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=112;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12925" y="-5817.5" width="570" height="340" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-63" value="&lt;div&gt;optional Id id = 1; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//PNCJunction元素的全局唯一标识&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional Polygon polygon = 2; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//PNCJunction的边界几何形状&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//与其他元素重叠关系的id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated PassageGroup passage_group = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//通道分组&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//apollo地图支持将通道按照不同依据进行分组管理，当前支持的分组依据是按同一入口和同一出口进行管理，分组依据在Passage字段中的Type中，后续可按需增加&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//同一通道，如果按同一入口进行分组管理的话，其类型为EXTRANCE；按同一出口进行分组管理的话，其类型为EXIT&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//对于这样一个路口：东西南北各有4条车道，其中两条车道驶入路口，两条车道从路口驶出，对于驶入车道一条是左转加直行另一条是右转加直行。按照同一入口的依据进行分组一共8组PassageGroup，每个分组中有两条Passage&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-62" vertex="1">
          <mxGeometry y="112" width="570" height="228" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-64" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-57" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-14350" y="-6088" as="sourcePoint" />
            <mxPoint x="-12270" y="-5773" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-66" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-60" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12340" y="-6138" as="sourcePoint" />
            <mxPoint x="-11706.666666666666" y="-5868" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-67" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-62" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15950.400000000001" y="-6294.5" as="sourcePoint" />
            <mxPoint x="-11930.4" y="-5970.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-68" value="PassageGroup proto&lt;div&gt;通道分组&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=49;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12875" y="-5413.5" width="470" height="130" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-69" value="&lt;div&gt;optional Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该通道分组的全局唯一id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Passage passage = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该通道分组中包含的通道&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-68" vertex="1">
          <mxGeometry y="49" width="470" height="81" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-70" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;" parent="1" source="LWFpOxd7QR8SVaHnObAa-62" target="LWFpOxd7QR8SVaHnObAa-68" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12645" y="-5498" as="sourcePoint" />
            <mxPoint x="-12485" y="-5498" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-71" value="Passage proto&lt;div&gt;通道，可以理解为车辆从入口到出口的一条可行驶路径，由多条lane首首尾链接而成，路口内部虽然在物理世界中没有车道，在apollo地图建模中会抽象出来虚拟车道&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=59;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-12950" y="-5165" width="620" height="273" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-72" value="&lt;div&gt;optional Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//通道的全局唯一id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Id signal_id = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//控制该通道车流的所有红绿灯总成id&lt;/div&gt;&lt;div&gt;repeated Id yield_id = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//控制该通道车流的所有减速让行标志牌id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated Id stop_sign_id = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//控制该通道车流的所有停车让行标志牌id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated Id lane_id = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//组成该通道的首尾连接的车道id，以s增长方向存储&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; ENTRANCE = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//入口通道&lt;/div&gt;&lt;div&gt;&amp;nbsp; EXIT = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//出口通道&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional Type type = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//通道类型，作为通道分组的依据，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//apollo目前只有按同一入口和同一出口两种分组依据，后续可按需增加&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-71" vertex="1">
          <mxGeometry y="59" width="620" height="214" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-73" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;" parent="1" source="LWFpOxd7QR8SVaHnObAa-68" target="LWFpOxd7QR8SVaHnObAa-71" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-12655" y="-5403.5" as="sourcePoint" />
            <mxPoint x="-12495" y="-5403.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-79" value="ComponentBase : public std::enable_shared_from_this&amp;lt;ComponentBase&amp;gt;&lt;div&gt;组件基类&lt;/div&gt;&lt;div&gt;父类中的std::enable_shared_from_this是为了保证在智能指针传递给其他线程或回调时，保证对象生命周期安全。&lt;/div&gt;&lt;div&gt;对于作为底层通信与调度用的cyber，这种操作非常频繁，因此更需要保证对象生命周期安全&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=86;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3480" y="-14740" width="810" height="684" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-80" value="# config_file_path_ = &quot;&quot; : std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;业务组件配置文件路径&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;节点成员，使组件可以集成到CyberRT框架，提供以下功能：&lt;/div&gt;&lt;div&gt;&lt;div&gt;提供通信能力：为Component提供Reader(订阅者)、Writer&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(发布者)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;、Service&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(服务端)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;、Client&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(客户端)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;创建能力&lt;/span&gt;&lt;/div&gt;&lt;div&gt;管理组件标识：每个Component通过node_在系统中获得唯一标识&lt;/div&gt;&lt;div&gt;支持任务调度：为调度器提供组件名称和任务管理&lt;/div&gt;&lt;div&gt;统一资源管理：集中管理Component的所有通信资源&lt;/div&gt;&lt;/div&gt;&lt;div&gt;# node_ = nullptr：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;Node&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;存储用于订阅派生类组件输入消息的订阅器，输入消息就是派生类组件的模板参数，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;存储顺序同模板参数中消息的顺序&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;readers_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;ReaderBase&amp;gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-79" vertex="1">
          <mxGeometry y="86" width="810" height="300" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-81" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-79" vertex="1">
          <mxGeometry y="386" width="810" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-82" value="&lt;font&gt;+ virtual Initialize(const ComponentConfig&amp;amp; config) : bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;//输入&lt;/span&gt;，&lt;span style=&quot;white-space: pre;&quot;&gt;组件基类&lt;/span&gt;配置&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;font-family: monospace; font-size: 0px; text-wrap-mode: nowrap;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Helvetica; font-size: 12px; text-wrap-mode: wrap;&quot;&gt;&lt;font&gt;组件初始化函数，子类中重写&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ GetProtoConfig(T* config) const&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，业务组件配置类对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;从&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;config_file_path_读取业务组件配置数据，写入业务组件配置类对象&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;&quot;&gt;# virtual &lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;Init&lt;/span&gt;() = 0 :&amp;nbsp;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;用户自定义组件初始化函数，纯虚函数，必须在用户自定义组件中重写&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# LoadConfigFiles(const ComponentConfig&amp;amp; config) :&amp;nbsp;void&amp;nbsp;&lt;/div&gt;&lt;div&gt;配置加载函数&lt;/div&gt;&lt;div&gt;从输入的组件配置config中读取业务组件配置文件路径初始化成员config_file_path_&lt;/div&gt;&lt;div&gt;从输入的组件配置config中读取参数文件路径，调用gflags库提供的方法函数google::SetCommandLineOption，&lt;span style=&quot;background-color: transparent;&quot;&gt;自动加载并解析指定路径的 flag 参数文件，把里面的所有参数都注入到程序中。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-wrap-mode: nowrap; font-family: monospace; font-size: 0px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-wrap-mode: nowrap; font-family: monospace; font-size: 0px;&quot;&gt;mxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Extends%22%20style%3D%22endArrow%3Dblock%3BendSize%3D16%3BendFill%3D0%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22-0.25%22%20width%3D%22160%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%225586%22%20y%3D%22-806%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%225586%22%20y%3D%22-710%22%20as%3D%22targetPoint%22%2F%3E%3CmxPoint%20as%3D%22offset%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;&lt;font style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; face=&quot;monospace&quot;&gt;&lt;span style=&quot;font-size: 0px; text-wrap-mode: nowrap;&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Extends%22%20style%3D%22endArrow%3Dblock%3BendSize%3D16%3BendFill%3D0%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22-0.25%22%20width%3D%22160%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%225586%22%20y%3D%22-806%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%225586%22%20y%3D%22-710%22%20as%3D%22targetPoint%22%2F%3E%3CmxPoint%20as%3D%22offset%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;&lt;/font&gt;&lt;font style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; face=&quot;monospace&quot;&gt;&lt;span style=&quot;font-size: 0px; text-wrap-mode: nowrap;&quot;&gt;virtual bool Initialize(const ComponentConfig&amp;amp; confi&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-79" vertex="1">
          <mxGeometry y="394" width="810" height="290" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-83" value="&lt;div&gt;templete&amp;lt;typename M0 = NullType,&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;typename M1&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= NullType&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;typename M2 &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= NullType&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;typename M3&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= NullType&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;Component : public ComponentBase&lt;div&gt;组件类，实现某一特定功能的独立模块&lt;/div&gt;&lt;div&gt;模板输入指明该组件需要订阅哪些具体的消息作为输入&lt;/div&gt;&lt;div&gt;apollo中各种功能通过组件这一概念实现集成，某一特定功能通过继承该组件模板类实现用特定业务的算法逻辑，比如Planning_Component&lt;/div&gt;&lt;div&gt;主模板类，NullType是占位符类似函数里的默认参数的用法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=120;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3537" y="-13810" width="930" height="590" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-84" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-83" vertex="1">
          <mxGeometry y="120" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-85" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-83" vertex="1">
          <mxGeometry y="146" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-86" value="+&amp;nbsp;bool Initialize(const ComponentConfig&amp;amp; config) override : bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件配置&lt;div&gt;组件初始化函数&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;该函数由cyberRT自动调用&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，调用时会自动加载业务组件的DAG文件，生成组件配置对象config作为该函数输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中调用成员函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LoadConfigFiles初始化成员业务组件配置文件路径&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ComponentBase::&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;config_file_path_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中会调用用户自定义特定组件初始化函数Init，完成业务组件的初始化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;通过成员node_提供的订阅器生成函数，生成订阅模板参数中各消息的订阅器，存入成员readers_，存储顺序同模板参数中消息的顺序&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Process(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件运行所需的全部消息&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M2&amp;gt;&amp;amp; msg2,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::shared_ptr&amp;lt;M3&amp;gt;&amp;amp; msg3&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) : bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;组件运行函数，&lt;span style=&quot;background-color: rgb(125, 125, 0); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;该函数由cyberRT自动调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中会调用用户自定义组件的执行函数Proc()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual &lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;Proc&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，组件运行所需的全部消&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M2&amp;gt;&amp;amp; msg2,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::shared_ptr&amp;lt;M3&amp;gt;&amp;amp; msg3&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) = 0 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;用户自定义组件运行函数，纯虚函数，必须在用户自定义组件中重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-83" vertex="1">
          <mxGeometry y="154" width="930" height="436" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-88" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;Cyber RT通信框架&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="-4290" y="-14660" width="710" height="198.5" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-90" value="NaviPlanning : public PlanningBase&lt;div&gt;导航规划，不依赖高精地图，结构化道路，规划能力弱&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2924" y="-11" width="490" height="110" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-91" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-90" vertex="1">
          <mxGeometry y="50" width="490" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-92" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-90" vertex="1">
          <mxGeometry y="76" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-93" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-90" vertex="1">
          <mxGeometry y="84" width="490" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-95" value="HDMap&lt;div&gt;高精地图接口类，负责对外提供地图查询、检索等功能。暴露给外部使用&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=49;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-20540" y="-1670.5" width="740" height="650" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-96" value="- impl_：HDMapImpl&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;高精地图底层实现类对象，同时包含地图元素数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-95" vertex="1">
          <mxGeometry y="49" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-97" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-95" vertex="1">
          <mxGeometry y="75" width="740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-98" value="+ LoadMapFromFile(const std::string&amp;amp; map_filename)：int&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，提前录制好的地图文件路径&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，0转化成功，-1转化失败&lt;br&gt;&lt;div&gt;将提前录制好的高精地图文件转化成apollo内部的地图格式，存储在impl_里&lt;/div&gt;&lt;div&gt;只是接口，底层实现在impl_.LoadMapFromFile&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;GetLanes(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图上给定一点，世界坐标系xy坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，在该点附近的查找半径，m&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;LaneInfoConstPtr&amp;gt;* lanes) const：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在查找半径内和车道，可能有多个&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，0表示成功，其他表示失败&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;车道获取函数&lt;/div&gt;&lt;div&gt;调用底层实现impl_中的GetLanes函数实现&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-95" vertex="1">
          <mxGeometry y="83" width="740" height="567" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-99" value="HDMapImpl&lt;div&gt;高精地图底层实现类，&lt;span style=&quot;background-color: transparent;&quot;&gt;负责具体地图元素的数据结构、查找算法、KDTree 构建等细节。&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;只在内部使用，不直接暴露给外部模块&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=70;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-19240" y="-1768" width="1300" height="3650" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-100" value="&lt;div&gt;//在函数LoadMapFromFile中完成初始化&lt;/div&gt;- map_：Map&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//apollo内部地图格式，proto中定义&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//在函数LoadMapFromProto中完成初始化&lt;/div&gt;&lt;div&gt;//各种地图元素的哈希表，根据全局id查具体元素，每个元素都是再次封装后的地图元素类&lt;/div&gt;&lt;div&gt;- lane_table_：LaneTable&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- junction_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;JunctionTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- area_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AreaTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- crosswalk_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CrosswalkTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- signal_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;SignalTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- barrier_gate_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BarrierGateTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- stop_sign_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;StopSignTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- yield_sign_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;YieldSignTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- clear_area_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ClearAreaTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- speed_bump_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;SpeedBumpTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- overlap_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;OverlapTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- road_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RoadTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- parking_space_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ParkingSpaceTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- pnc_junction_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PNCJunctionTable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- rsu_table_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RSUTable&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//在&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;函数Build**KDTree完成初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//将上面哈希表中的各种地图元素用AABox进行表示，然后将这些AABox按地图元素类型分类，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//每种类型的AABox放在一起构成各种**boxes_成员，每一类**boxes_成员用对应的KDTree组织起来形成树状数据结构，成员**kdtree_存储这个树状结构的根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- lane_segment_boxes_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;LaneSegmentBox&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储的是包裹每个地图元素的中心线上的每一曲线段的AABox&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- lane_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;LaneSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- junction_polygon_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;JunctionPolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- junction_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;JunctionPolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- area_polygon_boxes_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;AreaPolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- area_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;AreaPolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- crosswalk_polygon_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;CrosswalkPolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- crosswalk_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;CrosswalkPolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- signal_segment_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SignalSegmentBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- signal_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;SignalSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- barrier_gate_segment_boxes_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;BarrierGateSegmentBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- barrier_gate_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;BarrierGateSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- stop_sign_segment_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;StopSignSegmentBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- stop_sign_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;StopSignSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- yield_sign_segment_boxes_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;YieldSignSegmentBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- yield_sign_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;YieldSignSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- clear_area_polygon_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ClearAreaPolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- clear_area_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;ClearAreaPolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- speed_bump_segment_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SpeedBumpSegmentBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- speed_bump_segment_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;SpeedBumpSegmentKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- parking_space_polygon_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ParkingSpacePolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- parking_space_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;ParkingSpacePolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- pnc_junction_polygon_boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;PNCJunctionPolygonBox&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- pnc_junction_polygon_kdtree_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;PNCJunctionPolygonKDTree&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-99" vertex="1">
          <mxGeometry y="70" width="1300" height="930" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-101" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-99" vertex="1">
          <mxGeometry y="1000" width="1300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-112" value="&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LaneTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;= std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;LaneInfo&amp;gt;&amp;gt;;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;JunctionTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;JunctionInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;AreaTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;AreaInfo&amp;gt;&amp;gt;;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SignalTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;SignalInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;BarrierGateTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;BarrierGateInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CrosswalkTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;CrosswalkInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;StopSignTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;StopSignInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;YieldSignTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;YieldSignInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ClearAreaTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;ClearAreaInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;SpeedBumpTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;SpeedBumpInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;OverlapTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;OverlapInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;RoadTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;RoadInfo&amp;gt;&amp;gt;;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ParkingSpaceTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;ParkingSpaceInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PNCJunctionTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;PNCJunctionInfo&amp;gt;&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;RSUTable &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::unordered_map&amp;lt;std::string, std::shared_ptr&amp;lt;RSUInfo&amp;gt;&amp;gt;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这里的*Info是对各种地图元素的封装，相比于proto中定义的结构体，提供更为丰富的操作方法&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-99" vertex="1">
          <mxGeometry y="1008" width="1300" height="282" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-111" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-99" vertex="1">
          <mxGeometry y="1290" width="1300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-102" value="&lt;div&gt;+ LoadMapFromFile(const std::string&amp;amp; map_filename)：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图文件路径&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，0成功，-1失败&lt;br&gt;&lt;/div&gt;&lt;div&gt;从地图文件中加载地图到apollo，完成地图底层实现类HDMapImpl中成员数据的加载&lt;/div&gt;&lt;div&gt;·.先清空底层实现类中的数据成员缓存，调用函数Clear&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从地图文件中读取地图元素数据填入apollo内部地图map_，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根据不同的地图文件格式调用不同加载函数，xml文件opendrive地图，bin，txt&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;将map_中的各种地图元素构造成封装类存入哈希表，调用函数LoadMapFromProto完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ LoadMapFromProto(const Map&amp;amp; map_proto)：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，apollo内部地图格式&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，0成功，-1失败&lt;/div&gt;&lt;div&gt;读取apollo内部地图格式，构造具体地图元素的封装类对象，用于实现各种高精地图底层逻辑，比如查找算法等&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;构造好的地图元素封装类，与其全局id组成key-value传入成员中的各种table中&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对lane、junction、stop sign、area四种地图元素进行后处理，更新各元素封装类内部的压盖关系，调用各地图元素封装类**Info内部的后处理函数PostProcess完成&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;将各地图元素按类型区分，每种类型的地图元素由kdtree这种数据结构组织起来，调用函数Build**KDTree&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ Clear()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;清空数据成员缓存&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//根据全局id在table成员中查找对应地图元素的封装对象&lt;/div&gt;&lt;div&gt;//由于是接口函数，因此使用的id是高精地图中的类型，即proto定义的地图元素id类型&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetLaneById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LaneInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ GetJunctionById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;JunctionInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetSignalById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;SignalInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetCrosswalkById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CrosswalkInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetStopSignById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;StopSignInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetYieldSignById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;YieldSignInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetClearAreaById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ClearAreaInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetSpeedBumpById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;SpeedBumpInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetOverlapById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;OverlapInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetRoadById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RoadInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetParkingSpaceById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ParkingSpaceInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetPNCJunctionById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PNCJunctionInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetRSUById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RSUInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetAreaById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AreaInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;GetBarrierGateById(const Id&amp;amp; id) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BarrierGateInfoConstPtr&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+ CreateHDMapId(const std::string&amp;amp; string_id) const：Id&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，apollo内部的id类型&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，高精地图中的id类型&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;生成高精地图中的合法id类型，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;通常紧接着调用上面的接口函数，用于在高精地图中获取地图元素封装对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//在地图上给定一点和搜索半径，搜索在这个半径范围内的指定地图元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//这些是对外的接口函数，是通过指定点的坐标来识别的，由于高精地图上的点都是在ENU坐标系中定义，因此作为接口函数自然要接受ENU坐标系中的点坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;+ GetLanes(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图上指定一点，ENU坐标系上的点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;LaneInfoConstPtr&amp;gt;* lanes) const：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，搜到的地图元素封装类对象，这里是车道&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//返回，0表示成功，其他表示失败&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;车道搜索接口函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.调用私有实现函数GetLanes，该函数是接口函数的重载，完成将ENU三维坐标系上的点自动转换为apollo内部的二维坐标Vec2d，使计算更为轻量化，反映了接口和实现分离的设计模式&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetJunctions(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;JunctionInfoConstPtr&amp;gt;* junctions&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const：int&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;+ GetSignals(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;SignalInfoConstPtr&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;gt;*&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;signals&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) const：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ GetCrosswalks(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;std::vector&amp;lt;CrosswalkInfoConstPtr&amp;gt;* crosswalks&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;) const：int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetStopSigns(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;StopSignInfoConstPtr&amp;gt;* stop_signs&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;)&amp;nbsp;const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetYieldSigns(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;YieldSignInfoConstPtr&amp;gt;* yield_signs&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetClearAreas(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ClearAreaInfoConstPtr&amp;gt;* clear_areas&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetSpeedBumps(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SpeedBumpInfoConstPtr&amp;gt;* speed_bumps&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;)&amp;nbsp;const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetRoads(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;RoadInfoConstPtr&amp;gt;* roads&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetParkingSpaces(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ParkingSpaceInfoConstPtr&amp;gt;* parking_spaces&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetPNCJunctions(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;PNCJunctionInfoConstPtr&amp;gt;* pnc_junctions&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetAreas(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;AreaInfoConstPtr&amp;gt;* areas&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetBarrierGates(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::PointENU&amp;amp; point, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;BarrierGateInfoConstPtr&amp;gt;* barrier_gates&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;) const&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//构建各种地图元素的AABox对象存入**boxes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;成员，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将各种地图元素按类型分组，每组都用KDTree组织成数据结构存入**kdtree_成员&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//根据不同地图元素的几何形状，选择对应的KDTree构建函数，目前只针对几何形状为线段或多边形的地图元素提供两种构建函数，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BuildSegmentKDTree、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BuildPolygonKDTree&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//不同类型地图元素的kdtree参数不同，相同的是都不限制搜索深度&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- BuildLaneSegmentKDTree()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildJunctionPolygonKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- BuildCrosswalkPolygonKDTree()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildSignalSegmentKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildStopSignSegmentKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildYieldSignSegmentKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildClearAreaPolygonKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildSpeedBumpSegmentKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildParkingSpacePolygonKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildPNCJunctionPolygonKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- BuildAreaPolygonKDTree()&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- BuildBarrierGateSegmentKDTree()：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; template &amp;lt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class Table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//模板参数，地图元素的集合类型&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class BoxTable,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//模板参数，地图元素转化成AABox对象后的存储类型&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class KDTree&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;模板参数，这些AABox对象组织成kdtree后的kdtree类型&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- static BuildSegmentKDTree(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const Table&amp;amp; table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，等待组织成kdtree的地图元素的集合&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::AABoxKDTreeParams&amp;amp; params,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，kdtree参数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;BoxTable* const box_table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，将地图元素转化成AABox后的存储数组&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unique_ptr&amp;lt;KDTree&amp;gt;* const kdtree)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，将这些地图元素AABox组织成的kdtree数据结构&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;对于几何形状为线段的地图元素集合，提供kdtree构建函数，比如lane、信号灯signal、隔离设施barrier gate、stop sign、yield sign、speed bump&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对于曲线形地图元素，需要两层循环才能剥离出线段，以lane为例，第一层循环遍历成员lane_table_，得到单条lane，第二层循环遍历lane中的segments，得到由相邻采样点构成的单段线段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对这条线段调用&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ObjectWithAABox模板类构造函数，生成AABox对象，存入成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;boxes_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用math命名空间&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AABoxKDTree2d模板类构造函数，将上面生成的AABox对象集合组织成kdtree数据结构，存入成员**&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;kdtree_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;中&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; template &amp;lt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class Table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//模板参数，地图元素的集合类型&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class BoxTable,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//模板参数，地图元素转化成AABox对象后的存储类型&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;class KDTree&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;模板参数，这些AABox对象组织成kdtree后的kdtree类型&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- static BuildPolygonKDTree(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const Table&amp;amp; table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，等待组织成kdtree的地图元素的集合&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::AABoxKDTreeParams&amp;amp; params,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，kdtree参数&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;BoxTable* const box_table,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，将地图元素转化成AABox后的存储数组&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unique_ptr&amp;lt;KDTree&amp;gt;* const kdtree)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，将这些地图元素AABox组织成的kdtree数据结构&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;对于几何形状为多边形的地图元素集合，提供kdtree构建函数，比如junction、area、crosswalk、禁停区clear area、停车位parking space、pnc junction&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;只需遍历table成员得到单个多边形形状的地图元素&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;·.对这个多边形调用&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ObjectWithAABox模板类构造函数，生成地图元素的AABox对象，存入成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;boxes_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用math命名空间&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AABoxKDTree2d模板类构造函数，将上面生成的AABox对象集合组织成kdtree数据结构，存入&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;kdtree_&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;成员中&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;//在地图上给定一点和搜索半径，搜索在这个半径范围内的指定地图元素&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;//内部实现函数，将指定点坐标转化成apollo内部的二维坐标Vec2d，使数据传输更加轻量化&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- GetLanes(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，地图上指定一点，apollo内部的二维坐标&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;std::vector&amp;lt;LaneInfoConstPtr&amp;gt;* lanes) const：int&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;//输出，搜到的地图元素封装类对象，这里是车道&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//返回，0表示成功，其他表示失败&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;车道搜索实现函数&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;检查要搜索的地图元素是否组织成了kdtree，检查该地图元素对应成员**kdtree_是否写入根节点(是否为空指针)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在kdtree中搜索元素，调用成员函数SearchObjects实现，返回搜索到的地图元素的全局id，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;对于车道，在kdtree中搜索得到的是&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LaneSegmentBox，多个车道段可能同属于一个Lane，在SearchObjects函数中进行了去重处理，这里返回的是Lane的id，而不是&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LaneSegmentBox的id&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;根据上面得到的id序列，调用成员函数CreateHDMapId转化成高精地图中的合法类型，然后通过地图元素获取成员函数，这里是GetLaneById，得到地图元素封装对象的指针LaneInfoConstPtr，并输出&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&amp;nbsp;GetJunctions(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;JunctionInfoConstPtr&amp;gt;* junctions&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetSignals(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;SignalInfoConstPtr&amp;gt;* signals&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetCrosswalks(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;CrosswalkInfoConstPtr&amp;gt;* crosswalks&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetStopSigns(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;StopSignInfoConstPtr&amp;gt;* stop_signs&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetYieldSigns(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;YieldSignInfoConstPtr&amp;gt;* yield_signs&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetClearAreas(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;ClearAreaInfoConstPtr&amp;gt;* clear_areas&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetSpeedBumps(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;SpeedBumpInfoConstPtr&amp;gt;* speed_bumps&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetRoads(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;RoadInfoConstPtr&amp;gt;* roads&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetParkingSpaces(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;ParkingSpaceInfoConstPtr&amp;gt;* parking_spaces&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetPNCJunctions(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;PNCJunctionInfoConstPtr&amp;gt;* pnc_junctions&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetAreas(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;AreaInfoConstPtr&amp;gt;* areas&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;- GetBarrierGates(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; point, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;double distance,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;BarrierGateInfoConstPtr&amp;gt;* barrier_gates&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;) const：int&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; template &amp;lt;class KDTree&amp;gt;&lt;/div&gt;&lt;div&gt;- static SearchObjects(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d&amp;amp; center,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径圆心&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double radius,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const KDTree&amp;amp; kdtree,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，在这个kdtree结构中进行搜索&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::string&amp;gt;* const results)：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，搜索到的元素的id，注意对于用曲线描述的地图元素，kdtree中存储的是曲线段的AABox，这里返回的是整个地图元素的id而不是&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ObjectWithAABOX&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的id，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;比如对于&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;LaneSegmentKDTree，返回的是Lane的id而非LaneSegmentBox的id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//返回，0表示成功，其他表示失败&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在KDTree中搜索对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.加锁，因为高精地图会在多个线程中调用&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用输入kdtree中的元素获取函数GetObjects获取对应的ObjectWithAABox对象&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;将这些AABox对象所在地图元素的id填到输出results中，对于上面对输出的描述中对曲线地图元素的处理，通过unordered_set实现去重处理&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-99" vertex="1">
          <mxGeometry y="1298" width="1300" height="2352" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-106" value="HDMapUtil&lt;div&gt;高精地图工具类，&lt;span style=&quot;background-color: transparent;&quot;&gt;通常以静态方法为主，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;负责管理 HDMap 的全局单例、初始化、获取当前地图实例等。暴露给外部使用&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=63;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-21630" y="-1836.5" width="890" height="520" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-107" value="&lt;div&gt;+&amp;nbsp;static base_map_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;HDMap&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储基础地图，是apollo内部所有模块算法逻辑通用的高精地图，提供最完整的地图元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ static base_map_seq：uint64_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;记录相对地图消息的序列号&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;基础地图互斥锁，Apollo 运行时，可能有多个线程同时访问修改base_map_，在基础地图读取函数中使用，防止多线程同时访问修改地图&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;对于访问修改base_map_的函数中在修改操作前调用std库提供的锁管理类std::lock_guard，&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对base_map_mutex_加锁 std::lock_guard&amp;lt;std::mutex&amp;gt; lock(base_map_mutex_); ，只有在当前作用域完成后&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;lock_guard才会解锁&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;base_map_mutex_&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;比如线程A、B同时都要修改base_map_，此时线程A先对base_map_mutex_上锁，先修改基础地图，此时线程B运行到上锁代码，由于线程A已经对base_map_mutex_上锁，线程B在这行代码处“阻塞等待”，等到线程A修改完地图后&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;lock_guard离开作用域自动解锁&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;base_map_mutex_后，线程B才能继续执行这行代码及其后面修改地图的部分，这样就实现了同一时刻只有一个线程修改地图&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;+&amp;nbsp;static&amp;nbsp; base_map_mutex_：std::mutex&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;存储仿真地图，可视化工具显示用的地图是基础地图的简化版，不参与其他模块(比如planning)的算法逻辑，只用于可视化显示&lt;/div&gt;&lt;div&gt;+&amp;nbsp;static sim_map_：&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;std::unique_ptr&amp;lt;HDMap&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;static&amp;nbsp; sim_map_mutex_：std::mutex&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;仿真地图互斥锁&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-106" vertex="1">
          <mxGeometry y="63" width="890" height="267" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-108" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-106" vertex="1">
          <mxGeometry y="330" width="890" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-109" value="+&amp;nbsp;static BaseMapPtr()：const HDMap*&lt;div&gt;基础地图获取函数，高精地图&lt;/div&gt;&lt;div&gt;base_map_指针非空时，由地图文件生成一次apollo内部的地图格式(调用函数CreateMap)，之后每帧运行时不再二次生成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;static BaseMapPtr(const relative_map::MapMsg&amp;amp; map_msg)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const HDMap*&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;基础地图获取函数，相对地图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;在导航规划NaviPlanning中地图信息不再以提前录制好的地图文件形式获取，而是以message的形式接收，此时的地图内容只是实时更新的自车周围的局部地图，称为相对地图 relative_map&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-106" vertex="1">
          <mxGeometry y="338" width="890" height="182" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-114" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;高精地图相关的通用类&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;hdmap_common.h&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=410;strokeWidth=4;height=94;" parent="1" vertex="1">
          <mxGeometry x="-17220" y="-3808" width="6570" height="5384" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-115" value="Area proto&lt;div&gt;区域，支持用户将整张地图划分成若干自定义区域&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-11730" y="-5804" width="620" height="290" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-116" value="&lt;div&gt;enum Type {&lt;/div&gt;&lt;div&gt;&amp;nbsp; Driveable = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//可行驶区域&lt;/div&gt;&lt;div&gt;&amp;nbsp; UnDriveable = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//不可行驶区域&lt;/div&gt;&lt;div&gt;&amp;nbsp; Custom1 = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//以下是用户自定义类型&lt;/div&gt;&lt;div&gt;&amp;nbsp; Custom2 = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; Custom3 = 5;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional Type type = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//区域类型&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;required Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//区域全局唯一id，required关键字表示该字段必须赋值，不能使用默认值&lt;/div&gt;&lt;div&gt;required Polygon polygon = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//区域几何形状&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与其他元素重叠关系的id&lt;/div&gt;&lt;div&gt;optional string name = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//区域名称&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-115" vertex="1">
          <mxGeometry y="52" width="620" height="238" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-117" value="BarrierGate proto&lt;div&gt;隔离设施&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=42;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-10990" y="-5810" width="420" height="260" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-118" value="&lt;div&gt;enum BarrierGateType {&lt;/div&gt;&lt;div&gt;&amp;nbsp; ROD = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道闸杆，横杆式栏杆&lt;/div&gt;&lt;div&gt;&amp;nbsp; FENCE = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//栅栏，围栏式&lt;/div&gt;&lt;div&gt;&amp;nbsp; ADVERTISING = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//广告栏&lt;/div&gt;&lt;div&gt;&amp;nbsp; TELESCOPIC = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//电动伸缩门&lt;/div&gt;&lt;div&gt;&amp;nbsp; OTHER = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;optional BarrierGateType type = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//隔离设施类型&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;required Id id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全局id&lt;/div&gt;&lt;div&gt;optional Polygon polygon = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//几何形状&lt;/div&gt;&lt;div&gt;repeated Curve stop_line = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//停止线，可能关联多条停止线&lt;/div&gt;&lt;div&gt;repeated Id overlap_id = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//重叠关系id&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-117" vertex="1">
          <mxGeometry y="42" width="420" height="218" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-119" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-115" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-14280" y="-6198" as="sourcePoint" />
            <mxPoint x="-9830" y="-5898" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-120" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="5cXoNBp30RIJxR7JaeBA-13" target="LWFpOxd7QR8SVaHnObAa-117" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-15040" y="-6318" as="sourcePoint" />
            <mxPoint x="-10590" y="-6018" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-121" value="各种类型别名" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-16960" y="-3473.5" width="710" height="960" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-122" value="&lt;div&gt;//KDTree相关类型别名&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//注意对于曲线描述的地图元素，**SegmentBox中关联的是整个地图元素而使用AABox框起来的是曲线段&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using LaneSegmentBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ObjectWithAABox&amp;lt;LaneInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using LaneSegmentKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= apollo::common::math::AABoxKDTree2d&amp;lt;LaneSegmentBox&amp;gt;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;using JunctionPolygonBox&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;JunctionInfo, apollo::common::math::Polygon2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using JunctionPolygonKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;JunctionPolygonBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;using AreaPolygonBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;AreaInfo, apollo::common::math::Polygon2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;using AreaPolygonKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= apollo::common::math::AABoxKDTree2d&amp;lt;AreaPolygonBox&amp;gt;;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;using SignalSegmentBox&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;SignalInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using SignalSegmentKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;SignalSegmentBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;using BarrierGateSegmentBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;BarrierGateInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using BarrierGateSegmentKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;BarrierGateSegmentBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;using CrosswalkPolygonBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;CrosswalkInfo, apollo::common::math::Polygon2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using CrosswalkPolygonKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;CrosswalkPolygonBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;using StopSignSegmentBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;StopSignInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using StopSignSegmentKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;StopSignSegmentBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;using YieldSignSegmentBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;YieldSignInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using YieldSignSegmentKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;YieldSignSegmentBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;using ClearAreaPolygonBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;ClearAreaInfo, apollo::common::math::Polygon2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using ClearAreaPolygonKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;ClearAreaPolygonBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;using SpeedBumpSegmentBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;SpeedBumpInfo, apollo::common::math::LineSegment2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using SpeedBumpSegmentKDTree&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;SpeedBumpSegmentBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;using PNCJunctionPolygonBox &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;ObjectWithAABox&amp;lt;PNCJunctionInfo, apollo::common::math::Polygon2d&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;using PNCJunctionPolygonKDTree &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;apollo::common::math::AABoxKDTree2d&amp;lt;PNCJunctionPolygonBox&amp;gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//地图元素相关类型别名&lt;/div&gt;&lt;div&gt;using OverlapInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const OverlapInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using LaneInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const LaneInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using JunctionInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const JunctionInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using SignalInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const SignalInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using CrosswalkInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const CrosswalkInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using StopSignInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const StopSignInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using YieldSignInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const YieldSignInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using ClearAreaInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const ClearAreaInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using SpeedBumpInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const SpeedBumpInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using RoadInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const RoadInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using ParkingSpaceInfoConstPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const ParkingSpaceInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;&lt;div&gt;using PNCJunctionInfoConstPtr&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const PNCJunctionInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using RSUInfoConstPtr&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const RSUInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using AreaInfoConstPtr&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const AreaInfo&amp;gt;;&lt;/div&gt;&lt;div&gt;using BarrierGateInfoConstPtr&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;const BarrierGateInfo&amp;gt;;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;using RoadROIBoundaryPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;RoadROIBoundary&amp;gt;;&lt;/div&gt;&lt;div&gt;using JunctionBoundaryPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;JunctionBoundary&amp;gt;;&lt;/div&gt;&lt;div&gt;using PolygonRoiPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;PolygonRoi&amp;gt;;&lt;/div&gt;&lt;div&gt;using RoadRoiPtr &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;= std::shared_ptr&amp;lt;RoadRoi&amp;gt;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-121" vertex="1">
          <mxGeometry y="26" width="710" height="934" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-123" value="template &amp;lt;class Object, class GeoObject&amp;gt;&lt;div&gt;ObjectWithAABOX&lt;/div&gt;&lt;div&gt;这是一个为地图空间索引和高效检索设计的通用模板类，把地图对象(Object)和描述其几何形状的几何体(GeoObject)绑定在一起，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;添加AABox属性将几何体包围&lt;/span&gt;，常用于KDTree等空间数据结构中。&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=68;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-15990" y="-3473.5" width="860" height="590" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-124" value="&lt;div&gt;不是地图元素Object的全局id，而是这个模板类对象的id，通常按以下规则生成：&lt;/div&gt;&lt;div&gt;几何形状是线段的segment，通常描述lane、road等，沿s增大方向分段排列，以原始地图类型中的中心线属性的分段来，以每段的序号作为id，从0开始&lt;/div&gt;&lt;div&gt;几何形状是多边形的polygon，不设计id概念，赋默认值0&lt;/div&gt;&lt;div&gt;- id_：&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- object_：&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;const Object *&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;具体地图元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- geo_object_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const GeoObject *&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;描述地图元素的几何形状&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;包围几何体的最小轴对齐包围盒，设计这个属性用于&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;空间索引和快速空间查询（如碰撞检测、范围查找等）&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- aabox_：&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;apollo::common::math::AABox2d&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-123" vertex="1">
          <mxGeometry y="68" width="860" height="182" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-125" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-123" vertex="1">
          <mxGeometry y="250" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-126" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ObjectWithAABox(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::AABox2d &amp;amp;aabox,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，包围该地图元素几何形状的轴对齐包围盒&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Object *object,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图元素类型&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const GeoObject *geo_object,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，该地图元素几何形状&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const int id)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前实例化对象的id，id的赋值在成员id_处有详细说明&lt;/div&gt;&lt;div&gt;构造函数，列表初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ DistanceSquareTo(const apollo::common::math::Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，指定点坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;指定点到描述地图元素的几何形状的距离的平方&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;计算指定点到描述地图元素的几何形状的距离的平方&lt;/div&gt;&lt;div&gt;·.调用成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;geo_object_中的到指定点距离的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;DistanceSquareTo实现&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-123" vertex="1">
          <mxGeometry y="258" width="860" height="332" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-127" value="AABox2d&lt;div&gt;表示一个在二维平面上与坐标轴对齐的矩形区域（包围盒）&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4962" y="8380" width="560" height="380" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-128" value="&lt;div&gt;- center_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;中心&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- length_ = 0.0：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- width_ = 0.0：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;宽&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- half_length_ = 0.0：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;半长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- half_width_ = 0.0：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;半宽&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-127" vertex="1">
          <mxGeometry y="50" width="560" height="100" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-129" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-127" vertex="1">
          <mxGeometry y="150" width="560" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-130" value="+&amp;nbsp;AABox2d() = default;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;AABox2d(const Vec2d &amp;amp;center, const double length, const double width);&lt;/div&gt;&lt;div&gt;给定包围盒的中心和长宽，构造包围盒&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;AABox2d(const Vec2d &amp;amp;one_corner, const Vec2d &amp;amp;opposite_corner);&lt;/div&gt;&lt;div&gt;给定包围盒对角线的两个端点，构造包围盒&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;输出二维平面上轴对齐包围盒的边界&lt;/div&gt;&lt;div&gt;+ min_x() const：double&lt;/div&gt;&lt;div&gt;+ max_x() const：double&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ min_y() const：double&lt;/div&gt;&lt;div&gt;+ max_y() const：double&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-127" vertex="1">
          <mxGeometry y="158" width="560" height="222" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-131" value="LaneInfo&lt;div&gt;车道的封装类，除了包含车道元素的原始地图数据。还提供了丰富的算法操作，是底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=58;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-17030" y="-2270" width="1120" height="1740" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-132" value="- lane_：const Lane &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车道元素地图原始数据&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//lane_中的原始属性，以下成员在Init函数中初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- points_：std::vector&amp;lt;apollo::common::math::Vec2d&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储车道中心线采样点，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;已经去除了冗余点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，s增长方向存储&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- segments_：std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储中心线相邻采样点构成的线段，存储大小是points_.size()-1&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;车道也会分段，每段是由相邻车道中心线采样点构成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- unit_directions_：std::vector&amp;lt;apollo::common::math::Vec2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储每段线段的单位向量&lt;/div&gt;&lt;div&gt;- accumulated_s_：std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储整条中心线线的s累加和，即每个采样点的s坐标，存储大小同points_&lt;/div&gt;&lt;div&gt;- headings_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储每段单位向量的朝向角，与x轴夹角，rad&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- total_length_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;中心线总长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- overlap_ids_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::vector&amp;lt;std::string&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储与该车道关联的压盖关系的id，s增长方向&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;- sampled_left_width_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SampledWidth&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储每个中心线采样点处的左半车道宽，s增长方向&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;- sampled_right_width_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SampledWidth&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储每个中心线采样点处的右半车道宽，s增长方向&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- sampled_left_road_width_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SampledWidth&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储每个中心线采样点处的左半道路宽，s增长方向&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- sampled_right_road_width_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;SampledWidth&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储每个中心线采样点处的右半道路宽，s增长方向&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//以下成员在UpdateOverlaps中更新，储存与当前车道相关的压盖关系和与当前车道形成压盖的其他地图元素&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- overlaps_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- cross_lanes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;与当前车道重叠的其他车道&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- signals_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- barrier_gates_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- yield_signs_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- stop_signs_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- crosswalks_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- junctions_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- clear_areas_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- speed_bumps_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- parking_spaces_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- pnc_junctions_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;&amp;nbsp;-areas_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;OverlapInfoConstPtr&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//KDTree数据结构相关属性&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- segment_box_list_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;LaneSegmentBox&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将成员segments_中的每个元素构建AABox后存入&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;- lane_segment_kdtree_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;LaneSegmentKDTree&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将上述segments_的AABox用KDTree表示，这是构造好的车道KDTree&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//以下成员在HDMapImpl::LoadMapFromProto中完成赋值，&lt;/div&gt;&lt;div&gt;//原始地图中的车道数据不包括车道所在道路的id，只有在地图中所有道路元素的RoadInfo类构造完成后才能查找到当前车道的归属&lt;/div&gt;&lt;div&gt;- road_id_：Id&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前车道所在道路的id&lt;/div&gt;&lt;div&gt;- section_id_：Id&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前车道所在道路段的id&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-131" vertex="1">
          <mxGeometry y="58" width="1120" height="902" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-133" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-131" vertex="1">
          <mxGeometry y="960" width="1120" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-146" value="- friend class&amp;nbsp;HDMapImpl;&lt;div&gt;- friend class RoadInfo;&lt;/div&gt;&lt;div&gt;友元类可以访问当前类的所有成员，包括 private 和 protected 成员。这两个类需要直接操作LaneInfo的内部成员，因此设计成友元&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ using SampledWidth = std::pair&amp;lt;double, double&amp;gt;;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//每个采样点处的半宽，&amp;lt;s, half_width&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-131" vertex="1">
          <mxGeometry y="968" width="1120" height="88" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-145" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-131" vertex="1">
          <mxGeometry y="1056" width="1120" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-134" value="+&amp;nbsp;explicit LaneInfo(const Lane &amp;amp;lane);&lt;div&gt;构造函数，加载车道原始数据初始化lane_，调用Init函数完成剩余成员的初始化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;explicit关键字要求用户只能通过调用构造函数的方式完成构造，禁止通过“=”进行隐式构造&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetProjection(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const apollo::common::math::Vec2d &amp;amp;point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定一点的坐标，世界坐标系下的xy坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double *accumulate_s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，该点相对于车道中心线的s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double *lateral) const：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;该点相对于车道中心线的l&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;在世界坐标系中给定一点坐标，计算该点相对于车道中心线的sl坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.在车道中心线线段序列segments_中找到距离给定点距离最近的线段，遍历segments_中的各个线段根据LineSegment2d中的DistanceSquareTo函数计算点到线段的距离&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在最近线段上计算线段起点到给定点向量在线段上的投影长度，通过&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LineSegment2d中的ProjectOntoUnit函数实现，加上在accumulate_s_中查找到该线段起点前的累和，得到给定点在车道中心线上的s坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;最近线段上计算线段起点到给定点向量在线段上的垂线长度，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LineSegment2d中的ProductOntoUnit函数实现，得到给定点在车道中心线上的l坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;- Init()：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;内部初始化函数，负责初始化除lane_以外的其他成员，这些成员都来自于原始地图数据&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用CreateKDTree函数，将整条车道中的每一段用KDTree整合起来，加速查找等算法&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- CreateKDTree()：void&lt;/div&gt;&lt;div&gt;生成kdtree&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;先将成员segments_中的每条中心线线段构造成AABox，存入成员segment_box_list_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;然后将这些AABox对象集合构造成KDTree存入lane_segment_kdtree_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- PostProcess(const HDMapImpl &amp;amp;map_instance)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;后处理函数，调用地图地层实现类对象，利用其中提供的方法函数完成车道元素的后处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;后处理主要包括更新压盖关系，调用函数UpdateOverlaps完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;UpdateOverlaps(const HDMapImpl &amp;amp;map_instance)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;更新与当前车道相关的压盖关系，调用地图地层实现类对象，利用其中提供的方法函数完成对压盖关系的更新&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;存储与当前车道相关的压盖关系和与当前车道重叠的其他地图元素&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-131" vertex="1">
          <mxGeometry y="1064" width="1120" height="676" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-136" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;apollo内部的高精地图格式，存储高精地图原始数据，不提供算法操作&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="-18360" y="-8158" width="7980" height="3820" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-156" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-95" target="LWFpOxd7QR8SVaHnObAa-99" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-19740" y="-2050.5" as="sourcePoint" />
            <mxPoint x="-19580" y="-2050.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-162" value="AABoxKDTreeParams&lt;div&gt;AABox KDTree参数&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4100" y="12170" width="670" height="290" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-163" value="&lt;div&gt;二叉树允许搜索的最大深度&lt;/div&gt;+ max_depth = -1：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;默认值为负，会一直分裂子结点&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;叶子节点代表的AABox对象集合中元素的个数，若二叉树节点中AABox个数小于该数值，停止切分&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;叶子节点指的是二叉树中子结点都为空的位于最深层的节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ max_leaf_size = -1：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;默认值为负，会一直分裂子结点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;叶子节点对应的最小AABox的大小&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;二叉树节点代表的AABox对象集合也可以由一个最小AABox包围，这个最小AABox的大小描述为AABox长宽中的最大值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若二叉树节点对应的最小AABox的大小小于该数值，停止切分&lt;/div&gt;&lt;div&gt;+ max_leaf_dimension = -1.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;默认值为负，会一直分裂子结点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-162" vertex="1">
          <mxGeometry y="50" width="670" height="240" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-164" value="&lt;div&gt;template &amp;lt;class ObjectType&amp;gt;&lt;/div&gt;AABoxKDTree2dNode&lt;div&gt;AABox KDTree节点，也可以表示当前节点对应的子树，该节点是抽象出来的二叉树节点，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;一个节点代表一个AABox对象的集合，AABox对象的类型就是模板参数Objectype&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;叶子节点是指KDTree中没有子节点的那些节点，即整棵树的最末端，负责存储实际的对象数据；其余节点为普通节点，负责存储分割信息(方向、位置)，和那些无法被分割线完美切分成左右两部分的对象，主要用于搜索时的导航&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=80;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5060" y="11740" width="1290" height="2220" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-165" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- depth_ = 0：int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前节点所在的深度&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//在&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ComputeBoundary函数中完成初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//该二叉树节点对应的AABox对象集合也可以由一个最小AABox包围，以下成员就是描述这个最小AABox的边界&lt;/div&gt;&lt;div&gt;-&amp;nbsp;min_x_ = 0.0：double&lt;/div&gt;&lt;div&gt;-&amp;nbsp;max_x_ = 0.0：double&lt;/div&gt;&lt;div&gt;-&amp;nbsp;min_y_ = 0.0：double&lt;/div&gt;&lt;div&gt;-&amp;nbsp;max_y_ = 0.0：double&lt;/div&gt;&lt;div&gt;//包围AABox对象集合的最小AABox的中心&lt;/div&gt;&lt;div&gt;-&amp;nbsp;mid_x_ = 0.0：double&lt;/div&gt;&lt;div&gt;-&amp;nbsp;mid_y_ = 0.0：double&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//在ComputePartition函数完成初始化&lt;/div&gt;&lt;div&gt;//下一步分割的切分方向和位置&lt;/div&gt;&lt;div&gt;&lt;div&gt;- enum Partition {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PARTITION_X = 1,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//沿x轴法线切分&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PARTITION_Y = 2,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//沿y轴法线切分&lt;/div&gt;&lt;div&gt;&amp;nbsp; };&lt;/div&gt;&lt;div&gt;- partition_ = PARTITION_X：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Partition&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//方向&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- partition_position_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//位置&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//在函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitObjects中进行更新&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;//对叶子节点中存储的对象和普通节点存储的横跨左右两边的对象进行排序&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- num_objects_ = 0：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;当前节点存储的AABox对象的个数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- objects_sorted_by_min_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ObjectPtr&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;比如对于按x轴法线切分，按每个AABox元素的最小边界min_x升序排列；&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对于按y轴法线切分s时同理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- objects_sorted_by_max_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;ObjectPtr&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;比如对于按y轴法线切分，按每个AABox元素的最大边界max_y降序排列&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;；&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对于按y轴法线切分s时同理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- objects_sorted_by_min_bound_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;记录按最小边界升序排列时每个&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AABox元素&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;最小边界的数值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- objects_sorted_by_max_bound_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;记录按最大边界降序排列时&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;每个&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AABox元素&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;最大边界的数值&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- left_subnode_ = nullptr：std::unique_ptr&amp;lt;AABoxKDTree2dNode&amp;lt;ObjectType&amp;gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- right_subnode_ = nullptr：std::unique_ptr&amp;lt;AABoxKDTree2dNode&amp;lt;ObjectType&amp;gt;&amp;gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-164" vertex="1">
          <mxGeometry y="80" width="1290" height="550" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-166" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-164" vertex="1">
          <mxGeometry y="630" width="1290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-167" value="+&amp;nbsp;using ObjectPtr = const ObjectType *;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-164" vertex="1">
          <mxGeometry y="638" width="1290" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-168" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-164" vertex="1">
          <mxGeometry y="664" width="1290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-169" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;AABoxKDTree2dNode(const std::vector&amp;lt;ObjectPtr&amp;gt; &amp;amp;objects,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前节点对应的AABox对象集合&lt;/span&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const AABoxKDTreeParams &amp;amp;params,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//KDTree参数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;int depth)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点所在的深度(层数or位置)&lt;/div&gt;&lt;div&gt;节点构造函数，构造以当前节点为root的完整子树结构，递归函数&lt;/div&gt;&lt;div&gt;·.计算包围输入objects的最小AABox的边界及中点，调用函数ComputeBoundary&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;判断切分方向及位置，调用函数ComputePartition&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;判断是否能进一步切分，调用函数SplitToSubNodes进行判断&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果能切，调用函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PartitionObjects完成对输入objects切分。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;AABox整体位于切分位置partition_position_左边的存储在左子节点，位于切分位置右边的存储在右子节点，并对左右子节点递归构造；对于那些AABox横跨切分位置的对象存储在当前节点中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果不能切，说明当前节点是叶子节点，调用函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitObjects完成对叶子节点中的AABox元素的排序工作&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetObjects(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const Vec2d &amp;amp;point,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，搜索圆心&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;const double distance) const：std::vector&amp;lt;ObjectPtr&amp;gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//返回，所有在搜索半径范围内的AABox对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;AABox对象搜索接口函数&lt;/div&gt;&lt;/div&gt;&lt;div&gt;·.调用内部实现成员函数GetObjectsInternal完成搜索任务&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- ComputeBoundary(const std::vector&amp;lt;ObjectPtr&amp;gt; &amp;amp;objects)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，当前节点对应的AABox对象集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;计算包围该AABox对象集合的最小AABox的边界及中点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;ComputePartition()：void&lt;/div&gt;&lt;div&gt;判断分割线是x轴法线还是y轴法线，并从中间进行分割&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;沿与长边垂直的方向切。&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;比如，知道&lt;/span&gt;包围AABox对象集合的最小AABox&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，如果在x轴上的投影比在y轴投影长，沿x轴法线切，位置在mid_x_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;SplitToSubNodes(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;ObjectPtr&amp;gt; &amp;amp;objects,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，当前节点对应的AABox对象集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const AABoxKDTreeParams &amp;amp;params)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，KDTree参数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，false不满足条件停止切分&lt;br&gt;&lt;/div&gt;&lt;div&gt;判断当前节点是否还能进一步切分，用作递归退出条件&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;满足以下三个条件之一退出递归，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;都不满足时继续递归&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点的深度超过预设&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点对应的AABox个数少于叶子节点对应的，表示以到达最小颗粒度&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点对应的最小AABox的大小小于叶子节点对应的，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表示以到达最小颗粒度&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;PartitionObjects(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;ObjectPtr&amp;gt; &amp;amp;objects,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，当前节点对应的AABox对象集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;ObjectPtr&amp;gt; *const left_subnode_objects,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，左子节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对应的AABox对象集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;ObjectPtr&amp;gt; *const right_subnode_objects)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;//输出，右子节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对应的AABox对象集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;节点切分函数&lt;/div&gt;&lt;div&gt;·.将当前节点对应的AABox对象集合按计算好的切分方向和位置分成左右两部分&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;左右的定义都是在数轴上，AABox的投影在切分位置的左边为左。比如沿y轴法线切分，max_y比切分位置小的属于左节点，min_y比切分位置大的属于右节点&lt;/div&gt;&lt;div&gt;·.对于那些AABox横跨切分位置&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;partition_position_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的对象，存储在当前节点内，使用InitObjects函数完成对这些AABox的排序存储&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;InitObjects(const std::vector&amp;lt;ObjectPtr&amp;gt; &amp;amp;objects)：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储对象初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对于叶子节点对应的集合，将集合中的AABox元素按不同的排序方式进行排序&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- GetObjectsInternal(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec2d &amp;amp;point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索圆心&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double distance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double distance_sqr,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径平方&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;ObjectPtr&amp;gt; *const result_objects) cons：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在搜索半径范围内的所有AABox对象&lt;/div&gt;&lt;/div&gt;&lt;div&gt;AABox对象搜索内部实现函数，递归函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.递归终止条件&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LowerDistanceSquareToPoint函数判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;搜索圆与包围当前子树的最小AABox不发生相交时，终止递归&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用Upper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;DistanceSquareToPoint函数判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;搜索圆能够完全包含包围当前子树的最小AABox时&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，调用函数GetAllObjects获取当前节点下的全部AABox对象输出，终止递归&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对当前节点的处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;判断当前节点包含的AABox是否与搜索圆有交集，判断方法如下：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果搜索圆心在切分位置的左边，在objects_sorted_by_min_bound_中遍历这些AABox对象的左边界，只要不大于搜索圆的右边界，通过&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ObjectWithAABOX类&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对象中的实际几何形状到点的距离计算函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;DistanceSquareTo精确判断该地图元素的实际几何形状如果与搜索圆相交，存入输出；若AABox对象的左边界大于搜索圆的右边界，那后面的AABox对象都不会与搜索圆相交，中断循环。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果搜索圆心在切分位置的右边，在objects_sorted_by_max_bound_中遍历这些AABox对象的右边界，只要不小于搜索圆的左边界，同理精确判断地图元素的几何形状如果与搜索圆相交，存入输出；若AABox的右边界小于搜索圆的左边界，那后面的AABox对象都不会与搜索圆相交，中断循环&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;开始递归&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果当前节点不是叶子节点，说明左右子节点都存在，递归调用函数将左右子节点中与搜索圆相交的AABox对象存储输出&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;至此可以保证搜索的完备&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- LowerDistanceSquareToPoint(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索圆心坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，搜索圆与包围当前子树的最小AABox不发生相交时的最大半径(上确界)的平方值&lt;br&gt;&lt;/div&gt;&lt;div&gt;计算搜索圆与包围当前子树的最小AABox不发生相交时的最大半径的平方值&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从最小包围AABox外的搜索圆心开始往外膨胀搜索圆，搜索圆与最小包围AABox恰好相交时半径即为不发生相交的最大半径，如果圆心在最小包围AABox里面，最大半径显然为0，返回平方值&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- UpperDistanceSquareToPoint(const Vec2d &amp;amp;point) const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，搜索圆心坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//返回，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;搜索圆能够完全包含包围当前子树的最小AABox时的最小半径(下确界)的平方值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;计算搜索圆能够完全包含包围当前子树的最小AABox时的最小半径的平方值&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;计算圆心点到最小包围AABox的四个角点之间距离的最大值即可，返回平方值&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- GetAllObjects(std::vector&amp;lt;ObjectPtr&amp;gt; *const result_objects) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，当前子树对应的所有AABox对象序列，排序顺序不固定&lt;/div&gt;&lt;div&gt;全部AAbox对象获取函数&lt;/div&gt;&lt;div&gt;·.对左右节点left_subnode_和right_subnode_递归调用当前函数，直到到达当前子树下的叶节点为止，返回当前子树对应的所有AABox对象的序列&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-164" vertex="1">
          <mxGeometry y="672" width="1290" height="1548" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-170" value="&lt;div&gt;template &amp;lt;class ObjectType&amp;gt;&lt;/div&gt;&lt;div&gt;AABoxKDTree2d&lt;/div&gt;&lt;div&gt;对二维平面上的AABox对象集合，用KDTree这种数据结构进行表示，用于加速查找等计算，模板参数ObjectType表示AABox对象的类型&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=90;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="6490" y="11929" width="790" height="690" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-171" value="&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这里的根节点代表了需要用KDTree数据结构组织的AABox对象这个整个的集合&lt;/span&gt;&lt;/div&gt;- root_ = nullptr：std::unique_ptr&amp;lt;AABoxKDTree2dNode&amp;lt;ObjectType&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;KDTree根节点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-170" vertex="1">
          <mxGeometry y="90" width="790" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-172" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-170" vertex="1">
          <mxGeometry y="150" width="790" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-173" value="+&amp;nbsp;using ObjectPtr = const ObjectType *;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-170" vertex="1">
          <mxGeometry y="158" width="790" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-174" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-170" vertex="1">
          <mxGeometry y="184" width="790" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-175" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;AABoxKDTree2d(const std::vector&amp;lt;ObjectType&amp;gt; &amp;amp;objects,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，等待用KDTree表示的AABox对象集合&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const AABoxKDTreeParams &amp;amp;params)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，KDTree参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;以root_为起点调用KDTree节点构造函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AABoxKDTree2dNode完成对整个KDTree的构造&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;GetObjects(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Vec2d &amp;amp;point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索圆心&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double distance) const：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::vector&amp;lt;ObjectPtr&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索半径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，所有在搜索半径范围内的AABox对象&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AABox对象搜索函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.调用根节点root_的AABox对象搜索函数GetObjects完成&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-170" vertex="1">
          <mxGeometry y="192" width="790" height="498" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-176" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-164" target="LWFpOxd7QR8SVaHnObAa-162" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4826" y="12540" as="sourcePoint" />
            <mxPoint x="4986" y="12540" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-177" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-170" target="LWFpOxd7QR8SVaHnObAa-164" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="6080" y="11670" as="sourcePoint" />
            <mxPoint x="6240" y="11670" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-178" value="hdmap_util.h中的类外方法函数" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-21605" y="-2368" width="840" height="400" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-179" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FindFirstExist(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::string&amp;amp; dir,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，文件夹路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string&amp;amp; files)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，候选文件的名称，各文件名之间用“|”分割&lt;/span&gt;&lt;/div&gt;&lt;div&gt;从候选文件中找到第一个存在的文件，并返回其完整路径&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;RoutingMapFile()：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;返回routing_map的文件路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FindFirstExist查找第一个存在的文件并返回其完整路径，入参中的文件夹路径和候选文件名称都通过gflags定义&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;inline MakeMapId(const std::string&amp;amp; id)：apollo::hdmap::Id&lt;/div&gt;&lt;div&gt;将输入的string类型的id转化成proto定义的Id类型返回&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;CreateMap(const std::string&amp;amp; map_file_path)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unique_ptr&amp;lt;HDMap&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图文件路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，高精地图接口类&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;地图生成函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造高精地图接口类HDMap，根据地图文件路径调用HDMap中的加载函数LoadMapFromFile完成apollo内部地图数据的加载&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="LWFpOxd7QR8SVaHnObAa-178" vertex="1">
          <mxGeometry y="26" width="840" height="374" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-182" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-106" target="LWFpOxd7QR8SVaHnObAa-178" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-21580" y="-2358" as="sourcePoint" />
            <mxPoint x="-21170" y="-2468" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-183" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-178" target="LWFpOxd7QR8SVaHnObAa-95" edge="1">
          <mxGeometry x="0.3455" y="-130" width="160" relative="1" as="geometry">
            <mxPoint x="-20454" y="-2193.5" as="sourcePoint" />
            <mxPoint x="-20519" y="-2310.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-188" value="Dependence" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-99" target="LWFpOxd7QR8SVaHnObAa-114" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-18070" y="-1168" as="sourcePoint" />
            <mxPoint x="-17660" y="-1278" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-193" value="JunctionInfo&lt;div&gt;路口元素的封装类，除了包含路口元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-15850" y="-2264" width="930" height="640" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-194" value="- junction_：const Junction &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//原始地图数据中的路口数据&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下成员在Init函数内初始化&lt;br&gt;&lt;div&gt;- polygon_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;apollo::common::math::Polygon2d&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口的形状，用多边形表示&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- overlap_ids_：std::vector&amp;lt;std::string&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前路口相关联的压盖关系的id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//UpdateOverlaps函数中更新的成员，apollo地图只关注路口与停车标识的压盖关系&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- overlap_stop_sign_ids_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;Id&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-193" vertex="1">
          <mxGeometry y="64" width="930" height="176" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-195" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-193" vertex="1">
          <mxGeometry y="240" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-196" value="-&amp;nbsp;friend class HDMapImpl;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-193" vertex="1">
          <mxGeometry y="248" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-197" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-193" vertex="1">
          <mxGeometry y="274" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-198" value="+&amp;nbsp;explicit JunctionInfo(const Junction &amp;amp;junction)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的路口数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员junction_&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始路口数据junction_中描述路口形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;读取原始路口数据junction_中存储的压盖关系id，初始化成员overlap_ids_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- PostProcess(const HDMapImpl &amp;amp;map_instance)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;后处理函数，调用地图地层实现类对象，利用其中提供的方法函数完成路口元素的后处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;后处理主要包括更新压盖关系，调用函数UpdateOverlaps完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- UpdateOverlaps(const HDMapImpl &amp;amp;map_instance)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div&gt;更新与当前路口相关的压盖关系，调用地图地层实现类对象，利用其中提供的方法函数完成对压盖关系的更新&lt;/div&gt;&lt;div&gt;apollo地图只关注路口与停车标识的压盖关系，在原始路口数据中只识别另一个元素是stop sign的压盖关系，并把所有相关的stop sign存到成员overlap_stop_sign_ids_中&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-193" vertex="1">
          <mxGeometry y="282" width="930" height="358" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-199" value="AreaInfo&lt;div&gt;区域元素的封装类，除了包含区域元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-14810" y="-2264" width="860" height="640" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-200" value="&lt;div&gt;- ad_area_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const Area &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的区域数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- polygon_：apollo::common::math::Polygon2d&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//区域的形状，用多边形表&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- overlap&amp;nbsp;_ids_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;Id&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;//与当前区域相关联的压盖关系的id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//UpdateOverlaps函数中更新的成员，apollo地图只关注当前区域与非行驶区域的压盖关系&lt;/div&gt;&lt;div&gt;- overlap_undriveable_areas_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;const AreaInfo&amp;gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-199" vertex="1">
          <mxGeometry y="52" width="860" height="188" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-201" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-199" vertex="1">
          <mxGeometry y="240" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-202" value="-&amp;nbsp;friend class HDMapImpl;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-199" vertex="1">
          <mxGeometry y="248" width="860" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-203" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-199" vertex="1">
          <mxGeometry y="274" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-204" value="+&amp;nbsp;explicit AreaInfo(const Area &amp;amp;ad_area);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的区域数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员area_&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始路口数据area_中描述区域形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;读取原始区域数据area_中存储的压盖关系id，初始化成员overlap_ids_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- PostProcess(const HDMapImpl &amp;amp;map_instance)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;后处理函数，调用地图地层实现类对象，利用其中提供的方法函数完成区域元素的后处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;后处理主要包括更新压盖关系，调用函数UpdateOverlaps完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- UpdateOverlaps(const HDMapImpl &amp;amp;map_instance)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;div&gt;更新与当前区域相关的压盖关系，调用地图地层实现类对象，利用其中提供的方法函数完成对压盖关系的更新&lt;/div&gt;&lt;div&gt;apollo地图只关注当前区域与非行驶区域的压盖关系，在原始区域数据中只识别另一个元素是undriveable的压盖关系，并把所有相关的undriveable存到成员overlap_undriveable_areas_中&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-199" vertex="1">
          <mxGeometry y="282" width="860" height="358" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-205" value="&lt;div&gt;BarrierGateInfo&lt;/div&gt;&lt;div&gt;隔离设施元素的封装类，除了包含隔离设施元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13860" y="-2264" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-206" value="&lt;div&gt;- barrier_gate_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;BarrierGate&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的隔离设施数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- segments_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用来描述与当前隔离设施相关联的停止线，用线段的形式存储起来&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-205" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-209" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-205" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-210" value="+&amp;nbsp;explicit BarrierGateInfo(const BarrierGate &amp;amp;barrier_gate);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的隔离设施数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;barrier_gate_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始隔离设施数据中关联的所有stop lines中描述其形状的curv转换成若干线段的形式进行存储，存储在成员segments_中&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-205" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-211" value="&lt;div&gt;SignalInfo&lt;/div&gt;&lt;div&gt;红绿灯总成元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;红绿灯总成&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-12890" y="-2264" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-212" value="&lt;div&gt;- signal_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Signal&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的红绿灯总成数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- segments_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用来描述与当前&lt;/span&gt;红绿灯总成对应&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的停止线，用线段的形式存储起来&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-211" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-215" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-211" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-216" value="+&amp;nbsp;explicit BarrierGateInfo(const BarrierGate &amp;amp;barrier_gate);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的红绿灯总成数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;signal_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始红绿灯总成数据中关联的所有stop lines中描述其形状的curv转换成若干线段的形式进行存储，存储在成员segments_中&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-211" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-217" value="&lt;div&gt;CrosswalkInfo&lt;/div&gt;&lt;div&gt;人行道元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;人行道&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11890" y="-2264" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-218" value="&lt;div&gt;- crosswalk_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const Crosswalk&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;人行道&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- polygon_：apollo::common::math::Polygon2d&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//用来描述与当前&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;人行道多边形形状&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-217" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-221" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-217" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-222" value="+&amp;nbsp;explicit CrosswalkInfo(const Crosswalk &amp;amp;crosswalk);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的人行道数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;crosswalk_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始路口数据crosswalk_中描述人行道形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-217" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-223" value="StopSignInfo&lt;div&gt;停车让行元素的封装类，除了包含路口元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-15855" y="-1284" width="930" height="640" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-224" value="- stop_sign_：const StopSign &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//原始地图数据中的停车让行标识数据&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下成员在Init函数内初始化&lt;br&gt;&lt;div&gt;- segments_：std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;停车让行标识关联的停止线形状，用线段序列的方式进行存储&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- overlap_ids_：std::vector&amp;lt;std::string&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//与当前停车让行标识相关联的压盖关系的id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//UpdateOverlaps函数中更新的成员，apollo地图只关注停车标识与车道和路口的压盖关系&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;overlap_lane_ids：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;Id&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前停车让行标识压盖的车道id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- overlap_junction_ids_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::vector&amp;lt;Id&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//与当前停车让行标识压盖的路口id&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-223" vertex="1">
          <mxGeometry y="64" width="930" height="176" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-225" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-223" vertex="1">
          <mxGeometry y="240" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-226" value="-&amp;nbsp;friend class HDMapImpl;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-223" vertex="1">
          <mxGeometry y="248" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-227" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-223" vertex="1">
          <mxGeometry y="274" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-228" value="+&amp;nbsp;explicit StopSignInfo(const StopSign &amp;amp;stop_sign);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的停车让行标识数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员stop_sign_&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始停车让行标识数据中关联的所有stop lines中描述其形状的curv转换成若干线段的形式进行存储，存储在成员segments_中&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;读取原始路口数据stop_sign_中存储的压盖关系id，初始化成员overlap_ids_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- PostProcess(const HDMapImpl &amp;amp;map_instance)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;后处理函数，调用地图地层实现类对象，利用其中提供的方法函数完成路口元素的后处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;后处理主要包括更新压盖关系，调用函数UpdateOverlaps完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- UpdateOverlaps(const HDMapImpl &amp;amp;map_instance)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，地图底层实现类对象&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div&gt;更新与当前停车让行标识相关的压盖关系，调用地图地层实现类对象，利用其中提供的方法函数完成对压盖关系的更新&lt;/div&gt;&lt;div&gt;apollo地图只关注停车标识与车道和路口的压盖关系，将压盖的车道和路口id存储在成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;overlap_lane_ids、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;overlap_junction_ids_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-223" vertex="1">
          <mxGeometry y="282" width="930" height="358" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-229" value="&lt;div&gt;YieldSignInfo&lt;/div&gt;&lt;div&gt;减速让行标识元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;减速让行标识&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-14797.5" y="-1284" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-230" value="&lt;div&gt;- yield_sign_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;YieldSign&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;减速让行标识&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- segments_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用来描述与当前&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;减速让行标识&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;相关联的停止线，用线段的形式存储起来&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-229" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-231" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-229" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-232" value="+&amp;nbsp;explicit YieldSignInfo(const YieldSign &amp;amp;yield_sign);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，原始地图数据中的减速让行标识数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;yield_sign_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始减速让行标识数据中关联的所有stop lines中描述其形状的curv转换成若干线段的形式进行存储，存储在成员segments_中&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-229" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-233" value="&lt;div&gt;ClearAreaInfo&lt;/div&gt;&lt;div&gt;禁停区元素的封装类，除了包含禁停区&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13860" y="-1284" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-234" value="&lt;div&gt;- clear_area_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ClearArea&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;禁停区&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- polygon_：apollo::common::math::Polygon2d&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//用来描述与当前&lt;/span&gt;禁停区&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;多边形形状&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-233" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-235" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-233" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-236" value="+&amp;nbsp;explicit ClearAreaInfo(const ClearArea &amp;amp;clear_area);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的禁停区数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;clear_area_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始路口数据clear_area_中描述人行道形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-233" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-237" value="&lt;div&gt;SpeedBumpInfo&lt;/div&gt;&lt;div&gt;减速带元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;减速带&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-12910" y="-1284" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-238" value="&lt;div&gt;- speed_bump_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;SpeedBump&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;减速带&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- segments_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;apollo::common::math::LineSegment2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用来描述与当前&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;减速带的位置&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，用线段的形式存储起来&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-237" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-239" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LWFpOxd7QR8SVaHnObAa-237" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LWFpOxd7QR8SVaHnObAa-240" value="+&amp;nbsp;explicit SpeedBumpInfo(const SpeedBump &amp;amp;speed_bump);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，原始地图数据中的减速带数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;speed_bump_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始减速带数据中描述其位置的字段position按线段的形式进行存储，存储在成员segments_中&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LWFpOxd7QR8SVaHnObAa-237" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-1" value="&lt;div&gt;ParkingSpaceInfo&lt;/div&gt;&lt;div&gt;单停车位元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;单停车位&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-11930" y="-1274" width="860" height="346" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-2" value="&lt;div&gt;- parking_space_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ParkingSpace&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;单停车位&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- polygon_：apollo::common::math::Polygon2d&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//用来描述与当前&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;单停车位&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;多边形形状&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-1" vertex="1">
          <mxGeometry y="52" width="860" height="118" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-1" vertex="1">
          <mxGeometry y="170" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-4" value="+&amp;nbsp;explicit ParkingSpaceInfo(const ParkingSpace &amp;amp;parkingspace);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的单停车位数据&lt;div&gt;&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;parking_space_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始单停车位数据parking_space_中描述其形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-1" vertex="1">
          <mxGeometry y="178" width="860" height="168" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-5" value="PNCJunctionInfo&lt;div&gt;PNC路口元素的封装类，除了包含PNC路口元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-15855" y="-374" width="930" height="360" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-6" value="- junction_：const PNCJunction &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//原始地图数据中的PNC路口数据&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下成员在Init函数内初始化&lt;br&gt;&lt;div&gt;- polygon_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;apollo::common::math::Polygon2d&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口的形状，用多边形表示&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- overlap_ids_：std::vector&amp;lt;std::string&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//与当前路口相关联的压盖关系的id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-5" vertex="1">
          <mxGeometry y="64" width="930" height="106" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-5" vertex="1">
          <mxGeometry y="170" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-10" value="+&amp;nbsp;explicit PNCJunctionInfo(const PNCJunction &amp;amp;pnc_junction);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的PNC路口数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员junction_&lt;/div&gt;&lt;div&gt;调用内部初始化函数Init完成其余成员的初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Init()：void&lt;/div&gt;&lt;div&gt;内部初始化函数&lt;/div&gt;&lt;div&gt;将原始PNC路口数据junction_中描述路口形状的多边形转换成math命名空间中的Polygon2d类型，初始化成员polygon_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;读取原始&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PNC&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;路口数据junction_中存储的压盖关系id，初始化成员overlap_ids_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-5" vertex="1">
          <mxGeometry y="178" width="930" height="182" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-11" value="RSUInfo&lt;div&gt;广播设备元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;广播设备&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-14797.5" y="-374" width="640" height="200" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-12" value="- _rsu：const RSU &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//原始地图数据中的广播设备数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-11" vertex="1">
          <mxGeometry y="64" width="640" height="46" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-11" vertex="1">
          <mxGeometry y="110" width="640" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-14" value="+&amp;nbsp;explicit RSUInfo(const RSU &amp;amp;rsu);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的广播设备数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员junction_&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-11" vertex="1">
          <mxGeometry y="118" width="640" height="82" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-19" value="OverlapInfo&lt;div&gt;压盖关系元素的封装类，除了包含&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;压盖关系&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-14010" y="-374" width="640" height="200" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-20" value="- overlap_：const Overlap &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//原始地图数据中的压盖关系数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-19" vertex="1">
          <mxGeometry y="64" width="640" height="46" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-21" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-19" vertex="1">
          <mxGeometry y="110" width="640" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-22" value="+&amp;nbsp;explicit OverlapInfo(const Overlap &amp;amp;overlap);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的压盖关系数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员overlap_&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-19" vertex="1">
          <mxGeometry y="118" width="640" height="82" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-23" value="RoadInfo&lt;div&gt;道路元素的封装类，除了包含道路&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;元素的原始地图数据。还提供了丰富的算法操作，底层实现类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13170" y="-374" width="640" height="230" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-24" value="- road_：const Road &amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//原始地图数据中的道路数据&lt;div&gt;-&amp;nbsp;sections_：std::vector&amp;lt;RoadSection&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//原始地图数据中的道路段序列数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;road_boundaries_：std::vector&amp;lt;RoadBoundary&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//原始地图数据中的道路段两侧边界序列数据&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-23" vertex="1">
          <mxGeometry y="64" width="640" height="76" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-23" vertex="1">
          <mxGeometry y="140" width="640" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-26" value="+&amp;nbsp;explicit RoadInfo(const Road &amp;amp;road);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始地图数据中的道路数据&lt;div&gt;构造函数，禁止隐式转换&lt;/div&gt;&lt;div&gt;用输入初始化成员road_，从原始道路数据中读取道路段初始化成员sections_、road_boundaries_&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-23" vertex="1">
          <mxGeometry y="148" width="640" height="82" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-27" value="&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;将原始地图中各种元素由序列化数据转换成apollo内部的封装类，便于增加各种自定义方法函数&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=510;strokeWidth=4;height=80;" parent="1" vertex="1">
          <mxGeometry x="-17060" y="-2394" width="6150" height="2590" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-28" value="ComponentConfig&lt;div&gt;描述组件配置的消息结构，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;该类的初始化数据从对应业务组件的DAG文件中读取，比如Planning_Component的配置数据从planning.dag中读取&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-5040" y="-13983.5" width="1070" height="350" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-29" value="&lt;div&gt;optional string name = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自定义组件的名称，比如PlannningComponent&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string config_file_path = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;业务配置文件路径，指向一个.pb.txt文件，描述业务组件的详细配置数据&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;//.conf与gflags(Google Flags)文件的联合使用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;//gflags.h文件负责声明参数变量&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;//gflags.cc文件负责定义参数变量，初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//.conf文件负责对某些参数变量的值进行重写，即.confg文件的优先级比flags.cc高&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;//以上操作通过gflags库进行实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//gflags（Google Flags）库在程序启动时会自动解析所有以 --xxx=yyy 形式出现的参数。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//只有在代码中用 DEFINE_xxx 宏声明过的参数，gflags才会识别并赋值。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//如果 conf 文件或命令行中出现了未声明的参数（比如 --min_length_for_lane_change），gflags 会自动跳过，既不会赋值，也不会报错，程序内部也无法通过 FLAGS_xxx 访问到这个参数。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//gflags.h和gflags.cc提供编译时的默认值，代码中作为头文件引入，如果修改必须重新编译。因此引入了.conf文件作为运行时的配置，修改标定量的数值之后无需重新编译&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional string flag_file_path = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参数文件路径，指向一个.conf文件，也是描述业务组件的参数的&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;存储订阅业务组件输入消息的订阅器配置序列，启动业务组件有可能需要订阅多个消息作为输入，每个消息都需要一个订阅器从特定通道订阅消息，因此使用repeated&lt;/div&gt;&lt;div&gt;repeated ReaderOption readers = 4;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-28" vertex="1">
          <mxGeometry y="50" width="1070" height="300" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-30" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-79" target="LWFpOxd7QR8SVaHnObAa-83" edge="1">
          <mxGeometry x="-0.1515" y="50" width="160" relative="1" as="geometry">
            <mxPoint x="-2697" y="-13830" as="sourcePoint" />
            <mxPoint x="-2437" y="-14040" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-31" value="ReaderOption&lt;div&gt;描述订阅业务组件输入消息的订阅器配置的结构体&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4754" y="-14328.5" width="470" height="210" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-32" value="&lt;div&gt;optional string channel = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;要订阅的消息通道名称&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;通道的服务质量参数(Quality of Service Profile)，如缓存深度、可靠性等&lt;/div&gt;&lt;/div&gt;&lt;div&gt;optional QosProfile qos_profile =&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;2;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;控制Reader最多能缓存多少条未被处理的消息，防止消息堆积导致内存溢出。&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional uint32 pending_queue_size = 3&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;[default = 1];&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-31" vertex="1">
          <mxGeometry y="50" width="470" height="160" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-33" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-28" target="74iOabvwtdqIhZIzJNJk-31" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4810" y="-14303.5" as="sourcePoint" />
            <mxPoint x="-4500" y="-14443.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-34" value="PlanningConfig proto&lt;div&gt;描述规划组件详细配置的消息结构&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-6044" y="-2728" width="810" height="330" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-35" value="&lt;div&gt;enum PlanningLearningMode {&lt;/div&gt;&lt;div&gt;&amp;nbsp; NO_LEARNING = 0;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 不使用学习模式&lt;/div&gt;&lt;div&gt;&amp;nbsp; E2E = 1;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 端到端学习模式&lt;/div&gt;&lt;div&gt;&amp;nbsp; HYBRID = 2;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 混合学习模式&lt;/div&gt;&lt;div&gt;&amp;nbsp; RL_TEST = 3;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 强化学习测试模式&lt;/div&gt;&lt;div&gt;&amp;nbsp; E2E_TEST = 4;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 端到端测试模式&lt;/div&gt;&lt;div&gt;&amp;nbsp; HYBRID_TEST = 5;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 混合测试模式&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;optional PlanningLearningMode learning_mode = 2;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 规划学习模式，描述基于学习的规划算法使用哪种学习算法&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional TopicConfig topic_config = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;// 话题配置，规划组件订阅和发布的话题名称，输入输出&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional ReferenceLineConfig reference_line_config = 3; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 参考线配置，确定参考线生成时使用的那种pnc地图的类型名称&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string planner = 4;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划器名称&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-34" vertex="1">
          <mxGeometry y="52" width="810" height="278" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-36" value="TopicConfig proto&lt;div&gt;规划组件收发消息的话题名称&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-6039" y="-2301" width="940" height="740" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-37" value="&lt;div&gt;//planning订阅消息的通道&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下话题在Apollo CyberRT 的多通道Component机制完成订阅，Initialize函数中完成订阅&lt;/div&gt;&lt;div&gt;optional string prediction_topic = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//预测&lt;/div&gt;&lt;div&gt;&lt;div&gt;optional string chassis_topic = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//底盘&lt;/div&gt;&lt;div&gt;optional string localization_topic = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//定位&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下话题在规划组件中的Init函数中完成订阅&lt;/div&gt;&lt;div&gt;optional string planning_command_topic = 13;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//运动规划命令，运动规划命令处理器发布的需要规划组件执行的命令，包含命令执行的详细参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional string traffic_light_detection_topic = 11;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//交通灯感知消息&lt;/div&gt;&lt;div&gt;optional string planning_pad_topic = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//行为控制命令，行为控制命令处理器发布的需要规划组件执行的命令，包含命令执行的详细参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional string story_telling_topic = 10;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//场景故事，用于描述车辆当前所处的驾驶场景和环境状态&lt;/div&gt;&lt;div&gt;optional string control_interative_topic = 14;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//控制交互，用于控制模块向规划模块发送重新规划请求&lt;/div&gt;&lt;div&gt;optional string relative_map_topic = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//相对地图，只有navi模式才会有这个话题&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//planning发布消息的通道&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string planning_trajectory_topic = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划轨迹&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;//重新路由请求通过client-service机制实现一对一通信。而不是publisher-subscriber机制的广播式通信&lt;/div&gt;&lt;div&gt;optional string routing_request_topic = 8;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;//重新路由请求&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string planning_learning_data_topic = 12;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用于机器学习训练，包含了规划模块生成的学习数据帧，只有在学习模式下才会发布&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//预留话题&lt;/div&gt;&lt;div&gt;optional string hmi_status_topic = 2;&lt;/div&gt;&lt;div&gt;optional string routing_response_topic = 9;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-36" vertex="1">
          <mxGeometry y="52" width="940" height="508" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-40" value="ReferenceLineConfig proto&lt;div&gt;参考线配置字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="74iOabvwtdqIhZIzJNJk-36" vertex="1">
          <mxGeometry y="560" width="940" height="180" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-41" value="&lt;div&gt;//PNC地图类的名称列表，用于指定reference line provider使用的地图处理类，使用repeated支持多种地图，包括以下三类地图&lt;/div&gt;&lt;div&gt;//LaneFollowMap(车道跟随地图，OnLanePlanning使用的地图)、&lt;/div&gt;&lt;div&gt;//NavigationMap(导航地图navi模式使用的地图)、&lt;/div&gt;&lt;div&gt;//ParkingMap(泊车地图，泊车使用的地图)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//ReferenceLineProvider中会存储所有支持的pnc地图，根据规划组件接收到的运动规划命令PlanningCommand中的命令类型的不同，选用对应的pnc地图来生成参考线&lt;/span&gt;&lt;/div&gt;repeated string pnc_map_class = 2;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-40" vertex="1">
          <mxGeometry y="51" width="940" height="129" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-42" value="&lt;div&gt;template &amp;lt;&amp;gt;&lt;/div&gt;&lt;div&gt;Component&amp;lt;NullType, NullType, NullType, NullType&amp;gt; : public ComponentBase&lt;/div&gt;&lt;div&gt;无通道组件类，主模板类的模板特化类，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;如果继承Component&amp;lt;&amp;gt;的话优先继承该特化类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=70;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3981" y="-12678.5" width="510" height="240" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-43" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-42" vertex="1">
          <mxGeometry y="70" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-44" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-42" vertex="1">
          <mxGeometry y="96" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-45" value="+ Initialize(const ComponentConfig&amp;amp; config) override：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件配置&lt;div&gt;组件初始化函数，由cyberRT框架自动调用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;相比于主模板类缺少Process函数，说明对于无通道组件不需要执行运行函数&lt;/div&gt;&lt;div&gt;&lt;div&gt;这类组件的设计目的是管理型、服务型、定时器型等“主动型”组件，只需要在启动时初始化，不需要被动响应消息。&lt;/div&gt;&lt;div&gt;典型场景：外部命令处理、全局状态管理、定时任务、服务注册等。&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-42" vertex="1">
          <mxGeometry y="104" width="510" height="136" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-46" value="&lt;div&gt;template &amp;lt;typename M0&amp;gt;&lt;/div&gt;&lt;div&gt;Component&amp;lt;M0, NullType, NullType, NullType&amp;gt; : public ComponentBase&lt;/div&gt;&lt;div&gt;单通道组件类，主模板类的模板特化类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3740" y="-12192" width="570" height="434" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-47" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-46" vertex="1">
          <mxGeometry y="60" width="570" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-48" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-46" vertex="1">
          <mxGeometry y="86" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-50" value="+&amp;nbsp;bool Initialize(const ComponentConfig&amp;amp; config) override : bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件配置&lt;div&gt;组件初始化函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;组件初始化函数，由cyberRT框架自动调用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Process(const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0)：bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，组件运行所需的全部消息&lt;/div&gt;&lt;div&gt;组件运行函数，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;该函数由cyberRT自动调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中会调用用户自定义组件的执行函数Proc()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual &lt;/span&gt;&lt;span&gt;Proc&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0)&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&amp;nbsp;= 0 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，组件运行所需的全部消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;用户自定义组件运行函数，纯虚函数，必须在用户自定义组件中重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-46" vertex="1">
          <mxGeometry y="94" width="570" height="340" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-51" value="&lt;div&gt;&lt;div&gt;template &amp;lt;typename M0, typename M1&amp;gt;&lt;/div&gt;&lt;div&gt;Component&amp;lt;M0, M1, NullType, NullType&amp;gt; : public ComponentBase&lt;/div&gt;&lt;/div&gt;&lt;div&gt;双通道组件类，主模板类的模板特化类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3061" y="-12198" width="570" height="390" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-52" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-51" vertex="1">
          <mxGeometry y="60" width="570" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-53" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-51" vertex="1">
          <mxGeometry y="86" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-54" value="+&amp;nbsp;bool Initialize(const ComponentConfig&amp;amp; config) override : bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件配置&lt;div&gt;组件初始化函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;组件初始化函数，由cyberRT框架自动调用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Process(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，组件运行所需的全部消息&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) : bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;组件运行函数，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;该函数由cyberRT自动调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中会调用用户自定义组件的执行函数Proc()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual &lt;/span&gt;&lt;span&gt;Proc&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，组件运行所需的全部消&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) = 0 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;用户自定义组件运行函数，纯虚函数，必须在用户自定义组件中重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-51" vertex="1">
          <mxGeometry y="94" width="570" height="296" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-55" value="&lt;div&gt;&lt;div&gt;template &amp;lt;typename M0, typename M1, typename M2&amp;gt;&lt;/div&gt;&lt;div&gt;Component&amp;lt;M0, M1, M2, NullType&amp;gt; : public ComponentBase&lt;/div&gt;&lt;/div&gt;&lt;div&gt;三通道组件类，主模板类的模板特化类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2680" y="-12710" width="570" height="390" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-56" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-55" vertex="1">
          <mxGeometry y="60" width="570" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-57" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-55" vertex="1">
          <mxGeometry y="86" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-58" value="+&amp;nbsp;bool Initialize(const ComponentConfig&amp;amp; config) override : bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件配置&lt;div&gt;组件初始化函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;组件初始化函数，由cyberRT框架自动调用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Process(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，组件运行所需的全部消息&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M2&amp;gt;&amp;amp; msg2&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) : bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;组件运行函数，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;该函数由cyberRT自动调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在该函数中会调用用户自定义组件的执行函数Proc()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual &lt;/span&gt;&lt;span&gt;Proc&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M0&amp;gt;&amp;amp; msg0,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，组件运行所需的全部消&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M1&amp;gt;&amp;amp; msg1,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;M2&amp;gt;&amp;amp; msg2&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) = 0 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;用户自定义组件运行函数，纯虚函数，必须在用户自定义组件中重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-55" vertex="1">
          <mxGeometry y="94" width="570" height="296" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-59" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-83" target="74iOabvwtdqIhZIzJNJk-42" edge="1">
          <mxGeometry x="-0.0082" y="-1" width="160" relative="1" as="geometry">
            <mxPoint x="-3570" y="-12494.5" as="sourcePoint" />
            <mxPoint x="-3310" y="-12704.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-60" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-83" target="74iOabvwtdqIhZIzJNJk-46" edge="1">
          <mxGeometry x="0.1358" y="5" width="160" relative="1" as="geometry">
            <mxPoint x="-2920" y="-13094.5" as="sourcePoint" />
            <mxPoint x="-2660" y="-13304.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-61" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-83" target="74iOabvwtdqIhZIzJNJk-51" edge="1">
          <mxGeometry x="-0.1515" y="50" width="160" relative="1" as="geometry">
            <mxPoint x="-3010" y="-13184.5" as="sourcePoint" />
            <mxPoint x="-2803" y="-13013.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-62" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-83" target="74iOabvwtdqIhZIzJNJk-55" edge="1">
          <mxGeometry x="-0.1515" y="50" width="160" relative="1" as="geometry">
            <mxPoint x="-2310" y="-13164.5" as="sourcePoint" />
            <mxPoint x="-2103" y="-12993.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-64" value="ExternalCommandProcessComponent : public cyber::Component&amp;lt;&amp;gt;&lt;div&gt;外部指令处理组件，无通道组件，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;其主要用途包括外部指令的处理以及提供外部指令执行状态的查询服务&lt;/span&gt;&lt;/div&gt;&lt;div&gt;该业务组件作为服务端管理组件，只需要在启动时Init即可，因此不需要被动响应执行Proc函数&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=72;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1660" y="-13460" width="1110" height="550" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-65" value="&lt;div&gt;用于存储外部指令处理器，一种外部指令对应一种处理器，&lt;/div&gt;&lt;div&gt;目前可处理的外部命令有以下三个种类：&lt;/div&gt;&lt;div&gt;LaneFollow(沿车道行驶，点到点，计算路由)&lt;/div&gt;&lt;div&gt;ValetParking(代客泊车，点到车位)&lt;/div&gt;&lt;div&gt;ActionCommand(操作类命令，如启动停车这类云端对车辆的直接控制)&lt;/div&gt;&lt;div&gt;- command_processors_：std::vector&amp;lt;std::shared_ptr&amp;lt;CommandProcessorBase&amp;gt;&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;提供外部指令执行状态的查询服务&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- command_status_service_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::shared_ptr&amp;lt;cyber::Service&amp;lt;CommandStatusRequest, CommandStatus&amp;gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-64" vertex="1">
          <mxGeometry y="72" width="1110" height="248" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-66" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-64" vertex="1">
          <mxGeometry y="320" width="1110" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-67" value="+&amp;nbsp;Init() override：bool&lt;div&gt;初始化函数&lt;/div&gt;&lt;div&gt;·.从pb.txt文件读取当前业务组件的详细配置数据&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从组件详细配置中读取可处理的命令名词，通过插件管理器cyber::plugin_manager实例化对应的命令处理器(根据完整的类型名调用对应类的无参构造函数)，对每一个处理器执行初始化Init之后存储在成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;command_processors_中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;创建服务端，初始化成员command_status_service_。&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在该服务中查询请求的消息类型为&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CommandStatusRequest，查询服务返回的执行状态的消息类型为&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CommandStatus，通过组件详细配置中的通道&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;output_command_status_name进行数据传输(双向)。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;在服务端获取查询请求时自动调用服务的回调函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，在该回调函数中会遍历command_processors_中的每一个命令处理器，并调用其外部命令执行状态获取函数GetCommandStatus，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;如果客户端请求查询状态的外部命令ID与当前处理器中正在监听执行状态的外部命令ID一致，拷贝监听的状态消息作为查询服务的响应返回&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-64" vertex="1">
          <mxGeometry y="328" width="1110" height="222" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-68" value="ProcessComponentConfig proto&lt;div&gt;描述外部指令处理组件的配置数据结构，从对应的pb.txt文件中获取初始化数据，文件路径从业务组件的DAG文件中获取&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=56;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1723" y="-13910" width="680" height="240" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-69" value="&lt;div&gt;//外部指令执行状态查询服务在该通道中返回响应给客户端，同时客户端也通过这个通道发送执行状态查询请求给服务端&lt;/div&gt;&lt;div&gt;required string output_command_status_name = 1&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; [default = &quot;/apollo/external_command/command_status&quot;];&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//指定了业务组件可处理的外部指令列表，以命令名称的形式存储&lt;/div&gt;&lt;div&gt;&lt;div&gt;//目前可处理的命令有以下三种：&lt;/div&gt;&lt;div&gt;//LaneFollow(沿车道行驶，点到点，路由请求)&lt;/div&gt;&lt;div&gt;//ValetParking(代客泊车，点到车位)&lt;/div&gt;&lt;div&gt;//ActionCommand(操作类命令，如启动停车这类云端对车辆的直接控制)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;repeated string processor = 2;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-68" vertex="1">
          <mxGeometry y="56" width="680" height="184" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-70" value="CommandStatusRequest proto&lt;div&gt;描述查询外部指令执行状态请求的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=49;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="421" y="-13520" width="910" height="160" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-71" value="&lt;div&gt;帧头&lt;/div&gt;&lt;div&gt;optional apollo.common.Header header = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;待查询状态的外部命令的全局唯一ID&lt;/div&gt;&lt;div&gt;optional int64 command_id = 2 [default = -1];&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-70" vertex="1">
          <mxGeometry y="49" width="910" height="111" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-74" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-64" target="74iOabvwtdqIhZIzJNJk-68" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="2830" y="-13650" as="sourcePoint" />
            <mxPoint x="3240" y="-13760" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-75" value="accept request" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-64" target="74iOabvwtdqIhZIzJNJk-70" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="2760" y="-13097" as="sourcePoint" />
            <mxPoint x="2550" y="-13310" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-76" value="CommandProcessorBase&lt;div&gt;命令处理器基类，提供外部指令处理服务的服务端(这里的处理服务是指将外部指令处理成apollo内部组件之间的内部指令的过程)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意与ExternalCommandProcessComponent中的服务端不同，它提供的是外部指令执行状态查询服务&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=53;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2980" y="-13460" width="990" height="510" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-77" value="&lt;div&gt;- processor_config_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;CommandProcessorConfig&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;命令处理器的配置参数，不同子类处理器拥有不同的配置参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;命令处理器作为处理服务的服务端和监听外部指令的执行状态，需要与cyberRT内的组件实现通信，&lt;/div&gt;&lt;div&gt;因此复用&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ExternalCommandProcessComponent&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;组件中的节点接入CyberRT&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- node_：std::shared_ptr&amp;lt;cyber::Node&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-76" vertex="1">
          <mxGeometry y="53" width="990" height="97" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-78" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-76" vertex="1">
          <mxGeometry y="150" width="990" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-79" value="&lt;div&gt;+ CommandProcessorBase();&lt;/div&gt;&lt;div&gt;基类的无参构造函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;开辟&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CommandProcessorConfig类对象的内存空间，并将指针赋给成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;processor_config_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ virtual Init(const std::shared_ptr&amp;lt;cyber::Node&amp;gt;&amp;amp; node)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，组件ExternalCommandProcessComponent中的节点成员&lt;div&gt;初始化函数，非纯虚函数，子类中可以调用&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在派生类中调用时，读取派生类配置参数文件路径，读取相应pb.txt文件初始化成员processor_config_，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;配置参数文件路径是对应派生类头文件所在目录下的conf/config.pb.txt&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将输入的节点指针拷贝到成员node_，为命令处理器提供与cyberRT内的组件之间的通信&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual GetCommandStatus(int64_t command_id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，需要查询命令执行状态的外部指令ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CommandStatus* status) const = 0：bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，查询到的外部命令执行状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;由于不同子类中获取命令执行状态的方式不同，这里设计成纯虚函数的形式，强制在子类中重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-76" vertex="1">
          <mxGeometry y="158" width="990" height="352" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-80" value="ActionCommandProcessor : public CommandProcessorBase&lt;div&gt;行为控制类命令处理器，处理&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;怎么去&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;”&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的问题&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=67;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4141" y="-13660" width="530" height="127" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-81" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-80" vertex="1">
          <mxGeometry y="67" width="530" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-82" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-80" vertex="1">
          <mxGeometry y="93" width="530" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-83" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-80" vertex="1">
          <mxGeometry y="101" width="530" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-85" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-76" target="74iOabvwtdqIhZIzJNJk-80" edge="1">
          <mxGeometry x="-0.035" y="75" width="160" relative="1" as="geometry">
            <mxPoint x="2590" y="-12533" as="sourcePoint" />
            <mxPoint x="2850" y="-12743" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-86" value="&lt;div&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div&gt;MotionCommandProcessorBase : public CommandProcessorBase&lt;/div&gt;&lt;div&gt;运动规划类命令处理器，处理“去哪里”问题，模板参数T表示客户端发来的命令处理请求的消息类型，处理ValetParking和LaneFollow两种命令&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;目前只执行路由的功能&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=90;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4700" y="-13260" width="1220" height="1140" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-87" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;# command_service_：std::shared_ptr&amp;lt;cyber::Service&amp;lt;T, CommandStatus&amp;gt;&amp;gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;提供外部命令处理服务的服务端，负责将外部命令转换车内部命令，并将处理状态通过同一通道返回给请求命令处理的客户端&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//没有使用cyberRT中原生的订阅器和发布器类型，而是将原生订阅器和发布器进行了封装满足该处理器的特殊需求&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;# planning_command_writer_：std::shared_ptr&amp;lt;WriterHandle&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;负责发布规划命令PlanningCommand这一apollo内部命令，规划组件订阅该消息作为输入来执行规划任务&lt;/div&gt;&lt;div&gt;# routing_response_writer_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;WriterHandle&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;负责发布路由响应RoutingResponse这一内部命令&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，是否是在座舱组件内部订阅该消息用作HMI显示？&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;//监听规划组件对内部命令PlanningCommand的执行状态&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# message_reader_：MessageReader*&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;routing_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;apollo::routing::Routing&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;路由任务模块，业务逻辑层，负责将外部运动规划指令(LaneFollow或ValetParking)处理成路由响应RoutingResponse这一内部命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;提供坐标转换(世界坐标系转车道坐标系)和车道定位的工具对象，使得外部指令能够准确地转换为的路由请求RoutingRequest作为路由任务的输入&lt;/div&gt;&lt;div&gt;# lane_way_tool_：std::shared_ptr&amp;lt;apollo::external_command::LaneWayTool&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;# last_received_command_：T&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;缓存最后收到的外部命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# planning_command_status_name_：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;监听规划组件对内部命令PlanningCommand执行状态的通道名称&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-86" vertex="1">
          <mxGeometry y="90" width="1220" height="390" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-88" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-86" vertex="1">
          <mxGeometry y="480" width="1220" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-89" value="&lt;div&gt;+ MotionCommandProcessorBase();&lt;/div&gt;&lt;div&gt;基类无参构造函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;创建Routing类对象，并将指针赋给成员routing_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;创建MessageReader单例，并将指针赋给成员message_reader_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ Init(const std::shared_ptr&amp;lt;cyber::Node&amp;gt;&amp;amp; node) override：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，组件ExternalCommandProcessComponent中的节点成员&lt;div&gt;运动规划类命令重写的初始化函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用基类中的Init函数，完成节点的复用和子类处理器配置参数的读取&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;构造成员lane_way_tool_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用路由算法routing_的Init函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;创建命令处理服务端command_service_，每次客户端请求该服务时，自动调用类内的回调成员函数OnCommand&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;注册发布器planning_command_writer_、routing_response_writer_。从配置参数中读取监听通道名称赋值给planning_command_status_name_，注册订阅器message_reader_。&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;其中由于向座舱发布的消息不需要存储，除&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;routing_response_writer_外通过gflags定义通道，其他通信类成员的通道都从配置参数中读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;+ GetCommandStatus(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;int64_t command_id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，需要查询命令执行状态的外部命令ID&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CommandStatus* status) const override：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，查询到的外部命令执行状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示成功查询到外部命令的执行状态&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;获取监听的内部命令执行状态，用于支持组件的外部命令执行状态查询功能&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;判断输入的命令ID是否与缓存的最近的外部命令&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;last_received_command_中的ID一致，一致的话从监听器messge_reader_中拷贝状态消息到输出&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;status中&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;不一致的话返回false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;#&amp;nbsp;OnCommand(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;T&amp;gt;&amp;amp; command,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，请求被处理的外部命令&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::shared_ptr&amp;lt;CommandStatus&amp;gt;&amp;amp; status)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，外部命令的处理状态&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;外部命令处理服务回调函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用成员routing_中的Process函数完成路由计算，并将路由计算结果通过发布器成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning_command_writer_和routing_response_writer_发布到CyberRT中，planning组件和座舱在其组件内部只要订阅对应的消息即可获得路由计算的结果，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;同时将外部指令的处理状态通过同一通道返回给客户端&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;# virtual Convert(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;T&amp;gt;&amp;amp; command,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，请求被处理的外部指令&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::shared_ptr&amp;lt;apollo::routing::RoutingRequest&amp;gt;&amp;amp;&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;routing_request) const = 0：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;路由请求，将外部指令转换成路由请求RoutingRequest作为路由任务的输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将外部指令转换成路由任务模块可识别的路由请求输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-86" vertex="1">
          <mxGeometry y="488" width="1220" height="652" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-90" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-76" target="74iOabvwtdqIhZIzJNJk-86" edge="1">
          <mxGeometry x="0.0038" width="160" relative="1" as="geometry">
            <mxPoint x="3465" y="-12413" as="sourcePoint" />
            <mxPoint x="3290" y="-12284" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-92" value="&lt;div&gt;LaneFollowCommandProcessor&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;: public MotionCommandProcessorBase&amp;lt;LaneFollowCommand&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;沿车道行驶命令处理器，导航起点到导航终点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;Apollo在进行第一帧规划时的LaneFollowCommand来自于DreamView界面中用户手动点击“发送路由请求”按钮，在实车产品中该请求来自于HMI界面司机手动点击“开启自动驾驶”按钮，此时该处理器中服务端的回调函数才能发布PlanningCommand，规划组件开始正常运行；规划组件运行过程中通过检查是否需要重新路由，自动发送LaneFollowCommand&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=104;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="6431" y="-12751" width="1240" height="280" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-93" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-92" vertex="1">
          <mxGeometry y="104" width="1240" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-94" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-92" vertex="1">
          <mxGeometry y="130" width="1240" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-95" value="&lt;div&gt;- virtual Convert(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;LaneFollowCommand&amp;gt;&amp;amp; command,&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，沿车道行驶的外部指令LaneCommand&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;std::shared_ptr&amp;lt;apollo::routing::RoutingRequest&amp;gt;&amp;amp; routing_request) const override：bool&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&lt;/span&gt;//输出，路由请求，将外部指令转换成路由请求RoutingRequest作为路由任务的输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;将外部指令LaneCommand转换成路由任务模块可识别的路由请求RoutingRequest输入&lt;/div&gt;&lt;div&gt;包含自动计算路由起点&lt;/div&gt;&lt;div&gt;这里在进行LaneFollowCommand转换成RoutingRequest时必须保证途经点中第一个是路由起点(未保证)，最后一个是路由终点(已保证)，否则在导航器计算路由时通过首尾途经点来设置起终点会出现问题&lt;/div&gt;&lt;div&gt;当LaneFollowCommand设置了路由起点，但way_point中没有保证起点在第一个，在RoutingRequest中的LaneWayPoint继承了&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;way_point中的顺序，会导致上面所说的在导航器处的错误&lt;/span&gt;&lt;/div&gt;&lt;div&gt;需要在这个函数中规定好LaneWayPoint的顺序&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-92" vertex="1">
          <mxGeometry y="138" width="1240" height="142" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-96" value="&lt;div&gt;ValetParkingCommandProcessor&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;: public MotionCommandProcessorBase&amp;lt;ValetParkingCommand&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;代客泊车命令处理器，导航终点到车位&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=65;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="6464.5" y="-13169.5" width="620" height="125" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-97" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-96" vertex="1">
          <mxGeometry y="65" width="620" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-98" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="74iOabvwtdqIhZIzJNJk-96" vertex="1">
          <mxGeometry y="91" width="620" height="8" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-99" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="74iOabvwtdqIhZIzJNJk-96" vertex="1">
          <mxGeometry y="99" width="620" height="26" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-100" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-86" target="74iOabvwtdqIhZIzJNJk-92" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4887.5" y="-12944" as="sourcePoint" />
            <mxPoint x="5147.5" y="-13154" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-101" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-86" target="74iOabvwtdqIhZIzJNJk-96" edge="1">
          <mxGeometry x="0.0041" width="160" relative="1" as="geometry">
            <mxPoint x="5727.5" y="-12994" as="sourcePoint" />
            <mxPoint x="5987.5" y="-13204" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-102" value="CommandProcessorConfig&lt;div&gt;命令处理器配置参数结构体&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=49;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2941" y="-14010.5" width="1090" height="340" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-103" value="&lt;div&gt;//外部命令处理服务接收外部命令的通道，同时也通过这一通道返回处理状态给客户端。由于一种处理器只处理一类外部指令，因此这个通道只有一个&lt;/div&gt;&lt;div&gt;required string input_command_name = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//内部指令发布通道，外部指令经处理器转换成内部指令后通过该通道发布。一个外部指令可能需要多个组件进行执行，因此需要转换成若干内部指令通过若干通道发布给对应的组件，故这里使用repeated&lt;/div&gt;&lt;div&gt;repeated string output_command_name = 2;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//如上所说，处理器需要监听这些组件对于内部命令的执行状态，不同内部命令的执行状态通过不同通道进行订阅，故这里设计成repeated&lt;/div&gt;&lt;div&gt;repeated string input_command_status_name = 3;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//规划内部命令PlanningCommand通过该通道发布，作为历史消息持久化存储下来，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;用于事故分析和系统优化等用途&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//目前只用运动规划命令处理器&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;MotionCommandProcessorBase会发布规划命令PlanningCommand，使用该通道发布用于存储，行为控制命令处理器不通过该通道发布消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional string planning_command_history_name = 4 [default = &quot;/apollo/planning_command_history&quot;];&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-102" vertex="1">
          <mxGeometry y="49" width="1090" height="291" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-104" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-76" target="74iOabvwtdqIhZIzJNJk-102" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4190" y="-12820" as="sourcePoint" />
            <mxPoint x="4600" y="-12930" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-105" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-83" target="74iOabvwtdqIhZIzJNJk-28" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4290" y="-13310" as="sourcePoint" />
            <mxPoint x="-3880" y="-13420" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-106" value="LaneFollowCommand proto&lt;div&gt;描述沿车道行驶这一外部指令的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;movable=1;resizable=1;rotatable=1;deletable=1;editable=1;locked=0;connectable=1;" parent="1" vertex="1">
          <mxGeometry x="6690" y="-12330" width="1010" height="470" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-107" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//帧头&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional int64 command_id = 2 [default = -1];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//外部指令的全局唯一ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//在下面way_point中是否设置路由起点，若未设置使用车辆当前位置作为路由起点，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通常在第一帧规划时或者在规划组件运行过程中需要进行重新路由时不设置路由起点，由命令处理器中的Convert函数自动将车辆当前位置作为路由起点写入下面的途经点中&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional bool is_start_pose_set = 3 [default = false];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//路由途经点，包含起点(如果设置了的话)，不包含终点，途经点有多个故使用repeated，点的坐标就是是ENU坐标系下的坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//途经点的存储顺序没有要求，因为在进行路径搜索时分别对存储在这里的相邻途经点之间进行A*搜索，之后通过合并操作去重形成一条完整的路径，因此这里不要求途经点的存储顺序&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated Pose way_point = 4;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;required Pose end_pose = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路由终点，必须给定&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，点的坐标就是是ENU坐标系下的坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated LaneSegment blacklisted_lane = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黑名单车道段&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated string blacklisted_road = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黑名单道路id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Expected speed when executing this command. If &quot;target_speed&quot; &amp;gt; maximum&lt;/div&gt;&lt;div&gt;// speed of the vehicle, use maximum speed of the vehicle instead. If it is&lt;/div&gt;&lt;div&gt;// not given, the default target speed of system will be used.&lt;/div&gt;&lt;div&gt;optional double target_speed = 8;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//执行该命令时的目标车速，不能超过最大车速&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-106" vertex="1">
          <mxGeometry y="52" width="1010" height="418" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-110" value="ValetParkingCommand proto&lt;div&gt;描述代客泊车这一外部指令的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="6570" y="-13810" width="540" height="480" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-111" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Unique identification for command.&lt;/div&gt;&lt;div&gt;optional int64 command_id = 2 [default = -1];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// If the start pose is set as the first point of &quot;way_point&quot;.&lt;/div&gt;&lt;div&gt;optional bool is_start_pose_set = 3 [default = false];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// The points between &quot;start_pose&quot; and &quot;end_pose&quot;.&lt;/div&gt;&lt;div&gt;repeated Pose way_point = 4;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// The lane segments which should not be passed by.&lt;/div&gt;&lt;div&gt;repeated LaneSegment blacklisted_lane = 5;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// The road which should not be passed by.&lt;/div&gt;&lt;div&gt;repeated string blacklisted_road = 6;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// The id of the parking spot on the map.&lt;/div&gt;&lt;div&gt;required string parking_spot_id = 7;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Expected speed when executing this command. If &quot;target_speed&quot; &amp;gt; maximum&lt;/div&gt;&lt;div&gt;// speed of the vehicle, use maximum speed of the vehicle instead. If it is&lt;/div&gt;&lt;div&gt;// not given, the default target speed of system will be used.&lt;/div&gt;&lt;div&gt;optional double target_speed = 8;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-110" vertex="1">
          <mxGeometry y="52" width="540" height="428" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-108" value="PlanningCommand proto&lt;div&gt;描述规划命令这一apollo内部命令的字段，&lt;font style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;外部指令通过命令处理器转化成内部命令发布到cyberRT中，规划组件订阅该消息作为输入执行规划任务&lt;/font&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4901" y="-14010.5" width="740" height="404" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-109" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//帧头&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional int64 command_id = 2 [default = -1];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//请求处理的命令ID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//沿车道跟车指令，路由计算结果，规划组件监听该消息来执行规划任务，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意类型是RoutingResponse而非LaneFollowCommand&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional apollo.routing.RoutingResponse lane_follow_command = 3;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Target speed in command.&lt;/div&gt;&lt;div&gt;optional double target_speed = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//目标车速&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Indicate if the command is a motion command.&lt;/div&gt;&lt;div&gt;optional bool is_motion_command = 5 [default = false];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;oneof command {&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Move to the given pose with open space planning trajectory.&lt;/div&gt;&lt;div&gt;&amp;nbsp; ParkingCommand parking_command = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//泊车命令，开放空间运动规划，只有泊车处理器才会发布该属性，未使用预留&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Custom command defined by user for extensibility.&lt;/div&gt;&lt;div&gt;&amp;nbsp; google.protobuf.Any custom_command = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待扩展命令，用户自定义&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-108" vertex="1">
          <mxGeometry y="60" width="740" height="344" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-114" value="publish" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=1;resizable=1;horizontal=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-86" target="74iOabvwtdqIhZIzJNJk-108" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4036.5" y="-13200" as="sourcePoint" />
            <mxPoint x="4446.5" y="-13310" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-115" value="accept request" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=1;resizable=1;horizontal=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-92" target="74iOabvwtdqIhZIzJNJk-106" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4640.5" y="-12291.5" as="sourcePoint" />
            <mxPoint x="5050.5" y="-12401.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-116" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=1;resizable=1;horizontal=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-96" target="74iOabvwtdqIhZIzJNJk-110" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="6511" y="-11670" as="sourcePoint" />
            <mxPoint x="6921" y="-11780" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-117" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=1;resizable=1;horizontal=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-34" target="74iOabvwtdqIhZIzJNJk-36" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-6266" y="-951" as="sourcePoint" />
            <mxPoint x="-5956" y="-1091" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-1" value="LocalView&lt;div&gt;规划组件的本地视图结构体，它包含了每一帧规划组件进行路径规划所需的所有输入数据，将来自不同模块的数据整合在一起，提供统一接口&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=61;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-5344" y="-4763" width="840" height="320" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-2" value="&lt;div&gt;//以下成员来自于组件基类的模板参数&lt;/div&gt;&lt;div&gt;+ prediction_obstacles：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;prediction::PredictionObstacles&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;预测障碍物&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;chassis&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;canbus::Chassis&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;localization_estimate&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;localization::LocalizationEstimate&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//以下成员来自于规划组件内的订阅器&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;traffic_light&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;perception::TrafficLightDetection&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;交通灯信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;relative_map&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;relative_map::MapMsg&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对地图信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;pad_msg&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;PadMessage&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;行为控制命令消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;stories&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;storytelling::Stories&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景故事消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;planning_command&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;PlanningCommand&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;运动规划命令消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;end_lane_way_point&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;routing::LaneWaypoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划终点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;control_interactive_msg&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;control::ControlInteractiveMsg&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;控制交互消息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&amp;nbsp;perception_dock&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;perception::PerceptionAccurateDockInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;泊车功能需要的感知提供的精确泊位消息，目前未使用&lt;/span&gt;&lt;/strike&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-1" vertex="1">
          <mxGeometry y="61" width="840" height="259" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-3" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;apollo::external_command&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;提供外部命令处理功能的业务组件&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="-20" y="-14150" width="1430" height="280" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-4" value="&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;规划组件的详细配置参数&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=260;strokeWidth=4;height=70;" parent="1" vertex="1">
          <mxGeometry x="-6094" y="-2821" width="1104" height="1351" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-9" value="&lt;span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;规划组件的输入输出消息的结构化数据&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=390;strokeWidth=4;height=65;" parent="1" vertex="1">
          <mxGeometry x="-5444" y="-5021" width="1000" height="195" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-11" value="ADCTrajectory proto&lt;div&gt;规划轨迹，规划组件输出&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-5394" y="-4251" width="940" height="1190" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-12" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double total_path_length = 2;&amp;nbsp; // in meters&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double total_path_time = 3;&amp;nbsp; &amp;nbsp; // in seconds&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional EStop estop = 6;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional apollo.planning_internal.Debug debug = 8;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// is_replan == true mean replan triggered&lt;/div&gt;&lt;div&gt;optional bool is_replan = 9 [default = false];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// Specify trajectory gear&lt;/div&gt;&lt;div&gt;optional apollo.canbus.Chassis.GearPosition gear = 10;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// path data + speed data&lt;/div&gt;&lt;div&gt;repeated apollo.common.TrajectoryPoint trajectory_point = 12;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// path point without speed info&lt;/div&gt;&lt;div&gt;repeated apollo.common.PathPoint path_point = 13;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional apollo.planning.DecisionResult decision = 14;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;/&lt;/span&gt;/决策结果&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional LatencyStats latency_stats = 15;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// the routing used for current planning result&lt;/div&gt;&lt;div&gt;optional apollo.common.Header routing_header = 16;&lt;/div&gt;&lt;div&gt;enum RightOfWayStatus {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNPROTECTED = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; PROTECTED = 1;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;optional RightOfWayStatus right_of_way_status = 17;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// lane id along current reference line&lt;/div&gt;&lt;div&gt;repeated apollo.hdmap.Id lane_id = 18;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// set the engage advice for based on current planning result.&lt;/div&gt;&lt;div&gt;optional apollo.common.EngageAdvice engage_advice = 19;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// the region where planning cares most&lt;/div&gt;&lt;div&gt;message CriticalRegion {&lt;/div&gt;&lt;div&gt;&amp;nbsp; repeated apollo.common.Polygon region = 1;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;// critical region will be empty when planning is NOT sure which region is&lt;/div&gt;&lt;div&gt;// critical&lt;/div&gt;&lt;div&gt;// critical regions may or may not overlap&lt;/div&gt;&lt;div&gt;optional CriticalRegion critical_region = 20;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;enum TrajectoryType {&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; NORMAL = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; PATH_FALLBACK = 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; SPEED_FALLBACK = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; PATH_REUSED = 4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; OPEN_SPACE = 5;&lt;/div&gt;&lt;div&gt;&amp;nbsp; EDGE_FOLLOW = 6;&lt;/div&gt;&lt;div&gt;&amp;nbsp; RELATIVE_CONTROL = 7;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;optional TrajectoryType trajectory_type = 21 [default = UNKNOWN];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string replan_reason = 22;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// lane id along target reference line&lt;/div&gt;&lt;div&gt;repeated apollo.hdmap.Id target_lane_id = 23;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// complete dead end flag&lt;/div&gt;&lt;div&gt;optional bool car_in_dead_end = 24;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// vehicle location pose&lt;/div&gt;&lt;div&gt;optional LocationPose location_pose = 25;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车当前位置&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// in RELATIVE_CONTROL trajectory type, if trajectory is collisioned with obstable&lt;/div&gt;&lt;div&gt;optional bool is_collision = 26 [default = false];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// output related to RSS&lt;/div&gt;&lt;div&gt;optional RSSInfo rss_info = 100;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-11" vertex="1">
          <mxGeometry y="48" width="940" height="1142" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-13" value="LocationPose proto&lt;div&gt;描述定位位置的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4279" y="-3332.9999999999995" width="630" height="170" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-14" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional Point vehice_location = 1;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;自车位置点坐标，世界坐标系&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 0, 0);&quot;&gt;todo：确定frame中参考线的排列顺序才能知道第一条参考线是哪条，获取边界点所用的匹配点是在该参考线上获取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;optional Point left_lane_boundary_point = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车当前位置所在车道的左边界点，世界坐标系&lt;/div&gt;&lt;div&gt;optional Point right_lane_boundary_point = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;自车当前位置所在车道的右边界点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，世界坐标系&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-13" vertex="1">
          <mxGeometry y="52" width="630" height="118" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-17" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-11" target="Mbn3GXxxLZrsqn51Jwln-13" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4054" y="-3641" as="sourcePoint" />
            <mxPoint x="-3744" y="-3781" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-18" value="DecisionResult proto&lt;div&gt;描述规划决策结果的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=43;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4284" y="-4141" width="680" height="130" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-19" value="&lt;div&gt;optional MainDecision main_decision = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;主决策，描述车辆的主要驾驶行为决策&lt;/div&gt;&lt;div&gt;optional ObjectDecisions object_decision = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;描述自车对障碍物的决策&lt;/div&gt;&lt;div&gt;optional apollo.common.VehicleSignal vehicle_signal = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;描述车辆需要发出的信号&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-18" vertex="1">
          <mxGeometry y="43" width="680" height="87" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-15" value="Point&lt;div&gt;描述二维平面点坐标的字段，xy坐标系&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4111.5" y="-3081" width="295" height="110" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-16" value="&lt;div&gt;optional double x = 1;&lt;/div&gt;&lt;div&gt;optional double y = 2;&amp;nbsp;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-15" vertex="1">
          <mxGeometry y="52" width="295" height="58" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-20" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-13" target="Mbn3GXxxLZrsqn51Jwln-15" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4284" y="-2931" as="sourcePoint" />
            <mxPoint x="-3974" y="-3071" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-21" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-11" target="Mbn3GXxxLZrsqn51Jwln-18" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4184" y="-3561" as="sourcePoint" />
            <mxPoint x="-3874" y="-3701" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-22" value="MainDecision proto&lt;div&gt;主决策字段，描述自车的主要驾驶行为的决策&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4058" y="-4641" width="570" height="270" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-23" value="&lt;div&gt;//以下属性描述了主决策有哪些&lt;/div&gt;&lt;div&gt;oneof task {&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainCruise cruise = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;巡航&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainStop stop = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;停车&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainEmergencyStop estop = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;紧急停车&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainChangeLane change_lane = 4 [deprecated = true];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;变道，已弃用&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainMissionComplete mission_complete = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务完成&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainNotReady not_ready = 7;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;系统未就绪&lt;/div&gt;&lt;div&gt;&amp;nbsp; MainParking parking = 8;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;泊车&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;关键字deprecated表示已弃用，生成头文件时会有特殊标识，并且编译会有警告，提醒用户不要使用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated TargetLane target_lane = 5 [deprecated = true];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;已弃用&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="Mbn3GXxxLZrsqn51Jwln-22" vertex="1">
          <mxGeometry y="40" width="570" height="230" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-24" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-18" target="Mbn3GXxxLZrsqn51Jwln-22" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-3724" y="-4231" as="sourcePoint" />
            <mxPoint x="-3414" y="-4371" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-25" value="PlanningBase&lt;div&gt;规划模式基类，业务逻辑层，实现具体的规划任务&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4135" y="-950" width="1190" height="782" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-26" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;- injector_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射器&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- config_：PlanningConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;规划组件详细配置&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- hdmap_ = nullptr：const hdmap::HDMap*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;高精地图对象，提供高精地图的查询检索功能&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- planner_：std::shared_ptr&amp;lt;Planner&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器，实现具体规划算法&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- traffic_decider_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TrafficDecider&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;交通规则决策器&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- start_time_ = 0.0：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;上电时刻，规划模块启动的时刻&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;- seq_num_ = 0：size_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;运行序列号，RunOnce函数每运行一次加一&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-25" vertex="1">
          <mxGeometry y="40" width="1190" height="280" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-28" value="-local_view_：LocalView&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划模块上游输入数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-25" vertex="1">
          <mxGeometry y="320" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-29" value="-frame_：std::unique_ptr&amp;lt;Frame&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前帧计算中间量，当前帧运行的所有数据信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-25" vertex="1">
          <mxGeometry y="346" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-33" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Mbn3GXxxLZrsqn51Jwln-25" vertex="1">
          <mxGeometry y="372" width="1190" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-34" value="+ explicit PlanningBase(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;div&gt;基类构造函数，列表初始化成员injector_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ virtual Init(const PlanningConfig&amp;amp; config)：apollo::common::Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，规划组件详细配置&lt;/div&gt;&lt;div&gt;基类初始化函数&lt;/div&gt;&lt;div&gt;·.初始化依赖注射器injector_中的规划上下文成员planning_context_，调用其Init函数&lt;/div&gt;&lt;div&gt;·.将输入的配置赋值给成员config_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ virtual Name() const = 0：std::string&lt;/div&gt;&lt;div&gt;规划模式名称查询函数，返回派生类对应的规划模式名称。纯虚函数，必须要在子类中重写&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ virtual RunOnce(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const LocalView&amp;amp; local_view,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，本地视图，规划运行所需的全部输入&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ADCTrajectory* const adc_trajectory) = 0：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，规划轨迹消息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;规划运行函数，周期性运行。纯虚函数，必须在子类中重写&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# LoadPlanner()：void&lt;/div&gt;&lt;div&gt;规划器加载函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;规划器&lt;/span&gt;默认使用PublicRoadPlanner，如果规划组件配置config_中有指定规划器类型，使用指定规划器(目前没有)&lt;/span&gt;，实例化规划器对象，指针存储在成员planner_中。&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;使用cyberRT中提供的插件管理器plugin_manager中的单例创建函数进行实例化，单例创建函数的入参仅需要类的完整命名空间(比如apollo::planning::PublicRoadPlanner)，调用对应类的无参构造函数完成实例化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-25" vertex="1">
          <mxGeometry y="380" width="1190" height="402" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-38" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Uj3NwQmBANH0tiODKRmM-1" target="Mbn3GXxxLZrsqn51Jwln-4" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-5384" y="-1323.5" as="sourcePoint" />
            <mxPoint x="-5074" y="-1463.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-39" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Uj3NwQmBANH0tiODKRmM-1" target="Mbn3GXxxLZrsqn51Jwln-25" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4084" y="-943.5" as="sourcePoint" />
            <mxPoint x="-3774" y="-1083.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-40" value="OnLanePlanning：public PlanningBase&lt;div&gt;车道级规划，依赖高精地图，规划能力强&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=55;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2370" y="-11" width="1180" height="1314" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-43" value="- reference_line_provider_：std::unique_ptr&amp;lt;ReferenceLineProvider&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线提供者，用于提供和管理参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="55" width="1180" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-44" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="81" width="1180" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-45" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+explicit OnLanePlanning(const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;派生类构造函数，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用基类构造函数初始化成员injecotor_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Init(const PlanningConfig&amp;amp; config) override：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;common::Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，规划组件详细配置&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;子类初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.调用基类初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;清空injector_中的历史对象history_和规划上下文planning_context_的内容，调用对应的Clear函数完成&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;通过高精地图工具类HDMapUtil将基础地图base map加载到规划组件内，地图指针存储在成员hdmap_中&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.从规划组件配置config_中读取参考线配置，实例化参考线提供者类ReferenceLineProvider存储在成员reference_line_provider_&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.调用&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;reference_line_provider_的启动函数Start，启动参考线生成的后台线程&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.加载规划器，调用基类中的加载函数LoadPlanner完成规划器的加载&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.完成对交规决策器的初始化，调用其Init函数&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.记录规划初始化时刻，存储在成员start_time_中&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;·.完成对规划器planner_的初始化，调用器Init函数&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="89" width="1180" height="509" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-47" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;RunOnce&lt;/span&gt;(const LocalView&amp;amp; local_view,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划模块上游输入数据&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; ADCTrajectory&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ptr_trajectory_pb&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;override：&lt;/span&gt;bool&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储规划模块的输出数据&lt;/div&gt;&lt;div&gt;单帧规划运行主函数，规划算法运行主函数&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;local_view初始化成员local_view_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;包括以下几个主要部分&lt;/div&gt;&lt;div&gt;1. 更新或构造成员参考线构造器reference_line_provider_，&lt;/div&gt;&lt;div&gt;若参考线构造器成员为空调用ReferenceLineProvider类构造函数进行构造，若非空进行更新，调用&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;ResetReferenceProvider&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断条件通过成员flag_reference_line_，表示reference_line_provider_在内存中是否已经构造(启动)，在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构造&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_时调用其成员函数Start，更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;flag_reference_line_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;1.更新车辆状态，使用上游输入数据local_view_更新成员injector_中的车辆状态vehicle_state_，调用&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state_中的更新函数Update&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. 由上一步更新的自车状态更新成员参考线构造器&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中的自车状态成员vehicle_state_，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;UpdateVehicleState&lt;/div&gt;&lt;div&gt;2. 由输入local_view中的路由信息更新&lt;span style=&quot;background-color: initial;&quot;&gt;成员参考线构造器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中的路由成员routing_，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员函数&lt;/span&gt;UpdateRoutingResponse&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.轨迹拼接，通过TrajectoryStitcher类提供的静态函数ComputeStitchingTrajectory得到拼接轨迹stitching_trajectory，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.更新车身姿态，计算自车bbox，通过前两个步骤得到的&lt;span style=&quot;background-color: initial;&quot;&gt;车辆状态和拼接轨迹，更新成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector_中的车身姿态ego_info_，调用ego_info_中的更新函数Update&lt;/span&gt;&lt;/div&gt;&lt;div&gt;4.初始化整体框架，调用成员函数InitFrame构造并初始化成员frame_&lt;/div&gt;&lt;div&gt;5.对每条参考线进行交规检查，通过TrafficDecider类完成该项任务，由于上一步已经对成员frame_完成初始化，故参考线也已初始化，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;6. 对每条参考线上的障碍物赋历史决策信息，调用&lt;span style=&quot;background-color: initial;&quot;&gt;ObstacleProcessor类的静态函数&lt;/span&gt;classifyObstByHistory&lt;/div&gt;&lt;div&gt;7.对每条参考线进行障碍物筛选，通过ObstaclesFilter类完成该项任务&lt;/div&gt;&lt;div&gt;8.规划算法执行&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;及输出结果填充&lt;/span&gt;，调用成员函数Plan完成该项任务&lt;/div&gt;&lt;div&gt;9. 调用&lt;span style=&quot;background-color: initial;&quot;&gt;成员injector_中的历史帧记录器frame_history_的Add函数，将成员当前帧计算中间量frame_推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame_history_，推入时读取frame_的成员运行序列号sequence_num_，表示该历史帧数据是第几帧运行的结果&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="598" width="1180" height="328" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-48" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Plan&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;const double current_time_stamp,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前时间戳&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;TrajectoryPoint&amp;gt;&amp;amp; stitching_trajectory,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//前后帧的拼接轨迹&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; ADCTrajectory* const trajectory) override：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划输出轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划算法执行及输出结果填充函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员planner_的规划算法执行函数Plan&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将决策、规划结果填入输出pb&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;trajectory中&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="926" width="1180" height="190" as="geometry" />
        </mxCell>
        <mxCell id="Mbn3GXxxLZrsqn51Jwln-49" value="-InitFrame(const TrajectoryPoint&amp;amp; planning_start_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const VehicleState&amp;amp; vehicle_state,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员frame_初始化函数，&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造并初始化成员frame_，保存一帧规划的全部数据信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. 更新成员算法序列号seq_num_+1，表示这是规划算法的第几帧运行&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. 调用Frame类构造函数，构造成员frame_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. 更新地图时间及accs状态，调用成员reference_line_provider_的状态更新函数UpdateState，将上游数据local_view_的地图时间及accs状态写入&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. 获取参考线、对应的导航路段，用于frame_的初始化，调用成员reference_line_provider_的参考线获取函数GetReferenceLines&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5.&amp;nbsp;根据自车状态信息、reference_line，segments等信息，初始化frame信息，&lt;span style=&quot;background-color: initial;&quot;&gt;即初始化当前帧算法运行依赖的所有外部信息，调用成员frame_的初始化函数Init&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Mbn3GXxxLZrsqn51Jwln-40" vertex="1">
          <mxGeometry y="1116" width="1180" height="198" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-1" value="PlanningStatus proto&lt;div&gt;描述规划状态信息的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="23930" y="-5350" width="490" height="340" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-2" value="&lt;div&gt;optional ChangeLaneStatus change_lane = 2;&lt;/div&gt;&lt;div&gt;optional CreepDeciderStatus creep_decider = 3;&lt;/div&gt;&lt;div&gt;optional CrosswalkStatus crosswalk = 4;&lt;/div&gt;&lt;div&gt;optional DestinationStatus destination = 5;&lt;/div&gt;&lt;div&gt;optional EmergencyStopStatus emergency_stop = 6;&lt;/div&gt;&lt;div&gt;optional OpenSpaceStatus open_space = 7;&lt;/div&gt;&lt;div&gt;optional ParkAndGoStatus park_and_go = 8;&lt;/div&gt;&lt;div&gt;optional PathDeciderStatus path_decider = 9;&lt;/div&gt;&lt;div&gt;optional PullOverStatus pull_over = 10;&lt;/div&gt;&lt;div&gt;optional ReroutingStatus rerouting = 11;&lt;/div&gt;&lt;div&gt;optional ScenarioStatus scenario = 12;&lt;/div&gt;&lt;div&gt;optional SpeedDeciderStatus speed_decider = 13;&lt;/div&gt;&lt;div&gt;optional StopSignStatus stop_sign = 14;&lt;/div&gt;&lt;div&gt;optional TrafficLightStatus traffic_light = 15;&lt;/div&gt;&lt;div&gt;optional YieldSignStatus yield_sign = 16;&lt;/div&gt;&lt;div&gt;optional LaneFollowStatus lane_follow = 17;&lt;/div&gt;&lt;div&gt;optional LaneBorrowStatus lane_borrow = 18;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="-yjI__lX1PkPjzMiQW5N-1" vertex="1">
          <mxGeometry y="50" width="490" height="290" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-3" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="vqDntXXrTw_gSQUieXNy-1" target="3tiY78gPMrKfr5yvbISs-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="22240" y="-4230" as="sourcePoint" />
            <mxPoint x="22550" y="-4370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-4" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="3tiY78gPMrKfr5yvbISs-1" target="-yjI__lX1PkPjzMiQW5N-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="23800" y="-4940" as="sourcePoint" />
            <mxPoint x="24110" y="-5080" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-5" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="vqDntXXrTw_gSQUieXNy-1" target="sZENc7oY4UMACG6XxRMV-8" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="23510" y="-2318" as="sourcePoint" />
            <mxPoint x="24495" y="-3470" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-6" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="sZENc7oY4UMACG6XxRMV-1" target="sZENc7oY4UMACG6XxRMV-8" edge="1">
          <mxGeometry x="-0.1111" y="5" width="160" relative="1" as="geometry">
            <mxPoint x="23390" y="-3840" as="sourcePoint" />
            <mxPoint x="23650" y="-4050" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-7" value="History&lt;div&gt;存储最关心的历史数据，用于中期历史数据管理，存5帧&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="24730" y="-4085.5" width="900" height="470" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-8" value="- history_frames_：std::list&amp;lt;HistoryFrame&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储&lt;/span&gt;帧历史数据中最关心的数据&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;/span&gt;&lt;div&gt;-&amp;nbsp;history_status_：HistoryStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储和管理当前障碍物的状态，不通过Add成员函数更新，而是在每帧计算stbound时通过SetObjectStatus函数更新&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-7" vertex="1">
          <mxGeometry y="60" width="900" height="44" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-7" vertex="1">
          <mxGeometry y="104" width="900" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-10" value="&lt;div&gt;+&amp;nbsp;History() = default;&lt;/div&gt;&lt;div&gt;使用默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ GetLastFrame() const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const HistoryFrame*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;获取链表history_frames_中最新的历史数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+Add(const ADCTrajectory&amp;amp; adc_trajectory_pb)：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前帧规划组件已经发布的规划轨迹&lt;div&gt;历史数据添加函数，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;目前最关心的历史数据只有规划轨迹，后续可以根据需要在函数入参处添加其他关心的数据&lt;/span&gt;&lt;div&gt;若障碍物历史决策记录器成员history_frames_存储的元素个数大于能力上限(FLAGS标定值，5)，将&lt;span style=&quot;background-color: initial;&quot;&gt;history_frames_的首元素弹出&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;实例化HistoryFrame类对象，调用其初始化函数Init，将输入的规划轨迹写入，并将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;推入障碍物历史决策记录器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frames_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;div&gt;+ Clear()：void&lt;/div&gt;&lt;div&gt;清空函数，清空容器&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;history_frames_中的历史数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ Size() const：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;size_t&lt;/span&gt;&lt;/div&gt;&lt;div&gt;返回容器&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;history_frames_的大小&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;mutable_history_status()：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;HistoryStatus*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;操作函数，返回成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;history_status_的指针&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-7" vertex="1">
          <mxGeometry y="112" width="900" height="358" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-15" value="&lt;div&gt;HistoryFrame&lt;/div&gt;&lt;div&gt;管理单个历史帧中用户最关心的数据&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25780" y="-4355" width="760" height="400" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-16" value="&lt;div&gt;- seq_num_：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;这一帧数据对应的序列号&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- adc_trajactory_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ADCTrajectory&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;这一帧规划组件发出的规划轨迹&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- object_decisions_map_：std::unordered_map&amp;lt;std::string, HistoryObjectDecision&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- object_decisions_：std::vector&amp;lt;HistoryObjectDecision&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-15" vertex="1">
          <mxGeometry y="60" width="760" height="140" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-15" vertex="1">
          <mxGeometry y="200" width="760" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-18" value="+&amp;nbsp;HistoryFrame() = default;&lt;div&gt;默认构造&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;Init(const ADCTrajectory&amp;amp; adc_trajactory)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，这一帧填充好的规划轨迹&lt;/div&gt;&lt;div&gt;初始化函数&lt;/div&gt;&lt;div&gt;用输入的规划轨迹为全部成员赋值&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-15" vertex="1">
          <mxGeometry y="208" width="760" height="192" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-19" value="&lt;div&gt;HistoryStatus&lt;/div&gt;&lt;div&gt;管理当前障碍物的状态信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="25790" y="-3825.5" width="660" height="270" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-20" value="- object_id_to_status_：std::unordered_map&amp;lt;std::string, ObjectStatus&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物id与障碍物状态之间的映射表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-19" vertex="1">
          <mxGeometry y="50" width="660" height="40" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-21" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-19" vertex="1">
          <mxGeometry y="90" width="660" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-22" value="&lt;div&gt;+ HistoryStatus() = default;&lt;/div&gt;&lt;div&gt;默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ SetObjectStatus(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string&amp;amp; id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，待添加的障碍物id&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ObjectStatus&amp;amp; object_status)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，待添加的障碍物状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;障碍物状态添加函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ GetObjectStatus(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string&amp;amp; id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，待查询的障碍物id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ObjectStatus* const object_status)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，待查询的障碍物状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;障碍物状态查询函数&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-19" vertex="1">
          <mxGeometry y="98" width="660" height="172" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-23" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-7" target="-yjI__lX1PkPjzMiQW5N-19" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="25870" y="-3865.5" as="sourcePoint" />
            <mxPoint x="26180" y="-4005.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-24" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-7" target="-yjI__lX1PkPjzMiQW5N-15" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="25920" y="-3855.5" as="sourcePoint" />
            <mxPoint x="26270" y="-4025.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-25" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="vqDntXXrTw_gSQUieXNy-1" target="-yjI__lX1PkPjzMiQW5N-7" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="24300" y="-3200" as="sourcePoint" />
            <mxPoint x="24610" y="-3340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-45" value="Planner&lt;div&gt;规划器基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2600" y="-1520" width="930" height="470" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-46" value="#config_：PlanningConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;规划模块&lt;/span&gt;配置&lt;span style=&quot;white-space: pre;&quot;&gt;参数集，包含规划器的类型和默认执行的task&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="40" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-47" value="#scenario_manager_：ScenarioManager&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;场景管理器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="66" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-48" value="#scenario_ = nullptr：Scenario*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前场景" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="92" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-49" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="118" width="930" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-1" value="+ 未显式的定义构造函数，使用默认构造函数，无参" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="126" width="930" height="234" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-51" value="+virtual Init(const PlanningConfig&amp;amp; config) = 0：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器初始化函数，纯虚函数，在子类PublicRoadPlanner中被重写" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="360" width="930" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-52" value="+virtual Plan(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_init_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;ADCTrajectory* ptr_computed_trajectory) = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器&lt;/span&gt;规划算法执行&lt;span style=&quot;white-space: pre;&quot;&gt;函数，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;纯虚函数，在子类PublicRoadPlanner中被重写&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-45" vertex="1">
          <mxGeometry y="386" width="930" height="84" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-53" value="PlannerWithReferenceLine" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1460" y="-1297.5" width="730" height="130" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-54" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-53" vertex="1">
          <mxGeometry y="26" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-55" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-53" vertex="1">
          <mxGeometry y="52" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-56" value="+explicit PlannerWithReferenceLine(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Planner(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用基类Planner的构造函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-53" vertex="1">
          <mxGeometry y="60" width="730" height="70" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-57" value="PublicRoadPlanner" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-604" y="-1422.5" width="880" height="380" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-58" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-57" vertex="1">
          <mxGeometry y="26" width="880" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-59" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-57" vertex="1">
          <mxGeometry y="52" width="880" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-60" value="+explicit PublicRoadPlanner(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: PlannerWithReferenceLine(injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用基类PlannerWithReferenceLine的构造函数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-57" vertex="1">
          <mxGeometry y="60" width="880" height="60" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-61" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Init&lt;/span&gt;(const PlanningConfig&amp;amp; config) override：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;使用输入config初始化成员config_&lt;/div&gt;&lt;div&gt;调用成员scenario_manager_的初始化成员函数Init，函数入参为输入config，完成场景注册和默认场景的实例化&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-57" vertex="1">
          <mxGeometry y="120" width="880" height="90" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-62" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Plan&lt;/span&gt;(const TrajectoryPoint&amp;amp; planning_init_point,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;Frame* frame,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;ADCTrajectory* ptr_computed_trajectory) override：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;规划器规划算法执行函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.更新场景状态机，调用成员scenario_manager_成员函数Update，识别场景，并实例化对应场景类对象&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.用实例化的场景类对象初始化成员场前场景scenario_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.调用成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;scenario_的成员函数Process，执行当前场景内的规划算法&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-57" vertex="1">
          <mxGeometry y="210" width="880" height="170" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-64" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-45" target="-yjI__lX1PkPjzMiQW5N-53" edge="1">
          <mxGeometry x="-0.084" width="160" relative="1" as="geometry">
            <mxPoint x="-1524" y="-1394.5" as="sourcePoint" />
            <mxPoint x="-1264" y="-1604.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-65" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-53" target="-yjI__lX1PkPjzMiQW5N-57" edge="1">
          <mxGeometry x="-0.0582" width="160" relative="1" as="geometry">
            <mxPoint x="-674" y="-1444.5" as="sourcePoint" />
            <mxPoint x="-414" y="-1654.5" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-66" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-25" target="LWFpOxd7QR8SVaHnObAa-90" edge="1">
          <mxGeometry x="0.2121" y="-35" width="160" relative="1" as="geometry">
            <mxPoint x="-2664" y="-491" as="sourcePoint" />
            <mxPoint x="-2404" y="-701" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-67" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-25" target="Mbn3GXxxLZrsqn51Jwln-40" edge="1">
          <mxGeometry x="-0.0485" y="-96" width="160" relative="1" as="geometry">
            <mxPoint x="-2664" y="-451" as="sourcePoint" />
            <mxPoint x="-2404" y="-661" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-68" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-25" target="-yjI__lX1PkPjzMiQW5N-45" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-2614" y="-891" as="sourcePoint" />
            <mxPoint x="-2304" y="-1031" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-69" value="ReferenceLineProvider&lt;div&gt;参考线提供者类，用于管理和生成参考线&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=49;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-874" y="160" width="1830" height="2300" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-70" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- vehicle_state_provider_ = nullptr：const common::VehicleStateProvider*&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;车辆状态提供者，用于管理自车状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- smoother_：std::unique_ptr&amp;lt;ReferenceLineSmoother&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线平滑器&lt;/div&gt;&lt;div&gt;- smoother_config_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ReferenceLineSmootherConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;平滑器配置参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- relative_map_ = nullptr：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;relative_map::MapMsg&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对地图，只有在navi规划模式下起作用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//当前使用的pnc地图作为多线程共享数据(主线程在调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;UpdatePlanningCommand时写入，后台线程在调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;CreateRouteSegments时读取用于生成参考线对应的路由段信息&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;)，需要互斥锁进行数据保护&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- pnc_map_mutex_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::mutex&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//ReferenceLineProvider中会存储所有支持的pnc地图，根据规划组件接收到的运动规划命令PlanningCommand中的命令类型的不同，选用对应的pnc地图来生成参考线&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- pnc_map_list_：std::vector&amp;lt;std::shared_ptr&amp;lt;planning::PncMapBase&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储pnc地图的容器，apollo参考线配置字段ReferenceLineConfig中只填写了LaneFollowMap一种pnc地图，用户可根据自己需要添加，此处容器内也只保存这一类pnc地图&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- current_pnc_map_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::shared_ptr&amp;lt;planning::PncMapBase&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前使用的pnc地图&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;//参考线及其对应的路由段信息成员作为多线程共享数据(后台线程在调用成员函数CreateReferenceLine时写入，主线程调用成员函数GetReferenceLines读取)，需要互斥锁进行数据保护&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- reference_lines_mutex_：std::mutex&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- reference_lines_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::list&amp;lt;ReferenceLine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储生成好的参考线，该成员用作数据保存为参考线拼接提供历史数据，解释多条todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- route_segments_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储这些参考线对应的路由段，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;该成员用作数据保存为参考线拼接提供历史数据&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- vehicle_state_mutex_：std::mutex&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;成员vehicle_state_是多线程共享数据(主线程在成员函数UpdateVehicleState写入，后台线程在调用成员函数CreateReferenceLine时读取)，需要互斥锁进行数据保护&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;- vehicle_state_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;common::VehicleState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;车辆状态，来源于定位和定盘的底层数据&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;//成员palnning_command_作为多线程共享数据&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(主线程在调用成员函数UpdatePlanningCommand时写入，后台线程在调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;CreateReferenceLine时拷贝读取&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;)，需要互斥锁进行数据保护&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- routing_mutex_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::mutex&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//存储LocalView中的运动规划命令(主要是路由命令)，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;由于PlanningCommand需要在后台线程中用于输出debug信息，而后台线程调用的函数不可以作为public成员直接读取主线程中的运动规划命令，这里为了搭建起PlanningCommand从主线程到后台线程流动的桥梁，需要创建一个类内成员用于历史存储主线程的数据。此时又会引入planning_command_作为共享数据读写不分离的问题，故引入互斥锁进行管理&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- planning_command_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;planning::PlanningCommand&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- last_calculation_time_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储参考线生成线程中&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;最新一次生成和更新参考线的耗时&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- task_future_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::future&amp;lt;void&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储参考线生成的后台线程的线程句柄，用于标识、管理线程和获取线程状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;is_initialized_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线提供者是否完成初始化&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//使用原子操作类型的目的&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;//在主线程中的写操作和后台线程中的读操作在机器指令层面都是原子的，即都不会被中断，这样保证了线程之间的数据安全，其作用与互斥锁mutex类型一样，但是运行开销要更小，但是比普通变量大，适合用于标志位、计数器这种简单的数据&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;//比如在写入true的操作中，先将true加载道寄存器，然后将寄存值存储到内存，如果在这两步中间出现线程切换，可能导致数据丢失，使得true无法写入，后台线程就会无法停止，原子操作就是保证这两步必须都完成才能进行另一个线程的读操作&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- is_stop_{false}：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::atomic&amp;lt;bool&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线生成线程停止标志位，后台线程GenerateThread会一直监控该值，一旦置位便会退出，用于主线程对后台线程的停止操作&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- is_new_command_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;传到参考线提供者中的运动规划命令是否是新的，比如变道失败需要重新路由的情况。对于新的PlanningCommand，参考线生成的策略有所不同&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;- has_planning_command_ = false：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;pnc地图存储器pnc_map_list_中是否有与运动规划命令planning_command_中命令类型对应的pnc地图&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-69" vertex="1">
          <mxGeometry y="49" width="1830" height="831" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-71" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-69" vertex="1">
          <mxGeometry y="880" width="1830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-72" value="&lt;div&gt;+ ReferenceLineProvider(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const common::VehicleStateProvider* vehicle_state_provider,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，车辆状态提供者，指针来自于依赖注射器DependencyInjector&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const ReferenceLineConfig* reference_line_config,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，参考线配置&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;relative_map::MapMsg&amp;gt;&amp;amp; relative_map = nullptr);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，相对地图消息，只在navi规划模式下有效，对于OnLanePlanning这里使用默认参数&lt;/div&gt;&lt;div&gt;构造函数&lt;/div&gt;&lt;div&gt;·.初始化成员vehicle_state_provider_，用输入初始化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在navi规划模式下，输入的相对地图消息存储在成员relative_map_中&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从gflags变量读取平滑器配置文件路径，读取配置参数写入成员smoother_config_，根据配置参数中平滑器的类型实例化对应的平滑器对象，指针存储在成员smoother_中，配置参数中规定的平滑器类型为DiscretePointsReferenceLineSmoother&lt;/div&gt;&lt;div&gt;·.初始化pnc地图容器pnc_map_list_，如果输入的参考线配置中没有规定使用哪种pnc地图，默认只使用LaneFollowMap，将实例化后的对象存入容器；如果参考线配置中规定了使用哪些pnc地图，将这些pnc地图的类全部实例化之后依次存入容器。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;在参考线配置中目前也只设置了&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LaneFollowMap一种pnc地图，并且工程文件中并未设计另外两种pnc地图，apollo只留出了框架，当需要对PlanningCommand中用户自定义的运动控制命令类型有对应的pnc地图时，这个容器就可以提取到对应的pnc地图&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;，使用cyberRT中提供的插件管理器plugin_manager中的单例创建函数进行实例化，单例创建函数的入参仅需要类的完整命名空间(比如apollo::planning::LaneFollowMap)，调用对应类的无参构造函数完成实例化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;is_initialized_置位，完成对参考线提供者的初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ UpdateVehicleState(const common::VehicleState&amp;amp; vehicle_state)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，依赖注射器中更新好的车辆状态&lt;/div&gt;&lt;div&gt;车辆状态更新函数，主线程规划任务中的RunOnce函数调用&lt;/div&gt;&lt;div&gt;·.将输入写入成员vehicle_state_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ Start()：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回值，true表示线程启动成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;启动参考线生成的后台线程，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;主线程规划任务中的Init函数调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;navi规划模式不需要启动参考线生成的后台线程，直接返回true&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果is_initialized_没有置位，表示当前ReferenceLineProvider类对象没有被初始化，不能启动线程，返回false&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;使用cyberRT提供的异步任务方法函数(实际上是对std::async的封装)，在后台线程中运行成员函数GenerateThread，并用成员task_future_存储线程句柄，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;不必等到&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenerateThread运行完毕，直接进行函数后面内容的运行。由于成员函数的调用依赖类对象，因此需要在线程构造函数中既要传入成员函数的指针也要传入当前类对象才能成功调用GenerateThread&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;线程启动成功，返回true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ Stop()：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;参考线生成线程停止函数&lt;/div&gt;&lt;div&gt;·.将停止开关is_stop_置位，后台线程&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenerateThread检查到其置位后退出循环&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用线程句柄task_future_的get函数，主线程会在这里阻塞等待后台线程&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenerateThread中最后一个循环运行完成后，再运行后面的程序&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+ UpdatePlanningCommand(const planning::PlanningCommand&amp;amp; command)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前帧规划任务输入的PlanningCommand消息，存储在规划组件中的local_view_中&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;pnc地图更新函数，主线程规划任务每帧进行RunOnce时检查LocalView中是否接收到新的PlanningCommand命令，接收到新命令后需要找到与命令类型匹配的pnc地图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.遍历容器pnc_map_list_中存储的全部可供选择的pnc地图，在每一个pnc地图中运行其成员函数CanProcess，校验输入command中的命令类型是否与当前pnc地图匹配，如果匹配将该pnc地图认为i是当前规划任务使用的pnc地图，存储在成员current_pnc_map_并跳出遍历，并将成员has_planning_command_置位作为已找到当前匹配pnc地图的标志位，如果不匹配说明容器内所用可供选择的pnc地图不识别输入的运动规划命令，返回false&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;判断输入的command是否是新的运动规划命令，通过current_pnc_map_中的IsNewPlanningCommand进行判断&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果是新的，说明此时需要重新路由，请求规划组件按新的路由结果生成参考线，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;将成员is_new_command_置位，用于切换参考线生成策略&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.同时&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在current_pnc_map_中同步更新PlanningCommand&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;，调用其&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;UpdatePlanningCommand实现，若更新失败，打印command的debug信息，并返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果不需要重新路由，不做任何操作&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;无论在参考线提供者类中是否更新PlanningCommand，由于后台线程需要使用运动规划命令，而后台线程中的函数不能作为public函数将LocalView中的PlanningCommand作为入参在主线程中直接调用，设计类内成员planning_command_作为临时存储器连接起主线程与后台线程的数据流动&lt;/span&gt;&lt;/div&gt;&lt;div&gt;由于planning_command_和current_pnc_map_作为多线程共享数据，因此在进行写操作时要加锁&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//以下为后台线程中运行的函数，上面的函数为主线程调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GenerateThread()：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;线程生成函数，后台线程中生成参考线任务的主函数，周期性生成参考线&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;while循环始终监听主线程中is_stop_成员是否置位，置位则跳出循环，停止线程，每一个循环中执行如下操作&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;休眠50ms，也就是参考线生成的运行频率至少是20Hz&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;若has_planning_command_未置位，说明成员函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;UpdatePlanningCommand在主线程中运行失败，表明&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前周期pnc地图更新失败，跳过这一周期的参考线生成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;生成参考线，调用成员函数CreateReferenceLine完成&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;智能更新生成参考线，保证只有在参考线真正发生变化时才更新，避免不必要的拷贝，调用成员函数UpdateReferenceLine完成&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;记录上面两步的运算耗时，用于程序优化，计算结果存储在成员last_calculation_time_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- CreateReferenceLine(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;ReferenceLine&amp;gt;* reference_lines,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储参考线&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt;* segments)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储对应的路由段信息&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回值，都生成成功返回true&lt;br&gt;&lt;/div&gt;&lt;div&gt;参考线生成函数&lt;/div&gt;&lt;div&gt;·.读取planning_command_和vehicle_state_中的内容，因为该函数在后台线程中调用，只希望得到这两个成员在当前时刻的快照，不希望因为主线程中写入新值导致后台线程在使用时前后不一致，因此这里创建局部变量来拷贝这两个成员，注意拷贝读取操作要加锁&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;生成路由段信息，调用成员函数CreateRouteSegments完成，生成好的路由段存储在入参segments中，生成失败返回false&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;若规划模块订阅到重新路由的运动规划命令(成员is_new_command_置位)或者参考线拼接功能开关关闭，进行路由段平滑生成参考线以及进行参考线剪裁&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;遍历路由段信息容器segments中的每一个路由段，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用成员函数SmoothRouteSegment对该路由段进行平滑从而生成该路由段对应的参考线，生成好的参考线存储在入参reference_lines中，如果平滑失败在容器segments中删除对应路由段，参考线容器reference_lines中也不存储这条参考线&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果平滑成功，以这条参考线为s轴获取自车当前位置的sl坐标，调用成员函数Shrink将位于自车后方的参考线进行剪裁&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;参考线生成任务完成将&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;is_new_command_复位。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;若参考线拼接功能开关关闭，则无论规划是否接收到重新路由的命令，都需要周期性的进行参考线平滑和裁减，此时是完全重新计算，计算开销大但结果最优&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.否则当不需要重新路由时，仅需要将上一周期的参考线进行扩展后再拼接即可&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.同样遍历容器segments中的每一路由段，调用成员函数ExtendReferenceLine对每一个路由段上的参考线进行参考线扩展，更新后&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的参考线存储在入参reference_lines中，同样的如果扩展失败&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在容器segments中删除对应路由段，参考线容器reference_lines中也不存储这条参考线；如果成功对下一个路由段进行参考线扩展操作&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- CreateRouteSegments(const common::VehicleState&amp;amp; vehicle_state,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，车辆底层状态&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::list&amp;lt;hdmap::RouteSegments&amp;gt;* segments)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，生成好的路由段信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;路由段信息生成函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.todo&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;SmoothRouteSegment(const hdmap::RouteSegments&amp;amp; segments,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，待生成平滑参考线的路由段&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine* reference_line)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，该路由段中平滑后的参考线&lt;/div&gt;&lt;div&gt;对一条路由段进行参考线平滑&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- Shrink(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::SLPoint&amp;amp; sl,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，以将要剪裁的参考线作为frenet坐标下自车位置的sl坐标&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine* ref,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在平滑后的参考线的内存上对该参考线进行剪裁&lt;/span&gt;后的结果&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::RouteSegments* segments)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;//输出，剪裁后的参考线对应的路由段，路由段也要跟着参考线一起剪裁&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对一条路由段进行剪裁，路由段和参考线都剪裁&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;ExtendReferenceLine(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const common::VehicleState&amp;amp; state,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，车辆的底层状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;hdmap::RouteSegments* segments,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，扩展后的参考线对应的路由段&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLine* reference_line)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，扩展后的参考线&lt;/div&gt;&lt;div&gt;对一条参考线进行扩展，路由段和参考线都扩展，参考线长度不够时起作用&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-69" vertex="1">
          <mxGeometry y="888" width="1830" height="1412" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-73" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="Mbn3GXxxLZrsqn51Jwln-40" target="-yjI__lX1PkPjzMiQW5N-69" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-924" y="19" as="sourcePoint" />
            <mxPoint x="-614" y="-121" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-74" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="vqDntXXrTw_gSQUieXNy-1" target="-2tjBECkQyzoMxF3ZpL_-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="22980" y="-2710" as="sourcePoint" />
            <mxPoint x="23290" y="-2850" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-75" value="ReferenceLineSmootherConfig proto&lt;div&gt;参考线平滑器配置&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1370" y="83" width="890" height="420" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-76" value="&lt;div&gt;// The output resolution for discrete point smoother reference line is&lt;/div&gt;&lt;div&gt;// directly decided by max_constraint_interval&lt;/div&gt;&lt;div&gt;optional double max_constraint_interval = 1 [default = 5];&lt;/div&gt;&lt;div&gt;optional double longitudinal_boundary_bound = 2 [default = 1.0];&lt;/div&gt;&lt;div&gt;optional double max_lateral_boundary_bound = 3 [default = 0.5];&lt;/div&gt;&lt;div&gt;optional double min_lateral_boundary_bound = 4 [default = 0.2];&lt;/div&gt;&lt;div&gt;// The output resolution for qp smoother reference line.&lt;/div&gt;&lt;div&gt;optional uint32 num_of_total_points = 5 [default = 500];&lt;/div&gt;&lt;div&gt;optional double curb_shift = 6 [default = 0.2];&lt;/div&gt;&lt;div&gt;optional double lateral_buffer = 7 [default = 0.2];&lt;/div&gt;&lt;div&gt;// The output resolution for spiral smoother reference line.&lt;/div&gt;&lt;div&gt;optional double resolution = 8 [default = 0.02];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//支持的平滑算法&lt;/div&gt;&lt;div&gt;oneof SmootherConfig {&lt;/div&gt;&lt;div&gt;&amp;nbsp; QpSplineSmootherConfig qp_spline = 20;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//QP样条平滑算法&lt;/div&gt;&lt;div&gt;&amp;nbsp; SpiralSmootherConfig spiral = 21;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//螺旋线平滑算法&lt;/div&gt;&lt;div&gt;&amp;nbsp; DiscretePointsSmootherConfig discrete_points = 22;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//离散点平滑算法，支持两种子算法，&lt;span style=&quot;background-color: transparent;&quot;&gt;CosTheta平滑(基于角度约束)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;、FEM位置偏差平滑(基于有限元方法)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="-yjI__lX1PkPjzMiQW5N-75" vertex="1">
          <mxGeometry y="52" width="890" height="368" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-77" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-69" target="-yjI__lX1PkPjzMiQW5N-75" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="710" y="240" as="sourcePoint" />
            <mxPoint x="1020" y="100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-78" value="ReferenceLineSmoother&lt;div&gt;参考线平滑器基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=59;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1370" y="635" width="940" height="270" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-79" value="+ config_：ReferenceLineSmootherConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线平滑器配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-78" vertex="1">
          <mxGeometry y="59" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-80" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-78" vertex="1">
          <mxGeometry y="85" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-81" value="+&amp;nbsp;explicit ReferenceLineSmoother(const ReferenceLineSmootherConfig&amp;amp; config)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，参考线平滑器配置参数&lt;/span&gt;&lt;div&gt;基类构造函数，列表初始化配置成员config_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-78" vertex="1">
          <mxGeometry y="93" width="940" height="177" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-82" value="DiscretePointsReferenceLineSmoother : public ReferenceLineSmoother&lt;div&gt;离散点参考线平滑器&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2740" y="734" width="860" height="220" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-83" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-82" vertex="1">
          <mxGeometry y="51" width="860" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-84" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-yjI__lX1PkPjzMiQW5N-82" vertex="1">
          <mxGeometry y="77" width="860" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-85" value="&lt;div&gt;explicit DiscretePointsReferenceLineSmoother(&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const ReferenceLineSmootherConfig&amp;amp; config);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，参考线平滑器配置参数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用基类构造函数，初始化配置参数config_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-yjI__lX1PkPjzMiQW5N-82" vertex="1">
          <mxGeometry y="85" width="860" height="135" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-86" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-69" target="-yjI__lX1PkPjzMiQW5N-78" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="480" y="920" as="sourcePoint" />
            <mxPoint x="790" y="780" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-87" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-78" target="-yjI__lX1PkPjzMiQW5N-82" edge="1">
          <mxGeometry x="0.0141" width="160" relative="1" as="geometry">
            <mxPoint x="2130" y="694" as="sourcePoint" />
            <mxPoint x="2390" y="484" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-72" value="CommandStatus proto&lt;div&gt;描述外部指令状态的字段&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;外部指令状态包括两方面，一是外部指令处理状态，是指外部指令在命令处理器中转化成内部命令的处理状态，二是外部指令执行状态，是指内部命令在apollo其他组件中的执行状态。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;以沿车道行驶LaneFollow这一外部指令为例，指令先通过命令处理器的回调函数通过路由模块得到路由响应，并通过内部命令PlanningCommand发布到cyberRT中，第一部分指的是在这一过程中的外部命令处理状态；然后规划组件订阅该内部命令PlanningCommand作为输入开始执行规划任务，第二部分指的是这一过程的内部命令的执行状态&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=119;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="516" y="-13179.5" width="720" height="417" as="geometry" />
        </mxCell>
        <mxCell id="74iOabvwtdqIhZIzJNJk-73" value="&lt;div&gt;帧头&lt;/div&gt;&lt;div&gt;optional apollo.common.Header header = 1;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;外部命令的全局唯一ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional int64 command_id = 2 [default = -1];&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;enum CommandStatusType {&lt;/div&gt;&lt;div&gt;&amp;nbsp; RUNNING = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;命令正在运行没有错误&lt;/div&gt;&lt;div&gt;&amp;nbsp; FINISHED = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;命令运行完成&lt;/div&gt;&lt;div&gt;&amp;nbsp; ERROR = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;命令运行报错&lt;/div&gt;&lt;div&gt;&amp;nbsp; UNKNOWN = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;无法获得命令执行状态&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;required CommandStatusType status = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;命令当前的状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;对于命令状态的一些文字性描述，比如错误原因等&lt;/div&gt;&lt;div&gt;optional string message = 4;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="74iOabvwtdqIhZIzJNJk-72" vertex="1">
          <mxGeometry y="119" width="720" height="298" as="geometry" />
        </mxCell>
        <mxCell id="-yjI__lX1PkPjzMiQW5N-88" value="response" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-64" target="74iOabvwtdqIhZIzJNJk-72" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="2580" y="-12800" as="sourcePoint" />
            <mxPoint x="2990" y="-12910" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-1" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="vqDntXXrTw_gSQUieXNy-1" target="5pu_Kej1jPFEDkICz0Om-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="22780" y="-2800" as="sourcePoint" />
            <mxPoint x="23090" y="-2940" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-2" value="PncMapBase&lt;div&gt;pnc地图基类，相比于HDMap增加了丰富的连接关系，从而可用于规划算法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=56;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1390" y="1696" width="1280" height="770" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-3" value="# last_command_：planning::PlanningCommand&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储pnc地图类中在上一次更新的PlanningCommand，注意不是上一帧，只有在有重新路由命令时pnc地图才会更新PlanningCommand" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="s8LwaFFppgR6DeTEla10-2" vertex="1">
          <mxGeometry y="56" width="1280" height="114" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="s8LwaFFppgR6DeTEla10-2" vertex="1">
          <mxGeometry y="170" width="1280" height="8" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-5" value="+virtual CanProcess(const planning::PlanningCommand &amp;amp;command) const = 0：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，运动规划命令&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示输入的命令类型匹配当前pnc地图&lt;br&gt;&lt;/div&gt;&lt;div&gt;判断输入的运动规划命令是否匹配pnc地图，纯虚函数，必须在子类中重写&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+virtual UpdatePlanningCommand(const planning::PlanningCommand &amp;amp;command)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，判断为新的运动规划命令，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意通过IsNewPlanningCommand判断运动规划命令为新后再调用该函数更新类内的运动规划命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示更新成功&lt;br&gt;&lt;/div&gt;&lt;div&gt;基类运动规划命令更新函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用成员函数IsValid判断输入command是否有效，无效返回false&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;若有效，将输入command存储在last_command_中&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ IsNewPlanningCommand(const planning::PlanningCommand &amp;amp;command) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，这一帧的运动规划命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示当前帧接收到的PlanningCommand发生了变化&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;PlanningCommand更新判断函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.通过工具命名空间提供的方法函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;common::util::IsProtoEqual，将成员last_command_和输入command序列化成二进制后，逐位比较二者是否一致，进行判断&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual IsValid(const planning::PlanningCommand &amp;amp;command) const = 0：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，判断为新的运动规划命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示该命令有效，可以被处理&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;运动规划命令有效性判断函数，纯虚函数，子类中必须重写&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="s8LwaFFppgR6DeTEla10-2" vertex="1">
          <mxGeometry y="178" width="1280" height="592" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-6" value="LaneFollowMap : public PncMapBase&lt;div&gt;沿车道跟车的pnc地图，匹配运动规划命令PlanningCommand中的LaneFollowCommand命令类型，用于监听到重新路由的运动规划命令下的规划算法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=86;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3360" y="1539" width="1300" height="720" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-7" value="- hdmap_ = nullptr：const hdmap::HDMap *&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储高精地图的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="s8LwaFFppgR6DeTEla10-6" vertex="1">
          <mxGeometry y="86" width="1300" height="26" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="s8LwaFFppgR6DeTEla10-6" vertex="1">
          <mxGeometry y="112" width="1300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-9" value="+ LaneFollowMap();&lt;div&gt;构造函数，无参&lt;/div&gt;&lt;div&gt;存储高精地图指针到成员hdmap_，调用高精地图接口类的基础地图获取函数hdmap::HDMapUtil::BaseMapPtr完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+virtual CanProcess(const planning::PlanningCommand &amp;amp;command) const override：bool&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，运动规划命令&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&#x9;&lt;/span&gt;//返回，true表示输入的命令类型匹配当前pnc地图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;判断输入的运动规划命令是否匹配沿车道跟车的pnc地图&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+UpdatePlanningCommand(const planning::PlanningCommand &amp;amp;command) override：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，判断为新的运动规划命令，注意通过IsNewPlanningCommand判断运动规划命令为新后再调用该函数更新类内的运动规划命令&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//返回，true表示更新成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;判断&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入command是否匹配沿车道跟车的pnc地图，调用成员函数CanProcess实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用基类更新函数PncMapBase::UpdatePlanningCommand，更新基类成员&lt;/div&gt;&lt;div&gt;子类中特有的更新逻辑，todo&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;-virtual IsValid(const planning::PlanningCommand &amp;amp;command) const override：bool&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;//输入，判断为新的运动规划命令&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//返回，true表示该命令有效，可以被处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;运动规划命令有效性判断函数&lt;/div&gt;&lt;/div&gt;&lt;div&gt;调用成员函数CanProcess，检查输入的&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;运动规划命令是否匹配沿车道跟车的pnc地图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重点看输入的command中的路由响应结果RoutingResponse中存储的原始路由请求RoutingRequest中的属性是否要素齐全，比如RoutingResponse中是否有原始RoutingRequest，RoutingRequest中的途经点是否至少有两个，每个途经点是否设置了车道id和位置s&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="s8LwaFFppgR6DeTEla10-6" vertex="1">
          <mxGeometry y="120" width="1300" height="600" as="geometry" />
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-11" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="-yjI__lX1PkPjzMiQW5N-69" target="s8LwaFFppgR6DeTEla10-2" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1140" y="1370" as="sourcePoint" />
            <mxPoint x="1490" y="1200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="s8LwaFFppgR6DeTEla10-12" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="s8LwaFFppgR6DeTEla10-2" target="s8LwaFFppgR6DeTEla10-6" edge="1">
          <mxGeometry x="-0.1515" y="50" width="160" relative="1" as="geometry">
            <mxPoint x="2440" y="1200" as="sourcePoint" />
            <mxPoint x="2700" y="990" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-2" value="RoutingResponse proto&lt;div&gt;描述路由响应的字段，是路由组件的输出消息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2820" y="-3300" width="1040" height="340" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-3" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;帧头&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;repeated apollo.routing.RoadSegment road = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;道路段，包含完整的路径规划结果，包含车道段、连接关系、几何信息等，路由结果中有多条道路段，故使用repeated&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional apollo.routing.Measurement measurement = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;测量信息，提供路由线路的长度统计信息&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional RoutingRequest routing_request = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;原始的路由请求，便于调试&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional bytes map_version = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;地图版本&lt;/div&gt;&lt;div&gt;optional apollo.common.StatusPb status = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;状态信息，返回路由处理状态和错误码&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-2" vertex="1">
          <mxGeometry y="52" width="1040" height="288" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-4" value="RoutingRequest proto&lt;div&gt;描述客户端发出的路由请求&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2910" y="-4940" width="1100" height="410" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-5" value="&lt;div&gt;optional apollo.common.Header header = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//帧头&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//路由途经点，至少有两个(起点和终点，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;外部命令LaneFollowCommand转化成RoutingRequest后途经点包含起终点&lt;/span&gt;)，要求路由计算的结果必须经过这些途经点，故使用repeated，&lt;/div&gt;&lt;div&gt;//同样的，路由搜索时，不要求这里的途经点的存储顺序&lt;/div&gt;&lt;div&gt;repeated apollo.routing.LaneWaypoint waypoint = 2;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated apollo.routing.LaneSegment blacklisted_lane = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黑名单车道段，指定规划时要避开的车道段，在施工、事故、拥堵场景会存在，会有多段，故使用repeated&lt;/div&gt;&lt;div&gt;repeated string blacklisted_road = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//黑名单道路，含义和出现场景同上，会有多条，故使用repeated&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional bool broadcast = 5 [default = true];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;广播标志，控制路由请求是否向cyberRT中进行广播，目前未使用，作为未来车队管理或交通协调等功能而预留，默认广播&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;&lt;br&gt;&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;&lt;br&gt;&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;strike&gt;optional apollo.routing.ParkingInfo parking_info = 6 [deprecated = true];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//泊车信息，废弃&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional bool is_start_pose_set = 7 [default = false];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;起始点是否设置，表示上面途经点中是否包含路由起点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-4" vertex="1">
          <mxGeometry y="52" width="1100" height="358" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-6" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="74iOabvwtdqIhZIzJNJk-64" target="74iOabvwtdqIhZIzJNJk-76" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="3030" y="-13000" as="sourcePoint" />
            <mxPoint x="3380" y="-13170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-7" value="WriterHandle&lt;div&gt;发布器句柄类型，用于对某一发布器进行操作&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=58;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2746" y="-12381" width="550" height="118" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-8" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-7" vertex="1">
          <mxGeometry y="58" width="550" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-7" vertex="1">
          <mxGeometry y="84" width="550" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-10" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-7" vertex="1">
          <mxGeometry y="92" width="550" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-11" value="MessageWriter&lt;div&gt;对cyberRT中原生的发布器类型进行了进一步封装，由于外部命令处理器中设计多消息的发布，设计该类型用于对所有发布器进行统一管理，并增加了历史消息管理功能&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=55;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1766" y="-12379.5" width="800" height="115" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-12" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-11" vertex="1">
          <mxGeometry y="55" width="800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-11" vertex="1">
          <mxGeometry y="81" width="800" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-14" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-11" vertex="1">
          <mxGeometry y="89" width="800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-16" value="MessageReader&lt;div&gt;对cyberRT中原生的订阅器类型进行了进一步封装，由于外部命令处理器中设计多消息的订阅，设计该类型用于对所有订阅器进行统一管理，并增加了自动化的消息处理功能&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=70;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1741" y="-12129.5" width="850" height="130" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-17" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-16" vertex="1">
          <mxGeometry y="70" width="850" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-16" vertex="1">
          <mxGeometry y="96" width="850" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-19" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-16" vertex="1">
          <mxGeometry y="104" width="850" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-20" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-11" target="POwssWgP0jl_rXd_H6LF-7" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="2616" y="-12439.5" as="sourcePoint" />
            <mxPoint x="2966" y="-12609.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-21" value="&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;适配外部命令处理组件使用的消息管理封装类&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=429;strokeWidth=4;height=60;" parent="1" vertex="1">
          <mxGeometry x="1711" y="-12471" width="1650" height="510" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-22" value="Routing&lt;div&gt;路由任务计算类，业务逻辑层，负责路径规划和导航&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4060" y="-4270" width="1300" height="820" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-23" value="- monitor_logger_buffer_：common::monitor::MonitorLogBuffer&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;监控日志缓冲区，用于记录和监控模块的运行状态&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- navigator_ptr_：std::unique_ptr&amp;lt;Navigator&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;核心导航算法，实现路径搜索及拓扑图处理的功能&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- hdmap_ = nullptr：const hdmap::HDMap *&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;提供高精地图数据&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-22" vertex="1">
          <mxGeometry y="60" width="1300" height="150" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-24" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-22" vertex="1">
          <mxGeometry y="210" width="1300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-25" value="+ Routing();&lt;div&gt;无参构造函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;构&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;建监控日志缓冲区成员monitor_logger_buffer_，指明日志来源为common::monitor::MonitorMessageItem::ROUTING&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Init()：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;apollo::common::Status&lt;/span&gt;&lt;/div&gt;&lt;div&gt;路由模块初始化函数&lt;/div&gt;&lt;div&gt;·.通过hdmap_util.h的类外函数apollo::hdmap::RoutingMapFile获取路由地图文件的完整路径，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;依靠路由地图文件，创建导航器类Navigator对象，并把指针赋给成员navigatot_ptr_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过高精地图工具类HDMapUtil中的方法函数BaseMapPtr获取高精地图的指针，赋给成员hdmap_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;路由地图同高精地图一样，都是在apollo运行之前提前生成好的文件(路由地图依托于高精地图生成)，之后在运行时车辆都只能在这张地图下进行行驶，即便rerouting时也不会行驶到地图外面，因此地图的读取操作在Init时进行，在Proc中不再重复读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;div&gt;+ Process(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::shared_ptr&amp;lt;routing::RoutingRequest&amp;gt; &amp;amp;routing_request,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，路由请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;routing::RoutingResponse *const routing_response)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，路由响应&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示路由计算成功，通过路由长度是否是有限的来判断&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;路由任务处理函数&lt;/div&gt;&lt;div&gt;·.检查输入的路由请求是否为空，如果为空不进行后面的计算流程，但此时不认为是计算失败，仍然返回true&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;检查输入的路由请求中是否存在途经点缺少车道id的情况，并查找在这些途经点附近半径6m范围内全部可选的车道，构建将这些可选车道进行全排列后的修正的路由请求序列，通过调用成员函数&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FillLaneInfoIfMissing实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;遍历这些可选的路由请求，对每一个修正后的路由请求调用导航器navigator_ptr_中的路由搜索函数&lt;/span&gt;SearchRoute计算路由响应，并且只选择路由长度最小的那个路由响应进行最终输出&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果可以找到这条长度最短的路由响应，向监控日志monitor_logger_buffer_中写入路由成功的字符串，否则写入路由失败的字符串&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;FillLaneInfoIfMissing(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const routing::RoutingRequest &amp;amp;routing_request)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::vector&amp;lt;routing::RoutingRequest&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始路由请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，补充途经点车道id后的全部可能的路由请求序列&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;用于补充缺失的车道信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;如果输入的路由请求中某些途经点中缺少车道id，会在这个路径点附近6m半径范围内查找可能的车道，将所有缺少车道id的途经点附近所有可能的车道进行全排列，返回包含所有组合的可选路由请求序列，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这些可选路由请求的排列没有规则&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.寻找缺失车道id的途经点附近所有可能的备选途经点(备选途经点上都是有车道id的)，存入局部变量备选途经点映射表&lt;/span&gt;additional_lane_waypoint_map，其中key为缺失车道id的途经点的索引号，value为在该处所有备选的途经点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;遍历输入的原始路由请求中的各个途经点，若该途经点有车道id，遍历下一个途经点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果该途经点没有车道id，在该途经点处在半径6m范围内(半径从0.3m开始以0.3m的分辨率进行增长)在地图中找车道，找到车道就停止搜索，可能搜索到多条满足条件的车道，通过高精地图成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;hdmap_中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetLanes函数实现&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.找到&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;到原始途经点在这些车道中心线处的投影点作为备选途经点，使用&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;LaneInfo类中的GetProjection函数计算投影点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，存&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;入&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;局部变量备选途经点映射表&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;additional_lane_waypoint_map&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根据&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;备选途经点映射表，在各个需要替换的途经点索引处对所有的备选途经点进行全排列，所有组合对应了所有可选的路由请求(这里修正后的路由请求中的途经点上的车道id就不会有缺失了)，进行返回&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-22" vertex="1">
          <mxGeometry y="218" width="1300" height="602" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-26" value="input" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-22" target="POwssWgP0jl_rXd_H6LF-4" edge="1">
          <mxGeometry x="0.3517" y="-180" width="160" relative="1" as="geometry">
            <mxPoint x="4019" y="-4409" as="sourcePoint" />
            <mxPoint x="4429" y="-4519" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-27" value="output" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-22" target="POwssWgP0jl_rXd_H6LF-2" edge="1">
          <mxGeometry x="-0.1733" y="110" width="160" relative="1" as="geometry">
            <mxPoint x="4039" y="-4309" as="sourcePoint" />
            <mxPoint x="4449" y="-4419" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-28" value="Navigator&lt;div&gt;导航器类，实现路由的核心导航算法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=58;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5776" y="-4464.25" width="1220" height="1210" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-29" value="&lt;div&gt;//以下成员在构造函数中完成初始化&lt;/div&gt;&lt;div&gt;- is_ready_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;标记导航器类是否构造完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- graph_：std::unique_ptr&amp;lt;TopoGraph&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;拓扑图封装类成员，存储道路网络的拓扑结构，为搜索算法提供图结构&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//这两个类采用了无状态设计模式，即只有函数成员，不保存数据成员，完全通过函数入参实现数据的修改，故其构造函数使用默认构造即可&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//黑名单区间生成器，负责将RoutingRequest中的黑名单车道段和道路或者局部路径搜索时起终点之外的区域转化成拓扑图中的不可用区间，&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;TopoRangeManager负责这些不可用区间的管理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- black_list_generator_：std::unique_ptr&amp;lt;BlackListRangeGenerator&amp;gt;&lt;/div&gt;&lt;div&gt;- result_generator_：std::unique_ptr&amp;lt;ResultGenerator&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路由结果生成器，将搜索到的路径转换为RoutingResponse格式&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- topo_range_manager_：TopoRangeManager&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;管理拓扑图节点上不可用区间的工具类，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;避免在不可用区间进行路径规划，该成员负责管理全局黑名单(即从RoutingRequest中读取的黑名单)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-28" vertex="1">
          <mxGeometry y="58" width="1220" height="232" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-30" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-28" vertex="1">
          <mxGeometry y="290" width="1220" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-31" value="+ explicit Navigator(const std::string&amp;amp; topo_file_path);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，routing_map文件的完整路径&lt;div&gt;构造函数&lt;/div&gt;&lt;div&gt;·.先从输入的routing_map文件中读取拓扑地图数据存储到序列化数据类Graph局部变量中，然后实例化拓扑图封装类TopoGraph并把指针存储在成员graph_中，调用其拓&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;扑图加载成员函数LoadGraph，将序列化的拓扑图数据加载进封装类中，便于后续路径搜索时对拓扑图的管理和操作，至此完成对成员graph_的初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用对应类的默认构造完成成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;black_list_generator_、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;result_generator_指向内存的开辟&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;置位&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;is_ready_，导航器构造完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;SearchRoute(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const routing::RoutingRequest&amp;amp; request,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，某个可选的路由请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;routing::RoutingResponse* const response)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，这个请求下对应的路由响应&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示搜索成功&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;路由搜索函数，通过给定的路由请求，在拓扑图中搜索出一条最优的路径作为路由响应&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.在拓扑地图graph_中检查输入的路由请求中的途经点所在车道和黑名单车道段所在的车道是否存在，如果不存在则不进行搜索，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;判断当前导航器是否成功实例化，判断当前导航器内是否存在有效的拓扑地图、黑名单区间生成器和路由结果生成器，若&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;不存在则不进行搜索，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对当前导航器进行初始化，调用成员函数Init完成，并判读是否初始化成功，若失败返回false&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;路径搜索阶段，使用特定的搜索策略在拓扑图中寻找路径，在拓扑图中生成有序的节点序列，使用成员函数SearchRouteByStrategy实现，并检查输出的路由节点序列内存中是否存入有效值&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在上面输出的首尾路由节点(表示在拓扑图中的路由起终点)中，根据输入的路由请求request中首尾途经点规定的实际路由起终点，设置精确的起终点位置&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;生成通行区域，&lt;span style=&quot;background-color: transparent;&quot;&gt;根据搜索到的节点序列生成详细的通行区域，并填充输出路由响应response，通过结果生成器&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;result_generator_中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GeneratePassageRegion成员函数实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;完成路由路径搜索返回成功标志位&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;- Init(const routing::RoutingRequest&amp;amp; request,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，某个可选路由请求&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图，入参就是成员graph_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;const TopoNode*&amp;gt;* const way_nodes,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储路由请求中途经点所在车道在全局拓扑地图中对应的根节点，存储顺序与途经点在RoutingRequest中的存储顺序一致&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;double&amp;gt;* const way_s)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输出，存储途经点的精确s坐标，存储顺序与&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;途经点在RoutingRequest中的存储顺序一致&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示初始化成功&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;初始化函数，导航器在每一次路由任务运行的时候都会初始化&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;清空管理的节点上的可用区间范围，调用Clear函数实现&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.通过&lt;/span&gt;输入的路由请求中的途经点所在车道的id在拓扑地图中找到对应的节点，存储到输出way_nodes中，并且将途经点的s坐标存储到输出&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;way_s中&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.读取&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入的RoutingRequest中的黑名单车道段和黑名单道路，加载进节点不可行区间管理器成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;topo_range_manager_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，调用&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;black_list_generator_的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenerateBlackMapFromRequest函数实现&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;- Clear()：void&lt;/div&gt;&lt;div style=&quot;&quot;&gt;清空管理的节点上的可用区间范围，调用&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;topo_range_manager_的Clear成员函数实现&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;SearchRouteByStrategy(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoGraph* graph,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，全局拓扑地图，入参就是成员graph_&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;const TopoNode*&amp;gt;&amp;amp; way_nodes,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，存储路由请求中途经点所在车道在拓扑地图中对应的根节点，存储顺序与途经点在RoutingRequest中的存储顺序一致&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;double&amp;gt;&amp;amp; way_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，存储途经点的精确s坐标，存储顺序与&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;途经点在RoutingRequest中的存储顺序一致&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeWithRange&amp;gt;* const result_nodes) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，搜索得到的最优路径上的拓扑节点，使用包含范围信息的拓扑节点来表示&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，搜索是否成功&lt;br&gt;&lt;/div&gt;&lt;div&gt;A*算法搜索路径&lt;/div&gt;&lt;div&gt;·.创建搜索策略局部变量，这里直接使用A*搜索算法类来实例化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在输入的途经点根节点序列way_nodes中，以相邻存储的根点作为起终点进行局部A*搜索。局部A*搜索执行以下步骤&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;创建黑名单管理器局部变量，负责管理局部搜索时的黑名单。首先要拷贝全局不可用区间信息，通过拷贝全局黑名单管理器topo_range_manager_完成；然后将这次局部搜索起终点之外的区域以点阻塞的方式也设置为黑名单区间，通过黑名单区间生成器成员black_list_generator_的成员函数AddBlackMapFromTerminal完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;基于局部搜索的黑名单区间管理器中的不可用区间创建子拓扑图，实例化SubTopoGraph类对象，并在子拓扑图中根据输入的途经点的精确s，在子拓扑图中获取局部搜索的起始和末了子节点，通过子拓扑图中的成员函数SubTopoGraph :: GetSubNodeWithS进行获取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;执行A*搜索，通过搜索策略局部变量的成员函数AStarStrategy :: Search完成&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;todo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将每次局部搜索的结果，即带有可行区间信息的拓扑节点序列，统一存储为一个序列，在循环外部进行路径合并&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;路径合并，通过成员函数MergeRoute完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;MergeRoute(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;NodeWithRange&amp;gt;&amp;amp; node_vec,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，等待合并的节点区间序列，各次局部搜索的结果&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeWithRange&amp;gt;* const result_node_vec) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，合并后的有序节点区间序列&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示合并成功&lt;br&gt;&lt;/div&gt;&lt;div&gt;路径合并函数&lt;/div&gt;&lt;div&gt;todo&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-28" vertex="1">
          <mxGeometry y="298" width="1220" height="912" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-32" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-22" target="POwssWgP0jl_rXd_H6LF-28" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="5859" y="-4959" as="sourcePoint" />
            <mxPoint x="6169" y="-5099" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-33" value="Graph proto&lt;div&gt;描述拓扑图结构的字段，纯数据类，&lt;span style=&quot;background-color: rgb(153, 153, 0); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;routing_map中的数据会存储在这个字段中从而可以在apollo中使用&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="7310" y="-9926" width="650" height="200" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-34" value="&lt;div&gt;optional string hdmap_version = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑图来源的高精地图的地图版本&lt;/div&gt;&lt;div&gt;optional string hdmap_district = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//拓扑图来源的高精地图的区域ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Node node = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑图中的节点，节点有多个，故使用repeated&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;repeated Edge edge = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑图节点间的连接关系，连接关系有多个，故使用repeated&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-33" vertex="1">
          <mxGeometry y="50" width="650" height="150" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-37" value="TopoGraph&lt;div&gt;拓扑图封装类，提供管理和操作拓扑图的接口&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="7270" y="-8877" width="1210" height="970" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-38" value="&lt;div&gt;- map_version_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑地图所来源的高精地图的版本&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- map_district_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//拓扑地图所来源的高精地图的区域ID&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//拓扑图元素存储器&lt;/div&gt;&lt;div&gt;- topo_nodes_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;TopoNode&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑地图数据类中的节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- topo_edges_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;TopoEdge&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//拓扑地图数据类中的边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//便于查找的映射表&lt;/div&gt;&lt;div&gt;- node_index_map_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unordered_map&amp;lt;std::string, int&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;车道ID到节点索引的映射表，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;lt; 节点所在车道id，节点在上面存储器中存储的索引序号(0开始计数) &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- road_node_map_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::unordered_map&amp;lt;std::string, std::unordered_set&amp;lt;const TopoNode*&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;道路ID到节点集合的映射表，通过道路id查找这条道路中包含的所有节点的集合&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-37" vertex="1">
          <mxGeometry y="48" width="1210" height="192" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-39" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-37" vertex="1">
          <mxGeometry y="240" width="1210" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-40" value="&lt;div&gt;+&amp;nbsp;TopoGraph() = default;&lt;/div&gt;&lt;div&gt;默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ LoadGraph(const Graph&amp;amp; filename)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入，拓扑图的序列化数据&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示加载成功&lt;br&gt;&lt;div&gt;将拓扑图的序列化数据转换成封装类中的成员&lt;/div&gt;&lt;div&gt;·.清空存储器和映射表成员中的历史数据，调用成员函数Clear完成&lt;/div&gt;&lt;div&gt;·.读取输入拓扑图中的高精地图版本和区域id，存储在成员map_version_和map_district_中&lt;/div&gt;&lt;div&gt;·.加载输入拓扑图数据中的节点，调用LoadNodes函数完成，加载失败返回false&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;加载输入拓扑图数据中的边，调用LoadEdges函数完成&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，加载失败返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ GetNode(const std::string&amp;amp; id) const：const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，指定车道id&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，该车道id对应的拓扑节点，若找不到返回nullptr&lt;br&gt;&lt;/div&gt;&lt;div&gt;节点查找函数，指定车道id返回对应拓扑节点&lt;/div&gt;&lt;div&gt;·.根据车道id在&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;node_index_map_成员中查找索引，根据索引在节点存储器topo_nodes_中查找对应的拓扑节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetNodesByRoadId(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::string&amp;amp; road_id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，指定道路id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_set&amp;lt;const TopoNode*&amp;gt;* const node_in_road) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，指定道路上所有的拓扑节点&lt;/div&gt;&lt;/div&gt;&lt;div&gt;输出指定道路上所有的拓扑节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;根据输入的车道id在管理表成员road_node_map_中查找这条道路上包含的所有节点，并输出&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Clear()：void&lt;/div&gt;&lt;div&gt;成员清空函数&lt;/div&gt;&lt;div&gt;·.清空类内的存储器和映射表成员&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- LoadNodes(const Graph&amp;amp; graph)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，拓扑图的序列化数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//返回，true表示加载成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;节点加载函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;输入拓扑图数据中没有节点数据时，认为加载失败返回false&lt;/div&gt;&lt;div&gt;·.遍历输入拓扑图数据中的节点，依次填入成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;topo_nodes_、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;node_index_map_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;road_node_map_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;注意使用的是节点封装类TopoNode，需要构造&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- LoadEdges(const Graph&amp;amp; graph)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，拓扑图的序列化数据&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;//返回，true表示加载成功&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;边加载函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;可以接受输入拓扑图中没有边，不认为加载失败，直接返回true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;遍历输入拓扑图数据中的边，读取这条边的起始车道id和目标车道id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;从映射表成员&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;node_index_map_中查找起始和目标车道是否有且只有一个节点与之对应，否则认为加载失败返回false。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;节点之间的连接关系可以一对多或在多对一，但是对于给定的边，它的起始和目标节点必须是唯一的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.从映射表&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;node_index_map_查找&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;起始和目标车道对应的节点在存储器中的位置，从节点存储器topo_nodes_中取出起始节点和目标节点，构建拓扑边封装类对象，并将这个拓扑边作为出发边和到达边添加到起始节点和目标节点中，调用起始节点的AddOutEdge函数和目标节点的AddInEdge函数完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.将拓扑边填入边存储器topo_edges_中&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意使用的时拓扑边封装类TopoEdge，需要构造，并且由于存在对起始节点和目标节点的操作，所以边加载函数应该在节点加载函数之后运行&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-37" vertex="1">
          <mxGeometry y="248" width="1210" height="722" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-41" value="BlackListRangeGenerator&lt;div&gt;黑名单区间生成器类，负责生成在拓扑图中路径搜索时各节点上的不可用区间，生成的这些不可用区间在TopoRangeManager类中进行管理&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="7300" y="-3130" width="1330" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-42" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-41" vertex="1">
          <mxGeometry y="50" width="1330" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-43" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-41" vertex="1">
          <mxGeometry y="76" width="1330" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-2" value="//匿名命名空间中的类外函数&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;MoveSForward(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;局部搜索&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;终点的s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double upper_bound)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，阻塞区域的上界，为终点所在车道的长度，说明终点处的阻塞区域不超过所在车道的终点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，阻塞区域的s位置&lt;br&gt;&lt;/div&gt;&lt;div&gt;计算终点阻塞区域的s位置，返回s+kepsilon，说明当前车道在搜索终点以外的区域全被阻塞&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MoveSBackward(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double s,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，局部搜素起点的s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double lower_bound)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，阻塞区域的下界，为0，说明在起点处的阻塞区域不超过所在车道起点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，阻塞区域的s位置&lt;/div&gt;&lt;div&gt;计算起点阻塞区域的s位置&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，返回s-kepsilon，说明当前车道在搜索起点远以外的区域全被阻塞&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;GetOutParallelLane(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，拓扑节点，用作源节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;std::unordered_set&amp;lt;const TopoNode*&amp;gt;* const node_set)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，以输入节点为源节点的全部出边并行车道的集合，通过unordered_set去重&lt;/div&gt;&lt;/div&gt;&lt;div&gt;获取以输入节点为源节点的所有出边并行车道节点，不止是临车道。递归函数&lt;/div&gt;&lt;div&gt;·.获取源节点的左右换到相邻车道的出边集合out_to_left_or_right_edge_set_，遍历集合中的每一个出边，出边的目标节点to_node_即为当前节点的相邻并行车道节点，存入输入node_set&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;若想获取搜索起始节点的全部并行车道，仅需要以上面的to_node_为输入节点递归调用该函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetOutParallelLane&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;即可，输出node_set贯穿每一层递归即可存储全部并行车道节点。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在每一层存储相邻车道节点时只需查看是否在输出node_set中已经存储了这一层递归的相邻车道，直到递归最深一层所有相邻车道已经存入，递归终止&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;GetInParallelLane(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，拓扑节点，用作目标节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_set&amp;lt;const TopoNode*&amp;gt;* const node_set)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，以输入节点为目标节点的全部入边并行车道的集合，通过unordered_set去重&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;获取以输入节点为目标节点的所有入边并行车道节点，不止是临车道&lt;/div&gt;&lt;div&gt;&lt;div&gt;·.获取目标节点的从左右相邻车道换道进入目标节点的入边集合in_from_left_or_right_edge_set_，遍历集合中的每一个入边，入边的源节点from_node_即为当前节点的相邻并行车道节点，存入输入node_set&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;若想获取搜索终止节点的全部并行车道，仅需要以上面的from_node_为输入节点递归调用该函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetInParallelLane&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;即可，输出node_set贯穿每一层递归即可存储全部并行车道节点。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在每一层存储相邻车道节点时只需查看是否在输出node_set中已经存储了这一层递归的相邻车道，直到递归最深一层所有相邻车道已经存入，递归终止&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;AddBlackMapFromLane(const routing::RoutingRequest&amp;amp; request,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，路由请求，读取黑名单车道段&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，拓扑地图，查找黑名单车道对应的拓扑节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TopoRangeManager* const range_manager)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，拓扑节点不可行区间管理器，将路由请求中的黑名单车道段以区间的形式存储进来&lt;/div&gt;&lt;/div&gt;&lt;div&gt;黑名单车道段加载函数&lt;/div&gt;&lt;div&gt;·.遍历输入路由请求中的各个黑名单车道段，在输入拓扑地图graph找到这些车道段对应的拓扑节点，通过graph中的GetNode函数用车道段所在车道的id查找对应的拓扑节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;将这些黑名单车道段以s区间的形式插入不可行空间管理器range_manager在上面查到的对应节点处的不可行区间序列，通过&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_manager中的Add函数完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;AddBlackMapFromRoad(const routing::RoutingRequest&amp;amp; request,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，路由请求，读取黑名单道路&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，拓扑地图，查找黑名单道路包含的全部拓扑节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TopoRangeManager* const range_manager)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，拓扑节点不可行区间管理器，将路由请求中的黑名单道路以区间的形式存储进来&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;黑名单道路加载函数&lt;/div&gt;&lt;div&gt;·.遍历输入路由请求中的各个黑名单道路，在拓扑地图graph中找到这些道路包含的全部拓扑节点，通过graph中的成员函数GetNodesByRoadId实现&lt;/div&gt;&lt;div&gt;·.在遍历每条黑名单道路包含的每个节点，并在不可行区间管理器range_manager_中将道路中各节点对应的整条车道长度区间加载到这个节点的不可行区间序列中去，调用AddBlackMapFromLane完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;AddBlackMapFromOutParallel(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索起始节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double cut_ratio,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，起始节点的精确s在整条车道长度中的比例，用于确定并行车道的不可通行点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TopoRangeManager* const range_manager)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储搜索起始节点处并行车道不可通行点&lt;/div&gt;&lt;/div&gt;&lt;div&gt;将搜索起点处的所有并行车道添加到黑名单，阻塞起点车道的并行车道，防止搜索时从起点前方进入到主路径。函数名中的OutParallel表示以起点所在车道为源节点，可以构成出边的并行车道。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这里的并行车道指的是全部并行车道，并不只是临车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.获取输入搜索起始节点处的全部并行车道，调用函数GetOutParallelLane完成。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意按照函数&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetOutParallelLane中的递归用法，会将搜索起始节点所在车道也包含，故调用完成后要将起始节点删除&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.遍历所有并行车道，通过输入的比例和并行车道的长度，算出各并行车道的不可用点的s位置。通过比例缩放的方式得到平行车道的对应位置，由于平行车道的s起点和车道长度不一定相同，这样的操作牺牲了精度，但简化了计算&lt;/div&gt;&lt;div&gt;·.调用输出&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_manager的Add函数，将各并行车道的不可行区间以点的方式(区间左右边界一样)存储进去。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;使用点阻塞而非区间阻塞，既可以实现同样的效果，又能达到精确控制的作用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;AddBlackMapFromInParallel(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，搜索终止节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double cut_ratio,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，终止节点的精确s在整条车道长度中的比例，用于确定并行车道的不可通行点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TopoRangeManager* const range_manager)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，存储搜索终止节点处并行车道不可通行点&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;将搜索终点处的所有并行车道添加到黑名单，阻塞终点车道的并行车道，防止搜索时从终点后方进入主路径。函数名中的InParallel表示以终点所在车道为目标节点，可以构成入边的并行车道&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;这里的并行车道指的是&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;全部并行车道，并不只是临车道&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;·.获取输入搜索终止节点处的全部并行车道，调用函数GetInParallelLane完成。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意按照函数&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetInParallelLane中的递归用法，会将搜索起始节点所在车道也包含，故调用完成后要将起始节点删除&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.遍历所有并行车道，通过输入的比例和并行车道的长度，算出各并行车道的不可用点的s位置&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;。通过比例缩放的方式得到平行车道的对应位置，由于平行车道的s起点和车道长度不一定相同，这样的操作牺牲了精度，但简化了计算&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.调用输出&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_manager的Add函数，将各并行车道的不可行区间以点的方式(区间左右边界一样)存储进去。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;使用点阻塞而非区间阻塞，既可以实现同样的效果，又能达到精确控制的作用&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-41" vertex="1">
          <mxGeometry y="84" width="1330" height="1046" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-1" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-41" vertex="1">
          <mxGeometry y="1130" width="1330" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-44" value="+&amp;nbsp;BlackListRangeGenerator() = default;&lt;div&gt;默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;GenerateBlackMapFromRequest(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const routing::RoutingRequest&amp;amp; request,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，路由请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，拓扑地图&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TopoRangeManager* const range_manager) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，全局拓扑图黑名单管理器，识别RoutingRequest中的黑名单车道段和道路，更新节点不可用区间管理器&lt;/div&gt;&lt;div&gt;黑名单地图生成函数&lt;/div&gt;&lt;div&gt;·.将输入路由请求request中的黑名单车道段和黑名单道路加载到&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点不可用区间管理器range_manager，调用类外函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AddBlackMapFromLane、&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AddBlackMapFromRoad实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;将管理器中各节点的不可行区间序列进行排序合并，通过range_manager中的SortAndMerge函数完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AddBlackMapFromTerminal(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* src_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索起始根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const TopoNode* dest_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;局部搜索&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;末了根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，起点的精确s坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double end_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，终点的精确s坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;TopoRangeManager* const range_manager) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，局部搜索黑名单管理器，除包含全局拓扑图上的黑名单外，将局部搜索起终点之外的区域作为黑名单区间存入，统一管理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;将路径搜索起终点之外的区域以点阻塞的方式添加进黑名单区间&lt;/div&gt;&lt;div&gt;·.计算局部搜索起终节点处阻塞区域的s，调用类外函数MoveSBackward和MoveSForward完成，并以点阻塞的方式(阻塞区间左右端点一致)添加进输出不可行区间管理器&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_manager，调用&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_manager的Add函数完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.将搜索起终点所在车道的并行车道的阻塞点写入输出range_manager，调用类外函数AddBlackMapFromOutParallel和AddBlackMapFromInParallel实现&lt;/div&gt;&lt;div&gt;·.对添加完全部阻塞点的不可行区间管理器range_manager进行排序合并，调用其成员函数SortAndMerge完成&lt;br&gt;&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;可以进一步改进的地方：&lt;/span&gt;最好不要用点阻塞的方式将局部搜索起终点及并行车道上的阻塞位置添加进黑名单。因为在生成拓扑子图SubTopoGraph时会将起点处车道及其并行车道以前的部分车道段和终点车道及其并行车道之后的车道段(如果存在的话)生成子图中的子节点，而由于并行车道阻塞位置计算是通过计算主路径车道阻塞点位置比例的方式近似计算而来，不能保证阻塞位置与起终点完全平齐，并且在函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;SubTopoGraph ::&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitSubNodeByValidRange中在同一条车道上阻塞点前后的白名单子节点和黑名单子节点会产生前向连接关系(这与我们的本意相反，我们不希望与黑名单车道产生连接，但这个函数中没有机制去避免这个现象的产生)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，这样就有可能出现在生成子图中子边时在判断重叠度的时候出现误差(比如在换道边添加时)，导致有效车道段与起终点之外的黑名单车道段出现误连接，从而有可能出现起终点之间的路由结果穿过黑名单车道的情况。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;其实我们的本意是想在局部搜索时将起终点以外的平行车道都排除在局部拓扑图之外，只要将这些车道按照阻塞区间的形式添加到黑名单中，自然就不会在SubTopoGraph中产生黑名单车道上的子节点，从而规避上述错误发生的可能性&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-41" vertex="1">
          <mxGeometry y="1138" width="1330" height="512" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-45" value="ResultGenerator&lt;div&gt;路由结果生成类，将搜索到的路径转换为RoutingResponse格式&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="11710" y="-3101" width="679" height="280" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-46" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-45" vertex="1">
          <mxGeometry y="51" width="679" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-47" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-45" vertex="1">
          <mxGeometry y="77" width="679" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-48" value="+ResultGenerator() = default;&lt;div&gt;默认构造&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-45" vertex="1">
          <mxGeometry y="85" width="679" height="195" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-49" value="&lt;font style=&quot;font-size: 20px;&quot;&gt;&lt;b&gt;routing_map拓扑图数据类，&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;存储在routing_map.bin/txt文件中&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;span style=&quot;font-size: 20px; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;b style=&quot;&quot;&gt;是由base_map.bin/txt/xml生成而来的，生成代码在topo_creator.cc中&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=710;strokeWidth=4;height=140;" parent="1" vertex="1">
          <mxGeometry x="7280" y="-10420" width="2760" height="1128.5" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-50" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-28" target="POwssWgP0jl_rXd_H6LF-45" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="6699" y="-5113.47" as="sourcePoint" />
            <mxPoint x="7009" y="-5253.47" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-51" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-28" target="POwssWgP0jl_rXd_H6LF-41" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="6899" y="-5129" as="sourcePoint" />
            <mxPoint x="7209" y="-5269" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-52" value="Node proto&lt;div&gt;描述节点的字段，纯数据类，是lane这个地图&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;元素在拓扑图中的&lt;/span&gt;抽象&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="8020" y="-10271.5" width="970" height="310" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-53" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;optional string lane_id = 1;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//当前节点指代车道的id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double length = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//当前节点指代车道的长度&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//由于base_map中有虚拟车道的存在，路口左右转在车道的角度上看就是直行&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//左右变道出口，规定当前车道在哪些区间范围内可以向左或者向右变道，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;对应的区间按照区间端点在车道左右边界线上的位置比例映射到了车道中心线上&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//根据车道边界的线型来确定&lt;/div&gt;&lt;div&gt;repeated CurveRange left_out = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;repeated CurveRange right_out = 4;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double cost = 5;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//通过当前车道的代价，用作路径优化算法中的权重&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional apollo.hdmap.Curve central_curve = 6;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道的车道中心线&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional bool is_virtual = 7 [default = true];&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道是否为虚拟车道&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string road_id = 8;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道所属道路的id&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-52" vertex="1">
          <mxGeometry y="46" width="970" height="264" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-54" value="Edge proto&lt;div&gt;边，描述连接关系的字段，纯数据类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=47;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="8020" y="-9701.5" width="780" height="340" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-55" value="&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//由于apollo高精地图中给出了路口内车道的连接关系，因此在拓扑地图中路口内的虚拟车道也是一个节点，因此就不存在需要描述路口外两车道之间左右转的连接关系，拓扑地图中的连接关系只考虑变道或直行即可&lt;/span&gt;&lt;/div&gt;&lt;div&gt;enum DirectionType {&lt;/div&gt;&lt;div&gt;&amp;nbsp; FORWARD = 0;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//直行，同一车道内前进&lt;/div&gt;&lt;div&gt;&amp;nbsp; LEFT = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//左变道&lt;/div&gt;&lt;div&gt;&amp;nbsp; RIGHT = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//右变道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;optional DirectionType direction_type = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//连接关系的方向类型&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string from_lane_id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//边的起始车道id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional string to_lane_id = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//边的目标车道id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double cost = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道间转换的成本，路径优化中的代价&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-54" vertex="1">
          <mxGeometry y="47" width="780" height="293" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-56" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-33" target="POwssWgP0jl_rXd_H6LF-52" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="7920" y="-9977.5" as="sourcePoint" />
            <mxPoint x="8270" y="-10147.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-57" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-33" target="POwssWgP0jl_rXd_H6LF-54" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="7950" y="-9657.5" as="sourcePoint" />
            <mxPoint x="8300" y="-9827.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-58" value="CurvePoint proto&lt;div&gt;描述曲线上的点的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="9557" y="-10153.5" width="410" height="74" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-59" value="optional double s = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;只描述当前点所在位置的弧长" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-58" vertex="1">
          <mxGeometry y="48" width="410" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-60" value="CurveRange proto&lt;div&gt;描述曲线范围的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="9097" y="-10171.5" width="370" height="110" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-61" value="&lt;div&gt;optional CurvePoint start = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//曲线段起点&lt;/div&gt;&lt;div&gt;optional CurvePoint end = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//曲线段终点&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-60" vertex="1">
          <mxGeometry y="44" width="370" height="66" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-62" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-60" target="POwssWgP0jl_rXd_H6LF-58" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="9557" y="-10077.5" as="sourcePoint" />
            <mxPoint x="9867" y="-10217.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-63" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-52" target="POwssWgP0jl_rXd_H6LF-60" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="8980" y="-10331.5" as="sourcePoint" />
            <mxPoint x="9330" y="-10501.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-64" value="&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;routing_map拓扑图封装类，用于管理和操作&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=440;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="7210" y="-9040" width="5360" height="4300" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-65" value="TopoNode&lt;div&gt;拓扑图节点封装类，提供管理和操作的接口。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;支持对根节点和子节点的管理，在全局拓扑图中的节点称为根节点，其来源是base_map生成的全局拓扑地图中的节点序列化数据，颗粒度较粗；在子拓扑图中的节点称为子节点，其来源是根节点的可通行区间，颗粒度较细，可支持换道搜索&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=61;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="9380" y="-8970" width="1680" height="2230" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-66" value="&lt;div&gt;//以下成员在构造函数中初始化&lt;/div&gt;&lt;div&gt;- pb_node_：Node&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//根节点的序列化数据，包含整条车道相关的字段，比如lane_id、road_id和车道中心线&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- start_s_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//子节点可行区间的起点s。对于根节点对应的整条车道，认为起点s=0(对于子节点对应车道段的长度区间，这就是长度原点)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- end_s_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;子节点可行区间&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的终点s。对于根节点对应的整条车道，终点认为就是车道总长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//为什么设计子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//base_map中车道的长度可能很长，颗粒度太祖，不足以支持换道的需求，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;//在路径搜索时需要在若干子拓扑图内进行局部搜索，此时就会将全局拓扑图中的每个根节点细化成若干子节点以支持换道搜索的需求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- origin_node_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//当前拓扑节点对应的根节点&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下成员在Add**Edge函数中初始化&lt;/div&gt;&lt;div&gt;//入边集合&lt;/div&gt;&lt;div&gt;&lt;div&gt;- in_from_all_edge_set_：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储所有指向当前节点的边，获取当前节点的所有前驱节点&lt;/div&gt;&lt;div&gt;- in_from_left_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储从左侧车道指向当前节点的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;表示车辆从左侧车道换道到当前车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- in_from_right_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储从右侧车道指向当前节点的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表示车辆从右侧车道换道到当前车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- in_from_left_or_right_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储从&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;左侧或&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;右侧车道指向当前节点的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表示车辆从&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;左侧或&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;右侧车道换道到当前车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- in_from_pre_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储从前驱车道指向当前节点的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;表示车辆沿同一方向前进到当前车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//出边集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- out_to_all_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储从当前节点指向所有其他节点的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;获取当前节点的所有后继节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- out_to_left_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储从当前节点指向左侧车道的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;表示车辆从当前车道换道到左侧车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- out_to_right_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储从当前节点指向右侧车道的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表示车辆从当前车道换道到右侧车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- out_to_left_or_right_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;存储从当前节点指向&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;左侧或&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;右侧车道的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;表示车辆从当前车道换道到&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;左侧或&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;右侧车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- out_to_suc_edge_set_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：std::unordered_set&amp;lt;const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;存储从当前节点指向后继车道的边，&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;表示车辆沿同一方向前进到后继车道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//出入边映射表&lt;/div&gt;&lt;div&gt;- out_edge_map_：std::unordered_map&amp;lt;const TopoNode*, const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//从当前节点到目标节点的出边映射，快速查找&quot;从当前节点到指定节点的边&quot;，key目标节点，value从当前节点到目标节点的出边&lt;/div&gt;&lt;div&gt;- in_edge_map_：std::unordered_map&amp;lt;const TopoNode*, const TopoEdge*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//从源节点到当前节点的入边映射，快速查找&quot;从指定节点到当前节点的边&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，key源节点，value从源节点到当前节点的入边&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//以下成员在Init函数中初始化&lt;/div&gt;&lt;div&gt;- anchor_point_：common::PointENU&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点对应区间在整条车道上的锚点，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;无论根节点还是子节点，其锚点都是整条车道pb数据中车道中心线的采样点序列中s值小于当前节点表示区间中点的最远采样点，因此常用锚点近似表示节点在车道中的位置&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//存储当前节点对应车道段(根节点时整条车道，子节点是部分车道段)内包含的左右换道区间，按区间的起点s从小到大排序，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;没有做区间合并操作，因此会有区间重叠的情况存在&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- left_out_sorted_range_：std::vector&amp;lt;NodeSRange&amp;gt;&lt;/div&gt;&lt;div&gt;- right_out_sorted_range_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;NodeSRange&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//当前节点对应车道段包含的左右换道区间中区间长度最大的那个在上面存储器中的索引&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- left_prefer_range_index_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- right_prefer_range_index_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//当前节点对应车道段中左右最长换道区间是否能满足最小换道长度的要求，标定值5m&lt;/div&gt;&lt;div&gt;- is_left_range_enough_：bool&lt;/div&gt;&lt;div&gt;- is_right_range_enough_&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-65" vertex="1">
          <mxGeometry y="61" width="1680" height="739" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-67" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-65" vertex="1">
          <mxGeometry y="800" width="1680" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-68" value="+ explicit TopoNode(const Node&amp;amp; node);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，根节点的序列化数据&lt;div&gt;根节点构造函数，强制显式构造&lt;/div&gt;&lt;div&gt;·.存储根节点序列化数据到成员pb_node_，根节点对应车道的长度区间起点为0，终点就为车道的总长，使用start_s_、end_s_存储起终点s&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;由于这是根节点的构造函数，因成员origin_node_指向的就是当前的对象&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用Init成员函数，完成根节点的初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+TopoNode(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* topo_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，根节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const NodeSRange&amp;amp; range);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，子节点对应车道段的长度区间&lt;/div&gt;&lt;div&gt;子节点构造函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用根节点构造函数，入参为输入根节点中的根节点序列化数据&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;对于子节点中的成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;origin_node_就用输入的根节点初始化，子节点对应的车道段长度区间的起终点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;start_s_、end_s_就用输入的区间进行初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;调用Init成员函数，完成子节点的初始化&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;Length() const：double&lt;/div&gt;&lt;div&gt;根节点对应车道的长度，无论当前节点封装类对象是根节点还是子节点。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ AddInEdge(const TopoEdge* edge)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，待添加的&lt;/span&gt;到达当前节点的入&lt;span style=&quot;white-space: pre;&quot;&gt;边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;添加到达当前节点的边&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;检查输入边edge的目标节点是否是当前节点，不是的话返回&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从入边映射表in_edge_map_中查找当前边是否已经记录，如果已经记录的话返回&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果没有记录，根据输入边edge的方向类型，填充对应的入边集合成员，同时填充入边映射表&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;in_edge_map_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ AddOutEdge(const TopoEdge* edge)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;待添加的从&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前节点出发的出&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;边&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;添加从当前节点出发的边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;检查输入边edge的源节点是否是当前节点，不是的话返回&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从出边映射表out_edge_map_中查找当前边是否已经记录，如果已经记录的话返回&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果没有记录，根据输入边edge的方向类型，填充对应的出边集合成员，同时填充出边映射表out&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_edge_map_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ IsOverlapEnough(const TopoNode* sub_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前节点的目标节点，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;是子节点或者不包含子节点的根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoEdge* edge_for_type) const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，连接当前节点&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;所在根节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;和目标节点&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;所在根节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的出边&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示与目标节点之间的重叠足够可以进行连接&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;用于判断当前节点与目标节点之间的重叠是否足够从而在输入出边(根节点之间的连接而非当前节点与输入目标节点之间的连接)指明的连接方向上进行连接操作，注意必须以当前节点作为源节点以输入节点作为目标节点来调用该函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;·.根据输入的当前节点的出边的方向调用不同判断函数&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果输入出边方向为左，与目标节点有足够重叠需满足：当前节点对应车道段中有足够的区间满足左换道(成员is_left_range_enough_为true)且该区间与输入的目标节点的s坐标范围有足够重叠度(满足成员函数IsOutRangeEnough)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;·.&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果输入出边方向为右，与目标节点有足够重叠需满足：当前节点对应车道段中有足够的区间满足右换道(成员is_right_range_enough_为true)且该区间与输入的目标节点的s坐标范围有足够重叠度(满足成员函数IsOutRangeEnough)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;&quot;&gt;·.&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果输入出边方向为前向，当前节点与目标节点可以构成连接需满足：当前节点在其所属根节点的末端故可以作为连接起点(调用当前节点的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;IsOutToSucEdgeValid判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)且目标节点在其所属根节点的起始端故可作为连接终点(调用输入目标节点的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;IsInFromPreEdgeValid判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;为什么这样判断？是因为输入的出边通常是全局拓扑图中根节点之间的边，因此如果当前节点和输入目标节点是子节点的话，若想按输入边的连接方向实现连接的话必须保证当前节点和输入目标节点分别在这对根节点的末端和起始端&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;+ static IsOutRangeEnough(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;NodeSRange&amp;gt;&amp;amp; range_vec,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点所属区间中左换道或者右换道的可用区间序列(根据传参为成员left_out_sorted_range_或right_out_sorted_range_确定)，已经按照s增大方向排好序&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double start_s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//目标节点区间的s起始值，目标节点是子节点或者不含子节点的根节点，因此其对应的区间只有一个&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double end_s)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//目标节点区间的s末了值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示当前节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;与目标节点的s坐标范围有足够重叠度支持换道&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;与目标节点的s坐标范围是否有足够重叠度支持换道&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;·.若输入的目标节点的区间长度不满足最小换道需求直接返回false，通过静态函数NodeSRange::IsEnoughForChangeLane进行判断&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;获取输入的有序可用换道区间序列&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_vec中第一个区间左端点大于等于或者整个区间包含目标节点start_s的换道区间和最后一个区间右端点小于等于或者整个区间包函数目标节点end_s的换道区间(调用区间计算工具头文件range_utils.h中的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;BinarySearchForSLarger和&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;BinarySearchForSSmaller实现)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果找到的索引小于0说明输入换道区间序列&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_vec为空，返回false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果两个索引之间的距离大于1，说明目标节点所在s范围中有多个可换道区间，工程经验知大概率满足换道区间长度要求，直接返回true&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果两个索引之间距离等于1，用目标节点的start_s和end_s将前后两换道区间截断后，将两截断区间长度相加，判断该长度之和是否满足最小换道长度要求(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过静态函数NodeSRange::IsEnoughForChangeLane进行判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，若两区间之间不相连时可能有bug&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果两个索引重合，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;用目标节点的start_s和end_s将该换道区间截断后，判断截断后的区间是否满足换道&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过静态函数NodeSRange::IsEnoughForChangeLane进行判断&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;fixbug&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：在初始化成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;left_out_sorted_range_和right&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_out_sorted_range_时进行合并处理，在该函数中的区间判断时，将所有候选区间序列的首尾元素用目标节点的start_s和end_s截断后，判断新的区间序列中最长的区间是否满足换道长度要求即可&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;+ IsInFromPreEdgeValid() const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;判断当前节点所包含区间是否是其所属根节点所包含区间的起始段，用于判断当前节点是否可以作为根节点入边的目标节点&lt;/div&gt;&lt;div&gt;只需要判断当前节点的start_s_与其所属根节点origin_node_的start_s_之间的距离是否足够近(阈值0.01m)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ IsOutToSucEdgeValid() const：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;判断当前节点所包含区间是否是其所属根节点所包含区间的末段，用于判断当前节点是否可以作为根节点出边的源节点&lt;/div&gt;&lt;div style=&quot;background-color: transparent;&quot;&gt;只需要判断当前节点的end_s_与其所属根节点origin_node_的end_s_之间的距离是否足够近(阈值0.01m)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Init()：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;节点初始化函数&lt;/div&gt;&lt;div&gt;·.查找当前节点对应车道段的锚点，调用成员函数FindAnchorPoint，将锚点存储到成员anchor_point_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;在根节点序列化数据pb_node_中找到当前节点对应车道段包含的左右换道区间，并根据当前节点的start_s_和end_s_进行截断，按照区间起点s从小到大存储在存储器成员中&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;left_out_sorted_range_和right&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_out_sorted_range_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，然后找到左右最大换道区间的索引存储到成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;left_prefer_range_index_和right&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_prefer_range_index_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，并判断最大区间是否满足最小换道区间的长度要求(通过最大区间的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;IsEnoughForChangeLane实现&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，将标志位存储在成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;is_left_range_enough_和&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;is_right_range_enough_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;FindAnchorPoint()：bool&lt;/div&gt;&lt;div&gt;锚点查询函数，针对根节点或子节点都可以查，由于根节点的情况容易理解，这里以子节点为例说明&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从根节点序列化数据pb_node_中读取整条车道中心线上所有曲线段的端点个数，不去重&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;将子节点中的锚点位置指定在对应区间的中点，并计算整条车道起点到锚点处的弧长占整条车道长度的比例，通过这个这个比例与上面整条车道中心线中端点总个数的乘积并取整，就可以知道这个锚点在哪条曲线段上，并且通过这个曲线段前后两个端点近似表示锚点位置，并将该点存储在成员anchor_point_中&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-65" vertex="1">
          <mxGeometry y="808" width="1680" height="1422" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-69" value="TopoEdge&lt;div&gt;拓扑图边封装类，提供管理和操作的接口&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=54;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="9550" y="-6590" width="940" height="460" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-70" value="&lt;div&gt;- pb_edge_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Edge&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边的序列化数据&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- from_node_ = nullptr：const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;起始节点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- to_node_ = nullptr：const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;目标节点&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-69" vertex="1">
          <mxGeometry y="54" width="940" height="126" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-71" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-69" vertex="1">
          <mxGeometry y="180" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-72" value="&lt;div&gt;+ TopoEdge(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const Edge&amp;amp; edge,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，边的序列化数据&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* from_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，边的起始节点，使用节点封装类&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* to_node);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，边的目标节点，使用节点封装类&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.列表初始化各成员&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-69" vertex="1">
          <mxGeometry y="188" width="940" height="272" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-73" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-37" target="POwssWgP0jl_rXd_H6LF-65" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="8581" y="-7800.5" as="sourcePoint" />
            <mxPoint x="8931" y="-7970.5" as="targetPoint" />
            <Array as="points">
              <mxPoint x="8770" y="-8392" />
              <mxPoint x="8770" y="-8737" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-74" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-37" target="POwssWgP0jl_rXd_H6LF-69" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="8671" y="-7402.5" as="sourcePoint" />
            <mxPoint x="9050" y="-7610.5" as="targetPoint" />
            <Array as="points">
              <mxPoint x="9220" y="-8392" />
              <mxPoint x="9220" y="-6360" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-75" value="NodeSRange&lt;div&gt;表示车道上沿S坐标方向的一个区间范围，不与拓扑节点绑定，用于表示某一节点关联的车道上的区间，可以是可换道区间、不可通行区间等&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="11578" y="-8050" width="799" height="660" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-76" value="&lt;div&gt;换道区间的起终点s坐标&lt;/div&gt;&lt;div&gt;- start_s_ = 0.0：double&lt;/div&gt;&lt;div&gt;- end_s_ = 0.0&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：double&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-75" vertex="1">
          <mxGeometry y="50" width="799" height="74" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-77" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-75" vertex="1">
          <mxGeometry y="124" width="799" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-78" value="+&amp;nbsp;NodeSRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double s1,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，区间起点&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double s2);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，区间终点&lt;/div&gt;&lt;div&gt;构造函数，列表初始化成员&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+operator&amp;lt;(const NodeSRange&amp;amp; other) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，与当前区间进行比较的另一个区间&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，*this &amp;lt; other的比较结果&lt;br&gt;&lt;/div&gt;&lt;div&gt;“&amp;lt;”运算符重载函数&lt;/div&gt;&lt;div&gt;比较两个区间的起点s，用于排序算法，按照区间起点s升序排列&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;IsValid() const：bool&lt;/div&gt;&lt;div&gt;判断区间是否有效，start_s_ &amp;lt; end_s_即为有效区间&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;//判断当前区间是否满足最小换道要求&lt;/div&gt;&lt;div&gt;+ IsEnoughForChangeLane() const&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：bool&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;调用下面函数实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;//静态函数，判断入参中给定的区间是否满足最小换道要求，最小换道区间长度通过gflags定义，目前是5m&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ static IsEnoughForChangeLane(double start_s, double end_s)：bool&lt;/div&gt;&lt;div&gt;+ static IsEnoughForChangeLane(double length)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：bool&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;MergeRangeOverlap(const NodeSRange&amp;amp; other)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，另一个区间&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示当前区间与输入的区间有交集可以合并&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;判断当前区间与输入区间是否可以合并，若可以合并，合并到当前区间中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.若两区间都不是有效区间(通过成员函数IsValid判断)或两区间没有交集，直接返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;其余情况两区间存在交集可以合并，将other区间合入当前区间，更新当前区间的start_s_、end_s_，返回true&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-75" vertex="1">
          <mxGeometry y="132" width="799" height="528" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-79" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-65" target="POwssWgP0jl_rXd_H6LF-75" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="10950" y="-9033" as="sourcePoint" />
            <mxPoint x="11300" y="-9203" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-80" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-65" target="POwssWgP0jl_rXd_H6LF-69" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="10660" y="-6963" as="sourcePoint" />
            <mxPoint x="11010" y="-7133" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-81" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-64" target="POwssWgP0jl_rXd_H6LF-49" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="8350" y="-9120" as="sourcePoint" />
            <mxPoint x="8660" y="-9260" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-82" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;路由拓扑地图&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=630;strokeWidth=4;height=110;" parent="1" vertex="1">
          <mxGeometry x="7070" y="-10630" width="5660" height="6010" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-83" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-28" target="POwssWgP0jl_rXd_H6LF-82" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="7320" y="-4739" as="sourcePoint" />
            <mxPoint x="8630" y="-4390" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-89" value="Measurement proto&lt;div&gt;描述路由线路长度信息的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4040" y="-3270" width="350" height="78" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-90" value="optional double distance = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路由结果的线路长度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-89" vertex="1">
          <mxGeometry y="52" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-91" value="LaneWaypoint proto&lt;div&gt;描述路由请求中途经点的字段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4280" y="-5010" width="740" height="200" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-92" value="&lt;div&gt;optional string id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//途经点所在车道的id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double s = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//途经点在其所在车道上的s坐标，s轴原点在地图中该车道的起点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional apollo.common.PointENU pose = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//途经点的ENU坐标，世界坐标系中的坐标&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double heading = 4;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//途经点的朝向角，ENU直角坐标系下计算，用户可在dreamview中设置&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-91" vertex="1">
          <mxGeometry y="52" width="740" height="148" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-93" value="LaneSegment proto&lt;div&gt;描述车道段的字段&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4790" y="-4650" width="460" height="144" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-94" value="&lt;div&gt;optional string id = 1;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道段所在车道的id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;optional double start_s = 2;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前车道段的起点s&lt;/div&gt;&lt;div&gt;optional double end_s = 3;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前车道段的终点s&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="POwssWgP0jl_rXd_H6LF-93" vertex="1">
          <mxGeometry y="50" width="460" height="94" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-96" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-4" target="POwssWgP0jl_rXd_H6LF-91" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4150" y="-4840" as="sourcePoint" />
            <mxPoint x="4500" y="-5010" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-98" value="TopoRangeManager&lt;div&gt;用于管理拓扑节点上的不可用区间的工具类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="8870" y="-3103.5" width="1260" height="400" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-99" value="&lt;div&gt;&lt;span style=&quot;background-color: rgb(125, 125, 0);&quot;&gt;只有有黑名单区间的根节点才会存储映射，没有黑名单区间的根节点(整条车道都可以通行)不会在表中&lt;/span&gt;&lt;/div&gt;- range_map_：std::unordered_map&amp;lt;const TopoNode*, std::vector&amp;lt;NodeSRange&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;阻塞区间管理表，用于&lt;span style=&quot;background-color: transparent;&quot;&gt;快速查找某个根节点上不可用的区间，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;key根节点，value该根节点上的若干不可用区间序列&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-98" vertex="1">
          <mxGeometry y="51" width="1260" height="89" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-100" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="POwssWgP0jl_rXd_H6LF-98" vertex="1">
          <mxGeometry y="140" width="1260" height="8" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-101" value="&lt;div&gt;+ TopoRangeManager() = default&lt;/div&gt;&lt;div&gt;默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ Clear()：void&lt;div&gt;清空管理的节点上可用区间范围，清空range_map_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ Add(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，拓扑节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;double start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，黑名单上规定的该节点上的某个不可行区间的起始s&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double end_s)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，黑名单上规定的该节点上的某个不可行区间的末了s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;不可行区间插入函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.将输入的不可通行区间的起终点构造成区间类NodeSRange对象，在不可行区间管理表range_map_中找到输入节点node对应的不可行区间序列并插入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;SortAndMerge()：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;对不可行区间管理表&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;range_map_&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;中的各个节点的不可行区间序列按区间起点从小到大排序并且合并，并过滤掉超出车道范围的部分。&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="POwssWgP0jl_rXd_H6LF-98" vertex="1">
          <mxGeometry y="148" width="1260" height="252" as="geometry" />
        </mxCell>
        <mxCell id="POwssWgP0jl_rXd_H6LF-102" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-28" target="POwssWgP0jl_rXd_H6LF-98" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="7170" y="-4290" as="sourcePoint" />
            <mxPoint x="7480" y="-4430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-1" value="Strategy&lt;div&gt;Apollo路由系统中路径搜索算法的抽象基类，它定义了路径搜索的统一接口&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="10250" y="-3108.5" width="870" height="230" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="SuEpLgHmNtBCKW1reF2S-1" vertex="1">
          <mxGeometry y="50" width="870" height="26" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="SuEpLgHmNtBCKW1reF2S-1" vertex="1">
          <mxGeometry y="76" width="870" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-4" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;virtual Search(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const SubTopoGraph* sub_graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，子拓扑地图&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* src_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索的起始子节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* dest_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索的末了子节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeWithRange&amp;gt;* const result_nodes) = 0：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，得到的路径，用带区间信息的子节点序列表示&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示成功搜得路径&lt;br&gt;&lt;/div&gt;&lt;div&gt;纯虚函数，子类中必须重写&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="SuEpLgHmNtBCKW1reF2S-1" vertex="1">
          <mxGeometry y="84" width="870" height="146" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-5" value="AStarStrategy : public Strategy&lt;div&gt;实现A路径搜索算法的核心类，用于在拓扑图中寻找从指定起点到终点的最优路径&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="10160" y="-2641" width="1460" height="2620" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-6" value="&lt;div&gt;// 构造时写入&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- change_lane_enabled_：bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//搜索时允许换道的标签&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// 在Search函数中进行更新，管理一次从起点到终点搜索时的中间变量&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 注意A*搜索时只有起终点一定是子节点，而搜索过程中扩展的节点不一定是子节点也可能是根节点(但一定是最小颗粒度的节点，不能进一步细分的节点)&lt;/span&gt;，&lt;/div&gt;&lt;div&gt;// 因为在扩展当前节点时是通过连接边来找目标节点的，而局部拓扑图中搜索的起始子节点出边连接的有可能是根节点，后面根节点出边连接的也可能是根节点，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;因此在这里统一称为节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&amp;nbsp;open_set_：std::unordered_set&amp;lt;const TopoNode*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//节点开集，存储待扩展的节点，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;不一定全部扩展完，搜索到终点后剩下未扩展的节点也就不再扩展了&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&amp;nbsp;closed_set_：std::unordered_set&amp;lt;const TopoNode*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//节点闭集，存储已经扩展过的节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&amp;nbsp;came_from_：std::unordered_map&amp;lt;const TopoNode*,&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoNode*&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//前继节点映射表，key是所有通过扩展可以到达的节点(即开集和闭集中的节点)，value是这个节点的前继节点(源节点)。在搜索阶段用于记录路径，在路径重建阶段用于回溯路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(102, 102, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;//&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;生成代价g(generate，从起点到当前节点的移动代价)+启发代价h(heuristic,终点对当前节点的吸引代价)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;// 这两个成员变量实际上表示了从不同路径到达到当前节点时，总代价最小的那条路径的代价值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(102, 102, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;// fix：原始代码中将f代价和g项代价混用，造成歧义，特此修改&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&amp;nbsp;f_score_：std::unordered_map&amp;lt;const TopoNode*, double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// 节点总代价映射表，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;key是所有&lt;/span&gt;通过扩展可以到达&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的节点(即开集和闭集中的节点)，value是这个节点的总代价，保留访问该节点总代价最小的那条路径，用于剪枝&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;-&lt;/span&gt;&amp;nbsp;g_score_：std::unordered_map&amp;lt;const TopoNode*, double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;// 节点生成代价映射表，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;key是所有&lt;/span&gt;通过扩展可以到达&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;的节点(即开集和闭集中的节点)，value是这个节点的g项代价，用于获取父节点的g项代价，从而计算当前节点的g项代价&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//节点可进入位置映射表，key是所有&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过扩展可以到达&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的节点(即开集和闭集中的节点)，value是这个节点的进入位置s，该节点与前继节点是直行连接的取节点的start_s，与前继节点是换道连接的，取从前继节点的进入位置增加最小换道距离5m后的位置作为该节点的进入位置(即从前继节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;最早换道进入该节点对应区间的位置s&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，通过对前继节点上的驶出位置比例映射的方式，得到当前节点的进入位置&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;enter_s_：std::unordered_map&amp;lt;const TopoNode*, double&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="SuEpLgHmNtBCKW1reF2S-5" vertex="1">
          <mxGeometry y="50" width="1460" height="360" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="SuEpLgHmNtBCKW1reF2S-5" vertex="1">
          <mxGeometry y="410" width="1460" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-9" value="类外函数&lt;div&gt;&lt;div&gt;Reconstruct(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::unordered_map&amp;lt;const TopoNode*,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoNode*&amp;gt;&amp;amp; came_from,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，前继节点映射表，就是成员came_from_，用来回溯路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* dest_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索的终点节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeWithRange&amp;gt;* result_nodes) ：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在这次搜索中从起点到终点的有序子节点序列，用带区间信息的子节点来表示&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示路径重建成功&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;路径重建函数，根据成员前继节点映射表came_from_，从终点回溯到起点，重建完整的路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.创建TopoNode对象的vector序列，从输入的终点节点dest_node出发在输入的前继节点映射表came_from中不断的查找前继节点，直到找到起点节点时无法在映射表找到父节点为止，通过while循环实现，在循环内将找到的节点依次推入vector序列&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;使用std::reverse函数将这个序列翻转，此时该TopoNode对象序列是从起点到终点的有序子拓扑节点序列&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.校验子节点序列的连通性并优化&lt;/span&gt;变道，通过类外函数AdjustLaneChange实现&lt;/div&gt;&lt;div&gt;·.转换为最终结果格式，将优化后的拓扑节点序列中的各TopoNode节点对象转换成NodeWithRange对象，依次推入输出result_nodes。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;注意最终结果格式中的&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;NodeWithRange对象绑定节点为最终路径中的子节点所属的根节点，绑定区间为子节点的区间，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;为什么这么设计，在NodeWithRange类中有说明&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;AdjustLaneChange(std::vector&amp;lt;const TopoNode*&amp;gt;* const result_node_vec)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始路由结果的子节点序列。输出，换道优化后的子拓扑节点序列，原地修改&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，false表示原始的子节点序列不具备连通性&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;检查输入的子节点序列是否具有连通性，对于可以连通的序列进行换道优化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果输入的原始子节点序列中的子节点个数少于3个，说明只包含起终点，必然连通，返回true，并且不需要进行换道优化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;分别向后向前校验输入子节点序列的连通性，并向着提高换道富余量的方向提前或者延后换道，通过类外函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AdjustLaneChangeBackward、&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;AdjustLaneChangeForward实现&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;AdjustLaneChangeBackward(&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;const TopoNode*&amp;gt;* const result_node_vec)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，原始路由结果的子节点序列。输出，换道优化后的子拓扑节点序列，原地修改&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//返回，false表示原始的子节点序列不具备连通性&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;从后往前检查子节点序列的连通性，对于可以连通的序列进行换道优化，对于迟早要换道到后继节点的情况，倾向于提前换道&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.在输入的原始路由路径的局部地图子节点序列中，从倒数第二个节点开始向起点方向遍历到第二个节点结束，每次循环取前后各一个节点组成三个节点组优化，分别称为当前节点、前继节点、后继节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.获取当前节点和后继节点之间的连接边，分别在当前节点处检查是否有到后继节点的出边和在后继节点处检查是否有从当前节点来的入边，保证可以获取到两者之间的连接边，如果都找不到说明不具备连通性，返回fasle&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.只对&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前节点和后继节点之间的连接边为左右换道的情况进行优化，直行情况跳过&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.如果前继节点的长度比当前节点的长度小，说明提前换道反而更加局促，不进行优化，跳过循环，只有前继节点比当前节点更长的情况，提前换道才有可能有更大的富余量&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.对于这种情况，在前继节点处找到所有的左右出边，在这些出边的目标节点中只有可以连接到后继节点(通过各目标节点的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetOutEdgeTo函数判断到后继节点的出边是否存在来判断是否连通&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)的那部分才会当做候选节点来替换当前节点，当然这些候选节点中包含当前节点&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.在候选节点中找到长度最长的子节点作为最优节点&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(通过类外函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetLargestNode获取&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，在输入的原始子节点序列&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;result_node_vec中原地替换当前节点&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;·.循环完成后，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;子节点序列&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;result_node_vec也就优化完成，作为最后的结果进行输出&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;AdjustLaneChangeForward(&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;std::vector&amp;lt;const TopoNode*&amp;gt;* const result_node_vec)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，原始路由结果的子节点序列。输出，换道优化后的子拓扑节点序列，原地修改&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//返回，false表示原始的子节点序列不具备连通性&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;从前往后检查子节点序列的连通性，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;对于可以连通的序列进行换道优化&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，对于马上要从前继节点换道的情况，倾向于延后换道&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.在输入的原始路由路径的局部地图子节点序列中，从第二个节点开始向终点方向遍历到倒数第二个节点结束，每次循环取前后各一个节点组成三个节点组优化，分别称为当前节点、前继节点、后继节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.获取前继节点和当前节点之间的连接边，分别在前继节点处检查是否有到当前节点的出边和在当前节点处检查是否有从前继节点来的入边，保证可以获取到两者之间的连接边，如果都找不到说明不具备连通性，返回fasle&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.只对前继&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点和当前节点之间的连接边为左右换道的情况进行优化，直行情况跳过&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.如果后继节点的长度比当前节点的长度小，说明延后换道反而更加局促，不进行优化，跳过循环，只有后继节点比当前节点更长的情况，延后换道才有可能有更大的富余量&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.对于这种情况，在后继节点处找到所有的左右入边，在这些入边的源节点中只有可以连接到前继节点(通过各源节点的&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetInEdgeFrom函数判断从前继节点来的入边是否存在来判断是否连通&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)的那部分才会当做候选节点来替换当前节点，当然这些候选节点中包含当前节点&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.在候选节点中找到长度最长的子节点作为最优节点(通过类外函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetLargestNode获取&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，在输入的原始子节点序列&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;result_node_vec中原地替换当前节点&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;div&gt;·.循环完成后，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;子节点序列&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;result_node_vec也就优化完成，作为最后的结果进行输出&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetLargestNode(const std::vector&amp;lt;const TopoNode*&amp;gt;&amp;amp; nodes)：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，候选子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，候选子节点中长度最长的那个&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;从候选子节点中找到长度最长的那个节点，并返回&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;GetCostToNeighbor(const TopoEdge* edge)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前访问的节点的一个候选出边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，从当前访问节点延候选出边移动到目标节点的移动代价&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;包含沿edge移动的车道间转化代价和通过edge目标节点的通行代价两部分之和，均通过Node和Edge的proto数据获取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;·.注意：这里edge的代价来自于其对应的原始边pb数据中的代价(输入的edge有可能是子边，也就是源节点或目标节点至少有一个是子节点；其对应的原始边指的是源节点和目标节点都是根节点)，而原始边的代价与源根节点的变道出口总长度有关，而子边的变道总长度显然小于原始边，若仍然继承原始边的cost显然太过于粗糙；同理edge目标节点的通行代价也继承自目标子节点(edge有可能是子边，如果子边的目标节点是子节点的话)所属根节点pb数据中的代价，这个代价与根节点对应车道的总长有关，而子节点的长度显然小于根节点，若仍然继承根节点的cost也是太过于粗糙&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="SuEpLgHmNtBCKW1reF2S-5" vertex="1">
          <mxGeometry y="418" width="1460" height="872" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="SuEpLgHmNtBCKW1reF2S-5" vertex="1">
          <mxGeometry y="1290" width="1460" height="8" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-8" value="&lt;div&gt;+&amp;nbsp;explicit AStarStrategy(bool enable_change);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，是否允许搜索换道路由&lt;/div&gt;&lt;div&gt;显式构造&lt;/div&gt;&lt;div&gt;·.将输入的开关存储到成员change_lane_enabled_，用于在搜索时是否允许搜索换道路由&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ virtual Search(&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&lt;/span&gt;const TopoGraph* graph, &lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，全局拓扑地图，没有用到&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;const SubTopoGraph* sub_graph,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，子拓扑地图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;const TopoNode* src_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，局部搜索的起始子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;const TopoNode* dest_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，局部搜索的末了子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&#x9;&#x9;&#x9;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeWithRange&amp;gt;* const result_nodes)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输出，得到的路径，用带区间信息的子节点序列表示&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//返回，true表示成功搜得路径&lt;/span&gt;&lt;/div&gt;&lt;div&gt;A*搜索核心实现函数&lt;/div&gt;&lt;div&gt;·.清空历史数据，调用Clear函数。由于是成员变量，生命周期捕鱼当前函数一致，若不清空会存在内存泄漏&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;添加搜索起点，使用的是从起点到终点的搜索&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.将输入的搜索起点src_node从拓扑节点TopoNode类型转化为搜索节点SearchNode类型，并添加节点总代价(起始点只有启发代价h，通过成员函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;HeuristicCost计算&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)和g项代价(起始节点的g项代价为0)到成员f_score_、g_core_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.创建局部变量开集优先队列，用于自动将每一步搜索时的待选节点按照总cost升序排列。由于是局部变量，因此在该函数结束后自动释放对应栈内存，不存在内存泄漏问题&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.将起始节点添加到成员开集open_set_，添加起始节点的驶入位置(起始节点的驶入位置就是节点的start_s)，添加键值对到成员enter_s_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;·.while循环进行路径搜索，每一次循环都是从当前起点出发寻找可行后继节点的过程，称为搜索的一个步长，当优先队列中有可选候补节点时搜索会一直进行&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.每次搜索步长从优先队列中找到总代价最小的候补节点进行探索，该节点位于优先队列的队首，是当前搜索步长中的源节点。&lt;span style=&quot;background-color: rgb(102, 102, 0);&quot;&gt;贪心算法的思想&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.判断当前节点是否已经到达了输入的局部搜索的末了节点dest_node。如果到达终点，调用类外函数Reconstruct在前继关系映射表成员came_from_中通过回溯的方式获取完整的局部搜索路径，并且优化换道时机&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.当前节点在这一次搜索步长中一定会被扩展，因此需要将其从候选节点中删除。在开集成员open_set_和优先队列中删除当前节点&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;·.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Clear()：void&lt;/div&gt;&lt;div&gt;清空函数，将数据成员中的集合和映射表清空&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;HeuristicCost(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* src_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，搜索走到的当前节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* dest_node)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索的末了子节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，当前节点的启发式代价，用两节点之间的曼哈顿距离当做启发代价&lt;br&gt;&lt;/div&gt;&lt;div&gt;获取当前节点到终点的启发代价&lt;/div&gt;&lt;div&gt;获取当前节点和终点节点的锚点，来近似代表节点在高精地图中的位置&lt;/div&gt;&lt;div&gt;计算两个锚点之间的曼哈顿距离，即x和y方向之差的绝对值和，用曼哈顿距离来表示当前节点的启发代价&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- GetResidualS(const TopoNode* node)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前开集节点中cost最小的节点，即当前正在访问的节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，当前正在访问的节点的剩余长度，用来判断当前访问的节点是否满足换道长度要求&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;获取指定节点的剩余距离，指定节点是开集中的点，已经计算好进入位置，因此可以计算剩余长度，用来判断当前访问的节点是否满足换道长度要求&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;当前正在访问的节点就是从开集中取到的，因此可在成员节点进入位置映射表enter_s_中获取到其进入位置s&lt;/div&gt;&lt;div&gt;·.从成员enter_s_中获取当前访问节点node的进入位置s，作为剩余区间的起点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;从&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;当前访问节点node的全部出边中，找到目标节点与node在同一车道的节点(即出边方向为前向)，此时剩余区间的终点可延长至目标节点的区间终点；否则剩余区间终点为当前访问节点node的区间终点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.返回剩余区间的长度&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;·.为什么这么计算剩余区间终点？&lt;/span&gt;因为目的是判断从当前车道是否可以换道到临车道，而非必须从当前访问节点对应的车道区间就必须换过去，因此稍微放松了一下检查条件，只是向后延长了一个节点的距离&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- GetResidualS(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoEdge* edge,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，从当前正在访问节点出发的一条候选出边，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;左右换道出边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* to_node)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，这条候选出边的目标节点，也就是待访问节点，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;其实可以从候选出边的ToNode成员函数中获取目标节点，不用增加这个入参&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，目标节点的剩余长度，用来判断待访问节点是否满足换道长度的要求&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，从而判断目标节点是否进入开集作为待访问节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;获取候选出边的目标节点的剩余长度，用来判断目标节点是否满足换道长度的要求，从而判断目标节点是否进入开集作为待访问节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;由于目标节点此时还未进入开集，因此还没有计算其进入位置，故需要借助输入edge的源节点来计算目标节点的进入位置，而源节点是当前正在访问的节点，已经计算过其进入位置&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.获取输入候选边的源节点，在成员enter_s_中获取该源节点的进入位置s，计算该位置在根节点中的位置比例(即计算源节点进入位置s在base_map中整条单根车道中所占的比例)等比缩放到目标节点所在整条车道上，得到源节点进入位置在目标节点所在车道上的投影点s，同时还要结合目标节点(如果是子节点的话)所对应的车道段的区间，来最终确定目标节点剩余区间起点s。&lt;/div&gt;&lt;div&gt;·.剩余区间的终点s计算同上，同样采用同车道延长一个节点的方式确定。&lt;/div&gt;&lt;div&gt;·.返回剩余区间长度&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;·.注意，&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TopoNode的Length成员函数返回的是对应根节点的长度&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;·.为什么通过比例映射的方式计算&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点进入位置在目标节点所在车道上的投影点s？&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;不同车道的起点不同因此s轴起点不同，故不同车道上的s不能直接比较，通过比例映射的方式可以近似得到当前车道上的s点在目标车道上的投影点的位置s(否则需要在xy坐标系下进行投影计算，路由计算的误差容许度较大，费这部分算力不划算)。未保证在换道计算时不会产生过大的误差，这就需要在制图时对车道的划分尽量保证相邻车道间平行度较高且不同车道起终点尽量平齐&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="SuEpLgHmNtBCKW1reF2S-5" vertex="1">
          <mxGeometry y="1298" width="1460" height="1322" as="geometry" />
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-9" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="SuEpLgHmNtBCKW1reF2S-1" target="SuEpLgHmNtBCKW1reF2S-5" edge="1">
          <mxGeometry y="3" width="160" relative="1" as="geometry">
            <mxPoint x="10500" y="-2341.25" as="sourcePoint" />
            <mxPoint x="10760" y="-2551.25" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SuEpLgHmNtBCKW1reF2S-10" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-28" target="SuEpLgHmNtBCKW1reF2S-1" edge="1">
          <mxGeometry x="-0.1468" y="-69" width="160" relative="1" as="geometry">
            <mxPoint x="7310" y="-4110" as="sourcePoint" />
            <mxPoint x="7720" y="-4220" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-xp7tS0AX5Svhc8jlveX-1" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="LWFpOxd7QR8SVaHnObAa-121" target="LWFpOxd7QR8SVaHnObAa-123" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-16270" y="-3430" as="sourcePoint" />
            <mxPoint x="-15860" y="-3540" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VIuKmsCzFv6FMllA9sDi-1" value="NodeWithRange : public NodeSRange&lt;div&gt;用于表示带有可通行区间信息的拓扑节点的类。&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;在表示子拓扑节点时一个节点对应一个可通行区间。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在表示根节点时绑定的是这个根节点中的某个可行区间，这样设计的目的是，子节点只在路径搜索这一局部功能内使用，根节点的可以作为持久变量再各模块内传递，同时又想要保留子节点中的精确可行区间，因此此时NodeWithRange类通过绑定根节点和子节点的可行区间作为最终路由结果中的节点对象在各模块间传递&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=97;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="11470" y="-7197" width="918" height="347" as="geometry" />
        </mxCell>
        <mxCell id="VIuKmsCzFv6FMllA9sDi-2" value="-const topo_node_ = nullptr：TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;绑定的拓扑节点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VIuKmsCzFv6FMllA9sDi-1" vertex="1">
          <mxGeometry y="97" width="918" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VIuKmsCzFv6FMllA9sDi-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="VIuKmsCzFv6FMllA9sDi-1" vertex="1">
          <mxGeometry y="123" width="918" height="8" as="geometry" />
        </mxCell>
        <mxCell id="VIuKmsCzFv6FMllA9sDi-4" value="&lt;div&gt;+ NodeWithRange(const NodeWithRange&amp;amp; other) = default;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;默认拷贝构造&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;NodeWithRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，子拓扑节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double start_s, double end_s);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，该子拓扑节点对应的可通行区间信息&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入子拓扑节点存储在成员topo_node_中。对应的可通行区间存储在父类NodeSRange之中，调用&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;NodeSRange类&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;NodeWithRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，子拓扑节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const NodeSRange&amp;amp; range);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，该子拓扑节点对应的可通行区间信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;输入子拓扑节点存储在成员topo_node_中。对应的可通行区间存储在父类NodeSRange之中，调用&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;NodeSRange类拷贝&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;构造函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VIuKmsCzFv6FMllA9sDi-1" vertex="1">
          <mxGeometry y="131" width="918" height="216" as="geometry" />
        </mxCell>
        <mxCell id="VIuKmsCzFv6FMllA9sDi-5" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="POwssWgP0jl_rXd_H6LF-75" target="VIuKmsCzFv6FMllA9sDi-1" edge="1">
          <mxGeometry x="-0.0813" y="-3" width="160" relative="1" as="geometry">
            <mxPoint x="11808" y="-7350" as="sourcePoint" />
            <mxPoint x="12068" y="-7560" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-4" value="SubTopoGraph&lt;div&gt;子拓扑图类，用于任意途经点之间的局部搜索使用。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;只会对有阻塞区间的根节点的子节点进行存储，与全局拓扑图之间的连接关系通过成员函数InitSubEdge和AddPotentialInEdge建立连接，因此在子拓扑图中的搜索不会出现由于子节点之间连接关系中断导致的局部搜索失败&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="7270" y="-7756" width="1600" height="2320" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-5" value="&lt;div&gt;// 以下成员在函数InitiateSubNodeByValidRange中初始化，此外topo_nodes_还会在成员函数InitSubEdge和AddPotentialInEdge中存储额外的边&lt;/div&gt;&lt;div&gt;// 注意以下子节点和子边中的pb数据都继承自根节点和原始边的pb数据&lt;/div&gt;&lt;div&gt;- topo_nodes_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;TopoNode&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//子拓扑图中包含的全部子节点，通过各可通行区间构造的子节点，不包含全局拓扑图中的节点(根节点)，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;只存储有黑名单区间序列的根节点的子节点，对于全段可行的根节点不存储&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- topo_edges_：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;TopoEdge&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;子拓扑图中包含的全部子边，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;这些边不仅是topo_nodes_中的子节点之间的连接关系，还包含子节点与根节点之间的连接关系从而实现子图与全局拓扑图之间的连接&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//根节点到子节点及其可通行区间之间的映射。key根节点，value包含的全部子节点及其可通行区间信息，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;子节点按照可通行区间递增排列&lt;/span&gt;，用于快速查找某个根节点对应的所有子节点及其范围。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;即便根节点的子节点不存在，也会保留映射位置，会对所有有黑名单的根节点创建子节点映射&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_range_sorted_map_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::unordered_map&amp;lt;const TopoNode*, std::vector&amp;lt;NodeWithRange&amp;gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- sub_node_map_：&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;std::unordered_map&amp;lt;const TopoNode*, std::unordered_set&amp;lt;TopoNode*&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;根&lt;span style=&quot;white-space: pre;&quot;&gt;节点到子节点之间的映射，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;用于快速查找某个&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点对应的所有子节点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KL7Bf0c9CU3vlH3phpP1-4" vertex="1">
          <mxGeometry y="50" width="1600" height="180" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="KL7Bf0c9CU3vlH3phpP1-4" vertex="1">
          <mxGeometry y="230" width="1600" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-8" value="//类外函数&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;MergeBlockRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* topo_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图中的节点&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，来源于局部搜索阻塞区间管理表&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;NodeSRange&amp;gt;&amp;amp; origin_range,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输入，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点上的原始阻塞区域列表&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，来源于局部搜索阻塞区间管理表&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeSRange&amp;gt;* block_range)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;//输出，排序合并后的阻塞区域列表&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;将根节点上的原始的阻塞区域列表进行排序、合并重叠区域，并过滤掉超出车道范围的部分，生成最终的阻塞区域列表。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;GetSortedValidRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* topo_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图中的节点&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，来源于局部搜索阻塞区间管理表&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;NodeSRange&amp;gt;&amp;amp; origin_range,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点上的原始阻塞区间序列，来源于局部搜索阻塞区间管理表&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;NodeSRange&amp;gt;* valid_range)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点上可以通行的区间序列，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;已将排序合并完毕&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;根据阻塞区域计算车道的有效通行范围&lt;/div&gt;&lt;div&gt;·.对根节点上的原始阻塞区间进行排序合并，调用类外函数MergeBlockange完成。这里的排序合并操作重复了，因为在更新局部搜索阻塞区间管理表时都会进行重新排序合并，因此输入的原始阻塞区间是处理好的&lt;/div&gt;&lt;div&gt;·.将输入节点topo_node对应车道的起点s的数值、当前车道各阻塞区间的左右边界&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的s数值&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;、车道的终点s&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的数值&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，按顺序依次存储到vector中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.在这个数组中两两s值对应的区间就是可通行区间的左右边界，构造成区间类NodeSRange对象，依次推入到输出valid_range中。注意这里即便存在某一阻塞区间在车道起点开始或存在某一阻塞区间在车道终点结束，在计算可通行区域时在起终点处还会按点的形式(区间左右边界重合)存储到输出中。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;由于原始阻塞区间是排序合并好的序列，因此生成的可通行区间也是按s增长方向排好序且互相没有交集的序列&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KL7Bf0c9CU3vlH3phpP1-4" vertex="1">
          <mxGeometry y="238" width="1600" height="466" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="KL7Bf0c9CU3vlH3phpP1-4" vertex="1">
          <mxGeometry y="704" width="1600" height="8" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-7" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;SubTopoGraph(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::unordered_map&amp;lt;const TopoNode*,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::vector&amp;lt;NodeSRange&amp;gt;&amp;gt;&amp;amp; black_map)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，局部搜索所用的阻塞区间管理表，key根节点，value根节点对应车道上的不可行区间。&lt;/span&gt;&lt;div&gt;构造函数，根据黑名单（阻塞区域）信息，创建一个排除阻塞区域的子拓扑图，用于路径搜索。&lt;/div&gt;&lt;div&gt;·.处理每个车道，创建子节点。遍历输入黑名单black_map中的各条车道(根节点)，根据不可行区间计算这条车道的可行区间，调用类外函数GetSortedValidRange实现；然后为每一个前面获取的可通行区间创建子节点与之对应，并存储进成员topo_nodes_中，调用成员函数InitSubNodeByValidRange完成。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;当前遍历完各个有阻塞区间的根节点时子拓扑图中的子节点成员也就初始化完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;为每个车道的子节点创建连接边。再次遍历输入阻塞区间序列映射表中的各根节点，为拓扑图中的子节点创建全部的入边和出边，调用成员函数InitSubEdge完成。&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;子拓扑图就是通过这些边实现与全局拓扑图的连接，而非是通过存储拓扑节点实现连接。遍历完全部有阻塞区间的根节点后子图中的边成员topo_edges_也就存储完备&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.添加潜在边。调用成员函数AddPotentialEdge完成&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ GetSubNodeWithS(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* topo_node,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，用户指定根节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double s) const：const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，用户指定s&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，在指定根节点的全部可行区间序列中找到第一个包含s的那个区间，并返回该区间对应的子节点&lt;br&gt;&lt;/div&gt;&lt;div&gt;在指定根节点的全部可行区间序列中找到包含s的那个区间，并返回该区间对应的子节点&lt;/div&gt;&lt;div&gt;·.在映射表成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_range_sorted_map_中找到输入根节点topo_node对应的全部子节点区间，若找不到该根节点，直接返回输入的根节点的指针&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;上面找到的子节点区间是已经按s升序排列好的，在这个区间序列中找到第一个包含输入s的区间，通过区间操作工具头文件range_utils.h中的函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;BinarySearchForStartS实现，如果得到的区间索引无效，返回空指针&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;如果是有效索引，返回这个区间对应的子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ GetSubInEdgesIntoSubGraph(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoEdge* edge,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，粗颗粒度的原始边，原始边的目标节点颗粒度较粗&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_set&amp;lt;const TopoEdge*&amp;gt;* const sub_edges) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储精细化后的子图入边集合(由于子图只存储子节点，子图入边指的是目标节点为子节点的入边)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;入边转换，将粗粒度的原始拓扑边转换为细粒度的子图入边。这个函数的用途是：在进行从起点到终点的路径搜索时，对于下一步要放入开集的节点进行精细化查找，保证都是最小颗粒度的节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果输入edge的目标节点是子节点，或者目标节点为没有子节点的根节点，说明此时原始边已经不能进一步精细化为若干子图入边。只返回原始边&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入edge的目标节点在子图中有子节点(通过成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetSubNodes获取原始边目标节点在当前子图中的全部子节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，说明可以将原始边细化成指向子图子节点的子图入边。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;遍历每一个上述子节点的每条入边，找到这些入边的源节点与原始边源节点一致的那些入边，作为输出的子图入边集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;fix：原始逻辑中当前原始边的源节点为子节点时也认为原始边不能进一步细化，此时若原始边的目标节点在子图中有子节点时可能忽略这种情况下的细化操作导致bug，应删除该条件。上面写的是修正后的步骤&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;+ GetSubOutEdgesIntoSubGraph(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const TopoEdge* edge,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，粗颗粒度的原始边，原始边的源节点颗粒度较粗&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_set&amp;lt;const TopoEdge*&amp;gt;* const sub_edges) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，存储精细化后的子图出边集合(由于子图只存储子节点，子图出边指的是源节点为子节点的出边)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;出边转换，将粗粒度的原始拓扑边转换为细粒度的子图出边。这个函数的用途是：在进行从终点到起点的路径搜索时，对于下一步要放入开集的节点进行精细化查找，保证都是最小颗粒度的节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果输入edge的源节点是子节点，或者源节点为没有子节点的根节点，说明此时原始边已经不能进一步精细化为若干子图出边。只返回原始边&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;如果&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入edge的源节点在子图中有子节点(通过成员函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetSubNodes获取全部子节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)，说明可以将原始边细化成来自子图子节点的子图出边。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;遍历每一个上述子节点的每条出边，找到这些出边的目标节点与原始边目标节点一致的那些出边，作为输出的子图出边集合&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;·.&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;fix：原始逻辑中当前原始边的目标节点为子节点时也认为原始边不能进一步细化，此时若原始边的源节点在子图中有子节点时可能忽略这种情况下的细化操作导致bug，应删除该条件。上面写的是修正后的步骤&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;InitSubNodeByValidRange(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* topo_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图中的节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(根节点)，有黑名单区间的根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;NodeSRange&amp;gt;&amp;amp; valid_range)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，原始节点上的可通行区间序列，已经排序合并完成，类外函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GetSortedValidRange的输出&lt;/span&gt;&lt;/div&gt;&lt;div&gt;将一个车道的有效范围分割成多个子节点，并在相邻的子节点之间创建&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;前向连接边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.创建子图中的子节点。遍历输入的原始节点的可通行区间序列valid_range中的每一个区间，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.判断当前区间是否过小(区间长度小于0.01)，过小区间跳过不创建子节点。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;由于输入的可行区间序列中会存在点形式的区间，这一步可以将这些区间过滤&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在各可行区间上构造子拓扑节点，调用TopoNode类的子节点构造函数完成&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将子节点与其绑定的可行区间实例化成NodeWithRange类对象，与输入的根节点topo_node构成映射推入映射表成员sub_node_range_sorted_map_。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;注意在&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_range_sorted_map_留出根节点的映射位置是在循环外完成的，因此无论输入的根节点是否有可行区间序列都会留有这个映射位置&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.将子节点与根节点的映射推入映射表成员&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_map_，最后将子节点推入当前子图中的子节点集合成员topo_nodes_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.创建子图中的边。将上一步循环生成的子节点序列存储在局部变量中，由于根节点的可行区间是按s增大方向排好序的，因此生成的子节点也是按s增大方向排列好的，两两遍历子节点，如果两子节点对应的区间相距过近(&amp;lt;1e-6)在二者之间添加指向前方的边&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.判断两子节点区间是否过近，不近的话跳过不添加边&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.对于过近的子节点，创建边的数据类Edge对象，转换cost设置为0，通过这个Edge对象和前后继自己点构造边的封装类TopoEdge对象，并在两个子节点上添加该边，前继节点调用成员函数AddOutEdge，后&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;继节点调用成员函数AddInEdge&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.最后将该边推入到子图的边集合成员topo_edges_&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;InitSubEdge(const TopoNode* topo_node)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，全局拓扑地图中有阻塞区间序列的根节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;将输入根节点在全局拓扑图中的出边和入边附到其对应的子节点上(这些子节点就是子图中保存的子节点)，这些边的另一端有可能是有阻塞区间的根节点的子节点或者全段可行的根节点&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;(这些全段可行的根节点在全局图中存储而不在子图中存储，子图就是通过保存子节点对这些根节点的连接关系从而实现与全局图的连接)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，并将这些出入边存储进成员topo_edges_中。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;通过遍历所有有阻塞区间的根节点来调用该函数，从而实现topo_edges_存储的完备&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.获取输入根节点的全部子节点，通过成员函数GetSubNodes实现。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;·.遍历这些子节点，将其所属根节点(即输入根节点)在全局拓扑图中的出入边附到这些子节点上，并保存在子图中，调用成员函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitInSubNodeSubEdge完成入边的添加，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitOutSubNodeSubEdge完成出边的添加&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- InitInSubNodeSubEdge(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TopoNode* const sub_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，有阻塞区间根节点的子节点，子图存储的节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::unordered_set&amp;lt;const TopoEdge*&amp;gt; origin_edge)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，上面&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;根节点在全局拓扑地图中的所有&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;入边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;为子节点创建入边，将其所属根节点在全局图中的入边赋给该子节点，实现输入子节点与全局拓扑图的连接&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.遍历输入的根节点全部入边origin_edge中的各入边，判断各入边的源节点是否有子节点，通过成员函数GetSubNodes获取子节点集合，只有入边的源节点的子节点也存储在当前子图中才会获取成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果可以获取有效的属于输入入边的源节点的子节点集合，再次遍历这些属于&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点的子节点，判断与输入子节点之间是否存在足够的重合度，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点的子节点的成员函数IsOverlapEnough判断&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重合度不够的跳过&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重合度足够的，将输入子节点作为目标节点，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点的子节点为源节点，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;继承原始入边的pb数据&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，构建拓扑边封装类TopoEdge对象。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;有若干个重合度足够的&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点的子节点，就有若干条入边连接到输入子节点&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;。将这些入边添加到输入子节点中(通过输入子节点的AddInEdge函数实现)，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;并将这些边存储到边存储器成员topo_edges_中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点不包含子节点，说明该源节点是全段可行的根节点并存储在全局拓扑图中。如果输入的子节点与该&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入入边的&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;源节点之间有足够的重合度(通过源节点的成员函数IsOverlapEnough判断)，以子节点所在根节点与其源节点之间的边数据类Edge对象为基础，将目标节点设置为子节点，创建拓扑边封装类TopoEdge对象，将该边作为子节点的入边添加到子节点中(通过子节点的AddInEdge成员函数实现)，并将该边存储到边存储器成员topo_edges_中。&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这一步实现了与全局拓扑图中的根节点相连。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- InitOutSubNodeSubEdge(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TopoNode* const sub_node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;有阻塞区间根节点的子节点&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，子图存储的节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::unordered_set&amp;lt;const TopoEdge*&amp;gt; origin_edge)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;有阻塞区间根节点在全局拓扑地图中的所有出&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;边&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;为子节点创建出边&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，将根节点在全局图中的出边赋给其包含的子节点，实现子节点与全局拓扑图的连接&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.遍历输入的根节点全部出边origin_edge中的各出边，判断各出边的目标节点是否有子节点，通过成员函数GetSubNodes获取子节点集合，只有出边的目标节点的子节点也存储在当前子图中才会获取成功&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果可以获取有效的属于输入出边的目标节点的子节点集合，再次遍历这些属于&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入出边的目标&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点的子节点，判断与输入子节点之间是否存在足够的重合度，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;子节点的成员函数IsOverlapEnough判断&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重合度不够的跳过&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;重合度足够的，将输入子节点作为源节点，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入出边的目标&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点的子节点为目标节点，&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;继承原始出边的pb数据&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;构建拓扑边封装类TopoEdge对象。&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;有若干个重合度足够的&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入出边的目标&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点的子节点，就有若干条出边从输入子节点连接过去&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;。将这些出边添加到输入子节点中(通过输入子节点的AddOutEdge函数实现)，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;并将这些边存储到边存储器成员topo_edges_中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;如果&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入出边的目标&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点不包含子节点，说明该目标节点是全段可行的根节点并存储在全局拓扑图中。如果输入的子节点与该&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入出边的目标&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;节点之间有足够的重合度(通过输入子节点的成员函数IsOverlapEnough判断)，以子节点所在根节点与其目标节点之间的边数据类Edge对象为基础，将目标节点设置为输入出边的目标节点，创建拓扑边封装类TopoEdge对象，将该边作为输入子节点的出边添加到子节点中(通过子节点的AddInEdge成员函数实现)，并将该边存储到边存储器成员topo_edges_中。&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;这一步实现了与全局拓扑图中的根节点相连。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- GetSubNodes(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const TopoNode* node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，根节点&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_set&amp;lt;TopoNode*&amp;gt;* const sub_nodes) const&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，该根节点包含的全部子节点集合&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，true表示在子拓扑图中的映射表成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_map_中可以找到根节点对应的映射&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;通过输入的根节点找到子拓扑图中对应的全部子节点集合&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在映射表成员&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sub_node_map_中根据输入的根节点查找即可&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;AddPotentialEdge(const TopoNode* topo_node)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，全局拓扑地图中有阻塞区间序列的根节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;对输入有阻塞区间序列的根节点的子节点(子图中存储的子节点)添加潜在边，这些潜在边目前只关注了其所属根节点的左右入边和左右出边，成员函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;InitSubEdge的功能可以覆盖该函数，故不再详细说明&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="KL7Bf0c9CU3vlH3phpP1-4" vertex="1">
          <mxGeometry y="712" width="1600" height="1608" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-11" value="&lt;font style=&quot;font-size: 17px;&quot;&gt;range_utils.h&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 17px;&quot;&gt;与区间搜索有关的工具函数头文件&lt;/font&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=left;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=52;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=default;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="10330" y="-10110" width="1240" height="890" as="geometry" />
        </mxCell>
        <mxCell id="KL7Bf0c9CU3vlH3phpP1-12" value="&lt;div&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div&gt;BinarySearchForSLarger(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;T&amp;gt;&amp;amp; sorted_vec,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，按区间左边界s升序排列好的区间序列，&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;应对该区间序列进行合并操作后传入，不然会有bug&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double value_s)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，用户指定s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，在输入的区间序列中第一个区间左端点s大于等于或者整个区间包含用户给定s的区间索引&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;二分查找，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在输入的区间序列中找到第一个起始s大于等于或整个区间包含用户给定s的区间的索引&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;返回-1表示输入区间序列为空，无法找到期望区间&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div&gt;BinarySearchForSSmaller(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;T&amp;gt;&amp;amp; sorted_vec,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，按区间左边界s升序排列好的区间序列&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;，应对该区间序列进行合并操作后传入，不然会有bug&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double value_s)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，用户指定s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，在输入的区间序列中最后一个区间右端点s小于等于或者整个区间包含用户给定s的区间的索引&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;二分查找，&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;在输入的区间序列中找到最后一个末端s小于等于或整个区间包含用户给定s的区间的索引&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;返回-1表示输入区间序列为空，无法找到期望区间&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;BinarySearchCheckValidSIndex(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;T&amp;gt;&amp;amp; sorted_vec,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，按区间左边界s升序排列好的区间序列&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;int index,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，上面二分查找找到的区间在序列中的索引号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double value_s)：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，用户指定s&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，-1表示不是有效区间，若是有效区间返回区间索引&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;检查上面二分查找找到的区间是否可以包含用户指定s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.如果输入的index为-1，表示二分查找失败，自然没有有效区间，这里也返回-1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;判断输入index对应的区间是否包含用户指定的s，不包含返回-1，包含返回区间索引index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;BinarySearchForStartS(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;T&amp;gt;&amp;amp; sorted_vec,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，按区间左边界s升序排列好的区间序列&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double value_s)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，用户指定s，是一个区间的start_s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，返回在输入区间序列中第一个包含用户指定s的区间索引&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;查找在输入区间序列中第一个包含用户指定s的区间索引&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;二分查找满足要求的区间索引，可能包含用户指定s或大于用户指定s，通过函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BinarySearchForSLarger实现&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;验证该索引的有效性，通过函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BinarySearchCheckValidSIndex进行校验，并返回校验后的结果&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;template &amp;lt;typename T&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BinarySearchForEndS(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::vector&amp;lt;T&amp;gt;&amp;amp; sorted_vec,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;输入，按区间左边界s升序排列好的区间序列&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double value_s)：&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//输入，用户指定s，是一个区间的end_s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回，返回在输入区间序列中最后一个包含用户指定s的区间索引&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;查找在输入区间序列中最后一个包含用户指定s的区间索引&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;二分查找满足要求的区间索引，可能包含用户指定s或小于用户指定s，通过函数&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BinarySearchForSSmaller实现&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;验证该索引的有效性，通过函数&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;BinarySearchCheckValidSIndex进行校验，并返回校验后的结果&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;fontStyle=0;horizontal=1;" parent="KL7Bf0c9CU3vlH3phpP1-11" vertex="1">
          <mxGeometry y="52" width="1240" height="838" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-3" value="SearchNode struct&lt;div&gt;A*算法搜索时所用的节点数据结构，用于在优先队列中排序的节点类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="11819" y="-1190" width="1000" height="380" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-4" value="&lt;div&gt;+ topo_node = nullptr：const TopoNode*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该节点绑定的拓扑节点&lt;/div&gt;&lt;div&gt;+ f = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该节点的总代价&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HBgPZBxCrNer1Vsl_gqC-3" vertex="1">
          <mxGeometry y="50" width="1000" height="80" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="HBgPZBxCrNer1Vsl_gqC-3" vertex="1">
          <mxGeometry y="130" width="1000" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-6" value="&lt;div&gt;+&amp;nbsp;SearchNode() = default&lt;/div&gt;&lt;div&gt;默认构造函数&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+&amp;nbsp;explicit SearchNode(const TopoNode* node)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前节点需要绑定的拓扑节点&lt;div&gt;显式构造函数&lt;/div&gt;&lt;div&gt;·.列表初始化，将输入的拓扑节点存储在成员topo_node中，当前节点的总代价f初始值为inf&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ SearchNode(const SearchNode&amp;amp; search_node) = default;&lt;/div&gt;&lt;div&gt;默认拷贝构造&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ operator&amp;lt;(const SearchNode&amp;amp; node) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，待比较的节点，运算符&quot;&amp;lt;&quot;右侧的节点&lt;/div&gt;&lt;div&gt;重载比较运算符&lt;/div&gt;&lt;div&gt;·.按两节点总代价的比较结果取反输出，例如：当前节点的f小于比较节点node的f，返回false&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;·.&lt;/span&gt;为什么这么设计？std::priority_queue默认是最大堆，即在队首的是比较运算中较大的那个元素，我们想让总代价最小的排在队首，因此设计比较运算符的结果是总代价比较结果的取反&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HBgPZBxCrNer1Vsl_gqC-3" vertex="1">
          <mxGeometry y="138" width="1000" height="242" as="geometry" />
        </mxCell>
        <mxCell id="HBgPZBxCrNer1Vsl_gqC-7" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;edgeStyle=orthogonalEdgeStyle;curved=1;" parent="1" source="SuEpLgHmNtBCKW1reF2S-5" target="HBgPZBxCrNer1Vsl_gqC-3" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="11440" y="-2580" as="sourcePoint" />
            <mxPoint x="11850" y="-2690" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="Page-1" id="c4acf3e9-155e-7222-9cf6-157b1a14988f">
    <mxGraphModel dx="9934" dy="2975" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="1" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="oxPOzmRVD7sxvV5kMznU-1" value="" style="verticalLabelPosition=bottom;verticalAlign=top;html=1;shape=mxgraph.basic.rect;fillColor2=none;strokeWidth=4;size=20;indent=5;strokeColor=#FF0080;labelBorderColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-1600" y="-610" width="1290" height="1220" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-60" value="" style="verticalLabelPosition=bottom;verticalAlign=top;html=1;shape=mxgraph.basic.rect;fillColor2=none;strokeWidth=4;size=20;indent=5;strokeColor=#FF0080;labelBorderColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-2100" y="-1550" width="2020" height="700" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-10" value="Obstacle" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-1270" y="6270" width="1430" height="1750" as="geometry" />
        </mxCell>
        <mxCell id="R6yMHHjHUhYibpEbnA3r-4" value="-history_decision_:std::map&amp;lt;uint8_t, HistoryObjectDecision&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;一个障碍物的历史帧决策统计结果表，key为历史帧id，当前帧为0，往历史方向逐渐递增" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="26" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-11" value="&lt;div&gt;-path_st_boundary_: STBoundary&amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;障碍物基于路径的st边界，该边界为不考虑caution的部分&lt;/div&gt;&lt;div&gt;-probability_st_boundary_:&amp;nbsp;std::vector&amp;lt;std::vector&amp;lt;STPoint&amp;gt;&amp;gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物基于路径的st边界，该边界为考虑caution的部分，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;二维数组，第一维表示离散的t轴采样点，第二维表示在s上下边界内离散的s采样点，在s方向上不是用确定的上下边界表示，而是在上下边界范围内洒满离散点&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-orignal&lt;span style=&quot;background-color: initial;&quot;&gt;_st_boundary_: STBoundary&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物基于路径的st边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;按全程不考虑caution的原始边界，用于可视化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-path_st_boundary_ref_：&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物基于路径的st边界，不同于box-box判碰方法，使用基于参考线的判碰方法&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-reference_line_st_boundary_：STBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍&lt;/span&gt;物基于参考线的st边界&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-safe_driving_st_boundary_：&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物基于参考线的st边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-is_orignal_st_boundary_init_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;原始st边界是否初始化标志位，在写入成员&lt;span style=&quot;background-color: initial;&quot;&gt;orignal&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_st_boundary_时自动将该标志位至位&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="52" width="1430" height="178" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-27" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-id_: string&amp;nbsp; 障碍物id&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="230" width="1430" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-4" value="-obstacle_label_:ObstacleLabel&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物标签枚举类型，Default、P0、P1、P2、P3、HWA、CA" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="260" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bZs9VvthoLb4ROwhrg8k-1" value="-trajectory_:prediction::PredictedTrajectory&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物预测轨迹，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;0.1s一个点，0～8s，共81个轨迹点，在构造函数中进行tos输入维度和adc代码内部维度的转换&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="286" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="NYM8hKTuLV8F-zBLQy-5-2" value="-sl_boundary_:SLBoundary&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物当前位置在SL坐标系下的边界，s轴为参考线&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="312" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-perception_obstacle_:&lt;span style=&quot;background-color: initial;&quot;&gt;perception&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物的感知信息，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;thirdparty/x86/common/proto/Perception/perception.proto&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="338" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-8" value="-perception_bounding_box_：Box2d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;感知障碍物bbox，xy坐标系下的OOBB" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="364" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-28" value="-delay_time_ = 0：int32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物驶离自车路经时的迟滞计数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="390" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-30" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-lateral_decision_：ObjectDecisionType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物横向决策&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-longitudinal_decision_：ObjectDecisionType&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物纵向决策&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-speed_decision_ = SpeedDecision::None：SpeedDecision&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物速度决策&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-decider_tags_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该障碍物上的所有决策标签，决策标签用string存储&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-obstacle_caution_info_：ObstacleCautionInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物的caution信息&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="416" width="1430" height="154" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-left_lateral_buf_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= 0.0&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// 障碍物横向膨胀buffer&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-right_lateral_buf_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-start_longitude_buf_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// 障碍物纵向膨胀buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-end_longitude_buf_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="570" width="1430" height="140" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-1" value="-nudge_avoid_time_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;动态绕障的结束时间" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="710" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-7" value="-obstacle_label_info_：ObstacleLabelInfo&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物标签信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="736" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="D7oMFita6UG4JvU4ndth-1" value="-collision_edges_：std::vector&amp;lt;BoxEdgeType&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储生成该障碍物st边界时存在碰撞的预测轨迹上的碰撞起始和结束时刻障碍物bbox与自车bbox的哪条边相碰" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="762" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-8" value="-is_virtual_：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物是否为虚拟障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="788" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="814" width="1430" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-2" value="+Obstacle(const std::string&amp;amp; id,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//障碍物id&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double width,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//障碍物宽度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double length,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//障碍物长度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double current_heading,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物朝向角，相对于自车坐标系x轴的夹角&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double current_x,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物在自车坐标系下的x坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double current_y,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车坐标系下的y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double current_vx,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车坐标系下的x方向的&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相对速度&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double current_vy,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车坐标系下的y方向的&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相对速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double ax,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车坐标系下的x方向的绝对加速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; double ay,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物在自车坐标系下的y方向的绝对加速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;double&amp;gt;&amp;amp; heading,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物预测轨迹上的朝向角轨迹&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;double&amp;gt;&amp;amp; x,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//障碍物预测轨迹上的x坐标轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;double&amp;gt;&amp;amp; y,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//障碍物预测轨迹上的y&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;坐标轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;double&amp;gt;&amp;amp; vx,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//障碍物预测轨迹上的x方向&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;绝对速度轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;double&amp;gt;&amp;amp; vy,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//障碍物预测轨迹上的y方向&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;绝对速度轨迹&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; int obstacle_type,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物类型，各类型对应的coding定义在&lt;span style=&quot;background-color: initial;&quot;&gt;thirdparty/x86/common/proto/Perception/perception.proto中的Obstacle消息的&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//Type枚举类型中，在生成的pb.h文件中，Type对应一个底层数据类型为int的枚举类型，各枚举值对应的int值与proto中一致&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; int obstacle_label)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物标签，&lt;/span&gt;类型转换为&lt;span style=&quot;background-color: initial;&quot;&gt;ObstacleLabel后赋值给障碍物标签成员obstacle_label_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="822" width="1430" height="368" as="geometry" />
        </mxCell>
        <mxCell id="NYM8hKTuLV8F-zBLQy-5-1" value="+BuildTrajectoryStBoundary(const ReferenceLine&amp;amp; reference_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const double adc_start_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，规划起始点s&lt;/div&gt;&lt;div&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; STBoundary* const st_boundary,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物在参考线上的st边界投影，输入成员safe_driving_st_boundary_&lt;/div&gt;&lt;div&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double adc_safe_drive_buffer =&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;FLAGS_nonstatic_obstacle_nudge_l_buffer,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，自车车宽膨胀buffer(车宽+该buffer是在计算障碍物相对于参考线的st边界时参考线左右双边扩张的宽度)，默认参数0.4&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double adc_shift_l = 0.0)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，自车中心在l方向的偏移量，相对于参考线左正右负&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回障碍物相对于参考线的st边界是否建立成功的标志位&lt;/div&gt;&lt;div&gt;利用障碍物预测轨迹成员trajectory_建立障碍物相对于参考线的st边界，存储于成员safe_driving_st_boundary_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1190" width="1430" height="150" as="geometry" />
        </mxCell>
        <mxCell id="R6yMHHjHUhYibpEbnA3r-5" value="+addHistoryDecision(uint8_t num, const HistoryObjectDecision&amp;amp; decision):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;根据输入的历史帧索引num，根据输入决策结果decision是否是新的选择在障碍物历史帧决策统计表&lt;span style=&quot;background-color: initial;&quot;&gt;history_decision_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中新建该决策还是merge该决策&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1340" width="1430" height="48" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-27" value="+GetHeadingBetweenRef(const ReferenceLine&amp;amp; reference_line)：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算障碍物heading角 - 参考线heading角，范围在[-pi,pi]&lt;div&gt;其中障碍物heading角为成员perception_obstacle_的成员theta，参考线heading角取成员sl_boundary_的s中间值，调用输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetReferencePoint，取得s中间值处的参考点处的heading&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1388" width="1430" height="72" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-36" value="+HasLongitudinalDecision() const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;成员longitudinal_decision_不为未设置状态&lt;div&gt;+&lt;span style=&quot;background-color: initial;&quot;&gt;HasLateralDecision() const：bool&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;lateral_decision_&lt;span style=&quot;background-color: initial;&quot;&gt;不为未设置状态&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1460" width="1430" height="68" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-37" value="+IsIgnore() const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物决策是否为ignore，要求成员lateral_decision_和longitudinal_decision_均为ignore时，才返回true" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1528" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-1" value="+GetSafetyBuffer(SafetyBufType type = SafetyBufType::Default) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回一个障碍物的安全边界&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;根据左右绕障决策，选择对应测的膨胀边界作为输出&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若左侧绕障则给出左侧膨胀buffer；&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若右侧绕障则给出右侧膨胀buffer；&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若stop，则给出两侧膨胀buffer中的最大膨胀buffer；&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若为ignore则给出&lt;span style=&quot;background-color: initial;&quot;&gt;两侧膨胀buffer中的最大膨胀buffer；&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1554" width="1430" height="144" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-8" value="+GetBoundingBox(&lt;span style=&quot;background-color: initial;&quot;&gt;const TrajectoryPoint&amp;amp; point) const：&lt;/span&gt;Box2d&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在障碍物轨迹点处构建障碍物bbox" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1698" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-1" value="+PerceptionSLBoundary() const：const&amp;nbsp;SLBoundary&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回成员sl_boundary_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-10" vertex="1">
          <mxGeometry y="1724" width="1430" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-15" value="STBoundary" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-2960" y="6920" width="970" height="820" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-16" value="-id_: string&amp;nbsp; 表示这个st边界属于那个障碍物的id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="26" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-95" value="-min_s_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最小s，默认值是double类型能表示的最大值，在构造函数中赋有效值，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="52" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-94" value="-max_s_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最大s，默认值是double类型能表示的最小值，在构造函数中赋有效值，通过upper_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="78" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-93" value="-min_t_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最小t，默认值是double类型能表示的最大值，在构造函数中赋有效值,，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="104" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-92" value="-max_t_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;边界的最大t，默认值是double类型能表示的最小值，在构造函数中赋有效值，通过lower_points_取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="130" width="970" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-106" value="-lower_points_:std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary的下边界点，按t从小到大排列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="160" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-102" value="-upper_points_:std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STBoundary的上边界点，按t从小到大排列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="186" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="QRkWCHjW3l4M_sAHpVCE-1" value="-obstacle_road_right_ending_t_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物关注截止时间，与路权逻辑有关" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="212" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="238" width="970" height="8" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-143" value="+STBoundary(const std::vector&amp;lt;std::pair&amp;lt;STPoint, STPoint&amp;gt;&amp;gt;&amp;amp; point_pairs,bool is_accurate_boundary = false)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;第一个参数pair&amp;lt;下边界st点，上边界st点&amp;gt;，第二个参数用于剔除冗余点，默认删除冗余点，&lt;span style=&quot;background-color: initial;&quot;&gt;is_accurate_boundary = true表示构建精确的障碍物st边界，即保留冗余点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="246" width="970" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-101" value="+GetIndexRange(const std::vector&amp;lt;STPoint&amp;gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp; points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定的st点序列，根据时间从小到大排列&lt;/span&gt;&lt;br&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; const double t,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，给定时刻t&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;size_t* left,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输出，在给定st点序列points中正好包含给定t时刻点的相邻两个st点的较小index&lt;br&gt;                               &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;size_t* right) const:bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//输出，在给定st点序列&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;points中正好包含给定t时刻点的相邻两个st点的较大index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在给定st点序列points中通过二分查找找到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;正好包含给定t时刻点的相邻两个st点的index，较小index存入left，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;较大index存入right，返回是否成功找到标志位&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="286" width="970" height="104" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-1" value="+GetBoundarySRange(const double curr_time,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//输入的指定时刻&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double* s_upper,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储指定时刻&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time下的s上边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double* s_lower) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储指定时刻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time下的s下边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在障碍物st边界中找到指定时刻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;curr_time处的上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_upper和下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower，返回是否成功找到的标志位&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="390" width="970" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3Bkqt41mjaIOp_3jZMgU-107" value="+static CreateInstanceAccurate(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; lower_points,&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;   &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;STPoint&amp;gt;&amp;amp; upper_points)：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过输入的障碍物在st图中的多边形上下边界，生成障碍物的st边界，保留冗余点生成精确边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="470" width="970" height="80" as="geometry" />
        </mxCell>
        <mxCell id="QRkWCHjW3l4M_sAHpVCE-2" value="+bottom_left_point() const：STPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回st边界的左下角st点，即返回成员lower_points_的第一个点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="550" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lMj8OGBns-KE9BoQN-sZ-1" value="+IsPointInBoundary(const STPoint&amp;amp; st_point) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入需要判断的st点st_point，返回该点是否在调用该函数的STBoundary类对象内部的标志位&lt;div&gt;1.若输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_不在成员最大最小t组成的区间[min_t_，max_t_]内，返回false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetIndexRange，找到在t轴上包含&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_的最小区间左右端点的index，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员lower_points&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建局部变量left、right存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在t轴上包含&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point的成员t_的最小区间左右端点的index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若步骤2中的左右端点的索引left、right可以找到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，则在成员upper_points和lower_points中可以找到索引left、right对应的st边界四角点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.1调用math命名空间的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CrossProd函数计算输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point到上方两角点形成的两向量的叉乘结果check_upper，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入st_point，成员upper_points_[left]，upper_points_[right]&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.2调用math命名空间的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CrossProd函数计算输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_point到下方两角点形成的两向量的叉乘结果check_lower，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入st_point，成员lower_points_[left]，lower_points_[right]&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2.1.3&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若输入st_point在步骤2.1中得到的四角点构成的四边形边界内，check_upper和check_lower应该异号，返回check_upper *&amp;nbsp;check_lower作为判断点是否在边界内的结果&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;否则若步骤2中的左右端点的索引left、right找不到，返回false&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zWTbZChh2CSGO8JRFA1Z-15" vertex="1">
          <mxGeometry y="576" width="970" height="244" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-30" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="zWTbZChh2CSGO8JRFA1Z-10" target="zWTbZChh2CSGO8JRFA1Z-15" edge="1">
          <mxGeometry x="-0.9152" relative="1" as="geometry">
            <mxPoint x="-1405" y="6100" as="sourcePoint" />
            <mxPoint x="-1135" y="6550" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1350" y="6510" />
              <mxPoint x="-1350" y="6510" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="NYM8hKTuLV8F-zBLQy-5-15" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="bZs9VvthoLb4ROwhrg8k-9" target="HuAyBqt8NcXd-a5JXoLN-37" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-7045" y="5691.5" as="sourcePoint" />
            <mxPoint x="-6660" y="5767.5" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-6550" y="6030" />
              <mxPoint x="-6550" y="6030" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Q_BdONmrA0XbDzhWO8QT-3" value="&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 51, 153);&quot;&gt;NOH_PLANNING_INIT&lt;/span&gt;(const std::string&amp;amp; config_dir):void&lt;br&gt;&lt;/div&gt;planning模块入口函数，上电时运行一次，进行初始化，输入为配置文件的绝对路径&lt;br&gt;&lt;br&gt;读取planning_config.prototxt，初始化PlanningConfig&lt;br&gt;读取lane_follow_config.prototxt，初始化ScenarioConfig，ScenarioConfig类里定义了TaskConfig类，在生成Task对象时需要Taskonfig&lt;/div&gt;&lt;div&gt;读取hardware_config.prototxt，初始化依赖注射类DependencyInjector，&lt;span style=&quot;background-color: initial;&quot;&gt;在生成Task对象时需要依赖注射指针&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;初始化任务工厂TaskFactory，目的是注册生成Task的函数指针，即更新TaskFactory::producers_，因为&lt;span style=&quot;background-color: initial;&quot;&gt;TaskFactory中都为静态成员变量和静态成员函数，因此在所有类的实例中都共享&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;producers_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;config_map：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::unordered_map&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TaskConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::TaskType,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TaskConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::hash&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&#x9;&lt;/span&gt;任务&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;配置映射表&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;遍历ScenarioConfig中的TaskConfig，对config_map初始化&lt;/div&gt;&lt;div&gt;遍历&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig中的TaskConfig，若Scenario指定任务类型在任务映射表tasks中找不到，则通过任务工厂TaskFactory的任务生成函数CreateTask根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ScenarioConfig中的TaskConfig和依赖注射指针&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;生成对应任务Task*，并推入任务执行序列task_list_末尾，并在任务映射表tasks中生成对应的任务映射，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;由于TaskFactory::producers_是静态成员并且在上面已经完成注册，因此在CreateTask时可以找到对应TaskType的Task生成函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;由于初始时任务映射表tasks为空，该分支语句常用于在执行序列task_list_中推入新出现的任务&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;；若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Scenario指定任务类型&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在任务映射表tasks中可以找到，直接读取tasks中的任务，并&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;推入任务执行序列task_list_末尾，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;该分支语句常用于在执行序列task_list_中推入前面已经生成过的任务，即某些任务在执行序列中会执行两遍&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4110" y="-710" width="810" height="370" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-2" value="PlanningConfig&lt;div&gt;thirdparty/x86/common/proto/Planning/planning_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=37;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4750" y="-654" width="480" height="314" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-3" value="repeated TaskConfig default_task_config&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当没有指定场景时使用默认任务配置表&lt;div&gt;planning_config.proto中定义的默认任务顺序为&lt;/div&gt;&lt;div&gt;PIECEWISE_JERK_SPEED_OPTIMIZER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PIECEWISE_JERK_NONLINEAR_SPEED_OPTIMIZER&lt;br&gt;&lt;/div&gt;&lt;div&gt;SPEED_HEURISTIC_OPTIMIZER&lt;br&gt;&lt;/div&gt;&lt;div&gt;SPEED_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;RULE_BASED_STOP_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;ST_BOUNDS_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;SPEED_BOUNDS_FINAL_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PATH_BOUNDS_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PATH_SOFT_BOUNDS_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PATH_LANE_BORROW_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;LANE_CHANGE_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PATH_REUSE_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;PATH_DECIDER&lt;br&gt;&lt;/div&gt;&lt;div&gt;STEER_CORRECTION_DECIDER&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-2" vertex="1">
          <mxGeometry y="37" width="480" height="243" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tYoZKa7LIVWvfuPdVHDL-2" vertex="1">
          <mxGeometry y="280" width="480" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-5" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-2" vertex="1">
          <mxGeometry y="288" width="480" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-21" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;定义全局变量&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;std::shared_ptr&amp;lt;DependencyInjector&amp;gt; injector_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射类&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;tasks_：std::map&amp;lt;TaskConfig::TaskType, std::unique_ptr&amp;lt;Task&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务映射表，通过任务类型查询指向任务对象的指针&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;task_list_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Task&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务执行序列，按照该序列中的顺序依次执行任务&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4110" y="-810" width="780" height="100" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-25" value="Task" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="6650" y="-850" width="720" height="270" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-31" value="#config_：TaskConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务配置" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="26" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-30" value="#injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史帧数据存储器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="52" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-32" value="#name_：string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务名称" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="78" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-26" value="#frame_：Frame*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前帧planning模块输入" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="104" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-29" value="#reference_line_info_：ReferenceLineInfo*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;执行该任务的具体某一条参考线信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="130" width="720" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-27" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="156" width="720" height="8" as="geometry" />
        </mxCell>
        <mxCell id="3atoQiqvd0Np7jwLj1jc-1" value="+Task(const TaskConfig&amp;amp; config,&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将输入config、injector写入成员config_、injector_，通过输入任务配置config中的task_Type读取任务名称并写入成员name_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="164" width="720" height="60" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-28" value="+virtual Execute(Frame* frame,&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo* reference_line_info):&lt;/span&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务执行函数，虚函数&lt;/span&gt;，在子类中被重写&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化成员frame_和reference_line_info_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-25" vertex="1">
          <mxGeometry y="224" width="720" height="46" as="geometry" />
        </mxCell>
        <mxCell id="6wdL3qndjjb1l8kqZaIJ-1" value="DataProcessor&lt;div&gt;数据处理类&lt;/div&gt;&lt;div&gt;在NOH_PLANNING函数中第一次实例化&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3590" y="-10" width="1301.25" height="1226" as="geometry" />
        </mxCell>
        <mxCell id="6wdL3qndjjb1l8kqZaIJ-2" value="-rtu_****_:数据类型与模型代码中定义的一致&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;simulink接入信号成员变量&lt;div&gt;rtu_CIO_Traj_:CIO_SPDTRAJ_BUS[2]&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio推算轨迹，[激烈驾驶，正常驾驶] 41个点0s到20s&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;adc的simulink输入作为成员变量存储在DataProcessor类内，并通过函数Data_Update进行每帧更新&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;各成员变量的数据类型定义在&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;simulinksrc/ADAS_Core_noh_ert_rtw/ADAS_Core_noh_types.h&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="50" width="1301.25" height="70" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-3" value="-frame_:std::unique_ptr&amp;lt;Frame&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;帧数据类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="120" width="1301.25" height="26" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-66" value="-injector_:std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射类，与NOH_PLANNING_INIT函数中实例化的依赖注射类是同一个" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="146" width="1301.25" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-1" value="-reference_line_provider_:std::unique_ptr&amp;lt;ReferenceLineProvider&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线构建器指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="172" width="1301.25" height="26" as="geometry" />
        </mxCell>
        <mxCell id="oxPOzmRVD7sxvV5kMznU-7" value="-reference_lines_:std::list&amp;lt;ReferenceLine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储全部参考线，左中右三条" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="198" width="1301.25" height="26" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-9" value="&lt;div&gt;CIO相关信号&lt;/div&gt;-hard_cio_ref_:SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio激烈驾驶轨迹&lt;div&gt;-soft_cio_ref_:SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio正常驾驶轨迹&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="224" width="1301.25" height="58" as="geometry" />
        </mxCell>
        <mxCell id="6wdL3qndjjb1l8kqZaIJ-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="282" width="1301.25" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6wdL3qndjjb1l8kqZaIJ-4" value="+static Instance():std::shared_ptr&amp;lt;DataProcessor&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;通过设置指向DataProcessor的静态指针，获取DataProcessor的单例实例对象，即确保了只有一个DataProcessor实例被创建，并且在内存分配失败时不会抛出异常，而是返回空指针。&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在planning模块运行中DataProcessor只有一个实例化对象，在NOH_PLANNING中第一次且仅有一次被实例化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="290" width="1301.25" height="58" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-65" value="+Data_Updata(simulink输入信号,const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector&lt;span style=&quot;background-color: initial;&quot;&gt;):void&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;数据更新函数，&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning模块每一帧要先运行Data_Updata函数，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将simulink输入写入成员rtu_***_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;形参数据类型定义在&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;simulinksrc/ADAS_Core_noh_ert_rtw/ADAS_Core_noh_types.h&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在NOH_PLANNING中调用该函数，输入injector的实参为NOH_PLANNING_INIT函数中实例化的依赖注射类&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="348" width="1301.25" height="62" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-68" value="-StatusDataProcess():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;状态数据处理函数&lt;br&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;simulink接入信号成员变量更新后&lt;/span&gt;，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对依赖类成员injector_中的规划上下文类成员planning_context_进行写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;分为以下几步：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;1.写入巡航状态 CruiseState，根据成员rtu_CRUISE_STATE_&lt;div&gt;2.写入换道原因&amp;nbsp;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;ChangeLaneReason，根据成员&lt;/span&gt;rtu_ALC_LcReason_&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;3.写入换道方向&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;ChangeLaneDirect，根据成员&lt;/span&gt;rtu_ALC_LcIntention_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="410" width="1301.25" height="100" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-69" value="-PathDataProcess():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;path数据处理函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;更新参考线构建类成员reference_line_provider_&lt;/span&gt;&lt;div&gt;分为如下几步：&lt;/div&gt;&lt;div&gt;1.数据转换，利用成员rtu_***_中车道线相关模型输入(pp、mp、rfm)&lt;span style=&quot;background-color: initial;&quot;&gt;，构建调用参考线构建器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中参考线生成函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetReferenceLines所需的输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.利用成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector_中的车辆状态&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;vehicle_state_实例化一个ReferenceLineProvider类对象，将其地址写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;状态更新函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;UpdateState，写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;tcycle_s_、veh_kappa_、alp_slip_angle_、spd_mps_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.生成参考线，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial; text-align: center;&quot;&gt;参考线构建器&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_provider_中的参考线生成函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetReferenceLines，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成好的左中右三条参考线ReferenceLine对象既存储在成员reference_lines_中也存储在成员reference_line_provider_中的成员reference_lines_中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="510" width="1301.25" height="108" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-2" value="-GetVehicleSpeedAndAcc(Pose&amp;amp; pose,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Vec3d* const cur_vel,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Vec3d* const cur_acc):&lt;/span&gt;void&amp;nbsp; &amp;nbsp; &amp;nbsp;计算当前帧的自车的车速及加速度&lt;div&gt;形参pose未使用，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;车速及加速度的计算结果存储在输入cur_vel和cur_acc中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;车速使用VIE车速xvRefMs，从成员中取值；加速度与VP模型中的计算方法一致，计算加速度所需的当前帧数据从成员中取值，所需的历史帧数据(vlcInternalAccK300)从依赖注射类成员injector_的历史类成员&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;history_中取得对应历史时刻的值&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="618" width="1301.25" height="60" as="geometry" />
        </mxCell>
        <mxCell id="oxPOzmRVD7sxvV5kMznU-9" value="-VehicleStateProcess():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车状态处理函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;更新依赖类成员injector_的车辆状态类成员&lt;span style=&quot;text-align: center;&quot;&gt;vehicle_state_&lt;/span&gt;&lt;/span&gt;&lt;div&gt;将simulink输入的车速加速度处理后得到planning模块计算使用的车速加速度，并写入成员injector_&lt;/div&gt;&lt;div&gt;调用上面成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;GetVehicleSpeedAndAcc得到处理后的车速加速度，再调用依赖类成员injector_的车辆状态类成员&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;vehicle_state_的更新函数Update写入处理后的车速加速度，供后续planning模块计算使用&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="678" width="1301.25" height="66" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-21" value="-InitFrame(const VehicleState&amp;amp; vehicle_state):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;帧数据初始化函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化帧数据类成员frame_&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;利用上面函数VehicleStateProcess初始化的依赖类成员injector_的车辆状态类成员&lt;span style=&quot;text-align: center;&quot;&gt;ve&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;hicle_state_初始化成员frame_中的规划起始点&lt;/span&gt;planning_start_point_&lt;span style=&quot;text-align: center;&quot;&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用Frame的构造函数实例化一个帧数据类Frame对象，获取指针后写入帧数据类成员frame_，并返回帧数据类Frame对象是否成功实例化的标志位，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;由于在planning模块一次运行周期内数据处理类DataProcessor只会实例化一次，因此成员frame_在内存中会一直存在，在Process函数调用时调用InitFrame函数这是对帧数据类成员frame_的第一次写入(初始化)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="744" width="1301.25" height="74" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-22" value="-ObstacleDataProcess() const:void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物数据处理函数&lt;div&gt;计算步骤如下：&lt;br&gt;&lt;div&gt;1.由于模型输入的障碍物标签HWA、P0、P1、P2、P3、CA等目标会有重复目标存在，第一步进行去重处理，通过成员rtu_***_中的目标成员构建Obstacle类对象，用局部变量obstacles不重复的存储所有Obstacle类对象的指针&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2.将全部障碍物obstacles添加到帧数据类成员frame_中的障碍物链表成员obstacles_，调用frame_中的添加障碍物函数AddObstacle&lt;/div&gt;&lt;div&gt;3.更新成员frame_中的成员障碍物链表obstacles_中每一个当前帧planning模块输入的障碍物类&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;元素的历史帧统计表成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_decision_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;时间由远及近遍历依赖注射类成员injector_的历史类成员history_的历史帧链表&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frames_中的历史帧数据类HistoryFrame元素&lt;/span&gt;decision_frame&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在每一帧历史帧数据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;decision_frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中遍历历史全部障碍物决策成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_decisions_中的历史障碍物决策类&lt;/span&gt;&lt;span style=&quot;background-color: initial; text-align: center;&quot;&gt;HistoryObjectDecision元素&lt;/span&gt;object_dec&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;帧数据类成员frame_中的Find函数，&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;根据每一个障碍物决策&lt;/span&gt;object_dec的障碍物id_，&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;若成员frame_中的障碍物链表obstacles_中能搜索到对应的障碍物的指针obs_ptr，调用该障碍物的函数addHistoryDecision，将该障碍物的历史决策&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;object_dec及历史帧的索引号写入该障碍物的历史决策结果统计表成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_decision_，否则打印日志。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;该函数的作用就是将模型输入的障碍物写入frame_，并将这些障碍的最近历史帧决策信息写入历史决策统计表&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="818" width="1301.25" height="170" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-5" value="-UpdateNewFrame():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;帧数据类成员frame_更新函数&lt;div&gt;调用成员frame_中的相关函数，更新其中的simulink输入信号；调用成员frame_中的初始化函数Init，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化frame_中的自车能力边界st_driving_limits_、自车匀速运动曲线st_guide_line_、全部参考线信息reference_line_info_和本车道参考线信息cur_reference_line_info_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="988" width="1301.25" height="50" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-8" value="+CIOSparseToDense():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio轨迹加密函数&lt;/span&gt;&lt;div&gt;将simulink输入的cio轨迹rtu_CIO_Traj_由0.5s一个轨迹点加密成0.1s一个轨迹点，总共8s，共81个点，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;加密后的结果存入成员hard_cio_ref_和soft_cio_ref_，同时写入成员frame_中的对应成员hard_cio_ref_和soft_cio_ref_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="1038" width="1301.25" height="42" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-1" value="+GenerateAccReferenceLineInfo(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;VehicleState&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_state&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;acc_reference_line_infos&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;生成acc模式的参考线&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用该函数时输入&lt;span style=&quot;background-color: initial;&quot;&gt;acc_reference_line_infos的实参为成员frame_中的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;acc_reference_line_infos_，因此&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;该函数对成员frame_中的acc参考线信息acc_reference_line_infos_进行初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="1080" width="1301.25" height="60" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-4" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;+Process():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据处理函数&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;依次调用函数StatusDataProcess、PathDataProcess、VehicleStateProcess、InitFrame、ObstacleDataProcess、UpdateNewFrame、CIOSparseToDense、GenerateAccReferenceLineInfo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;作用是根据simulink输入对成员planning_context_、reference_line_provider_、&lt;span style=&quot;text-align: center;&quot;&gt;vehicle_state_、&lt;/span&gt;frame_进行初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="1140" width="1301.25" height="60" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-5" value="+GetFramePtr():Frame*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获得指向成员frame_的原始指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6wdL3qndjjb1l8kqZaIJ-1" vertex="1">
          <mxGeometry y="1200" width="1301.25" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-1" value="DependencyInjector&lt;div&gt;规划模块依赖注射类，Task类实例化时需要依赖注射类作为输入&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4750" y="1110" width="640" height="286" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-12" value="-frame_history_:FrameHistory&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据历史队列，历史1帧数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="40" width="640" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-2" value="-planning_context_:PlanningContext&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;规划上下文，存储多帧规划过程中的不需要每帧刷新的状态量，比如功能状态、换道原因、换道方向等&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="66" width="640" height="44" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-11" value="-&lt;span style=&quot;text-align: center;&quot;&gt;history_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;History&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史类&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="110" width="640" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-10" value="-&lt;span style=&quot;text-align: center;&quot;&gt;ego_info_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;EgoInfo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车信息&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="136" width="640" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-9" value="-&lt;span style=&quot;text-align: center;&quot;&gt;vehicle_state_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;VehicleStateProvider&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="162" width="640" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="188" width="640" height="8" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-4" value="+DependencyInjector(const std::string config_file)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在NOH_PLANNING_INIT函数中构造DependencyInjector对象时，调用FrameHistoryl类的默认构造函数，自动构建成员frame_history_&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化成员&lt;span style=&quot;text-align: center;&quot;&gt;ego_info_中的&lt;/span&gt;车辆硬件配置参数ego_vehicle_config_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="196" width="640" height="64" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-1" value="+ item: attribute" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="fScHyBXz6SIJeMNVfW56-1" vertex="1">
          <mxGeometry y="260" width="640" height="26" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-6" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-4691.25" y="2813" width="20" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-5" value="&lt;span style=&quot;font-weight: 400; text-align: left;&quot;&gt;&lt;b&gt;PlanningContext&lt;/b&gt;&lt;/span&gt;&lt;div style=&quot;font-weight: 400;&quot;&gt;规划时的多帧不变量&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5570" y="660" width="460" height="854" as="geometry">
            <mxRectangle x="-4880" y="1970" width="150" height="41" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-cruise_status_:CruiseState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;巡航状态&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;none = 0,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  noh_activate = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  mry_activate = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  accs_activate = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  acc_activate = 4&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="41" width="460" height="139" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-11" value="-&lt;span style=&quot;text-align: center;&quot;&gt;planning_status_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;PlanningStatus&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;规划状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;planning_status.proto&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="180" width="460" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-12" value="-&lt;span style=&quot;&quot;&gt;traffic_light_keeper_:&lt;/span&gt;&lt;span style=&quot;&quot;&gt;TrafficLightKeeper&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;结构体&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="240" width="460" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-18" value="-&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt;unprotected_left_turn_stop_s_:&lt;/span&gt;&lt;span style=&quot;&quot;&gt;UnprotectedLeftTurnStopS&lt;/span&gt;&lt;div style=&quot;&quot;&gt;无保护左转相关数据&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="280" width="460" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-17" value="-&lt;span style=&quot;text-align: center;&quot;&gt;exchange_area_target_info_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ExchangeAreaTargetInfo&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;交换区目标信息，目标id&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="320" width="460" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-16" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;-&lt;span style=&quot;text-align: center;&quot;&gt;lane_borrow_status_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;LaneBorrowNudgeStatus&lt;/span&gt;&lt;/font&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;借道状态，默认为非借道状态&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  NO_BORROW = 0,  // 常规的非借道状态&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  LEFT_BORROW_PROCESSING = 1,  // 左借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  RIGHT_BORROW_PROCESSING = 2,  // 右借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  TRY_LEFT_BORROW = 3, // 尝试左借道过程中&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;  TRY_RIGHT_BORROW = 4, // 尝试右借道过程中&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="360" width="460" height="140" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-15" value="-&lt;span style=&quot;text-align: center;&quot;&gt;change_lane_reason_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ChangeLaneReason&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;换道原因，默认为none&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  none = 0, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;  human_lane_change = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  noh_lane_change = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  low_speed_lane_change = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  exchange_area_lane_change = 4,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  avoid_obstacle_lane_change = 5,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  mp_lane_change = 6,&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="500" width="460" height="170" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-14" value="-&lt;span style=&quot;text-align: center;&quot;&gt;change_lane_direct_:&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;ChangeLaneDirect&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;换道方向，默认为none&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  none = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  left_lane_change = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  right_lane_change = 2,&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="670" width="460" height="100" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-1" value="-predecider_processed_ = false:bool&amp;nbsp; &amp;nbsp;当前帧规划过程是否进行过前决策处理标志位" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="770" width="460" height="26" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="796" width="460" height="8" as="geometry" />
        </mxCell>
        <mxCell id="wBxVrPbXSnmAGdxS800X-8" value="+set_predecider_processed(bool predecider_processed):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;设置predecider_processed_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wBxVrPbXSnmAGdxS800X-5" vertex="1">
          <mxGeometry y="804" width="460" height="50" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-34" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="fScHyBXz6SIJeMNVfW56-1" target="wBxVrPbXSnmAGdxS800X-5" edge="1">
          <mxGeometry x="-0.8895" y="10" relative="1" as="geometry">
            <mxPoint x="-4860" y="1770" as="sourcePoint" />
            <mxPoint x="-3590" y="1490" as="targetPoint" />
            <mxPoint as="offset" />
            <Array as="points">
              <mxPoint x="-4900" y="1253" />
              <mxPoint x="-4900" y="1253" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-35" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="fScHyBXz6SIJeMNVfW56-1" target="fScHyBXz6SIJeMNVfW56-31" edge="1">
          <mxGeometry x="-0.8669" y="3" relative="1" as="geometry">
            <mxPoint x="-3780" y="1720" as="sourcePoint" />
            <mxPoint x="-3620" y="1720" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-4380" y="1750" />
              <mxPoint x="-4380" y="1750" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-36" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="fScHyBXz6SIJeMNVfW56-1" target="5JwgbHoywKSMs2gWUFIL-32" edge="1">
          <mxGeometry x="-0.8797" relative="1" as="geometry">
            <mxPoint x="-3320" y="1930" as="sourcePoint" />
            <mxPoint x="-3160" y="1930" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-4620" y="1550" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-38" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;EgoInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;自车信息，相比于车辆状态VehicleState包含更多信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5060" y="1620" width="500" height="294" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-44" value="-start_point_:TrajectoryPoint&lt;div&gt;规划轨迹起始点，由于有轨迹拼接在，因此轨迹起始点不一定是车辆坐标系原点&lt;/div&gt;&lt;div&gt;定义在&lt;span style=&quot;text-align: center;&quot;&gt;pnc_point.proto&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="50" width="500" height="54" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-43" value="-vehicle_state_:VehicleState&lt;div&gt;自车状态，纵向速度、纵向加速度、heading角、当前车辆位置轨迹曲率等&lt;br&gt;&lt;div&gt;定义在thirdparty/x86/common/proto/Planning/vehicle_state.proto&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="104" width="500" height="50" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-42" value="-ego_vehicle_config_:HardwareConfig&lt;div&gt;车辆硬件配置参数，整车尺寸参数、传感器参数等&lt;/div&gt;&lt;div&gt;定义在thirdparty/x86/common/proto/common/hardware_config.proto&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="154" width="500" height="50" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-39" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-ego_box_:&lt;span style=&quot;background-color: initial;&quot;&gt;Box2d&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;自车box&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="204" width="500" height="40" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-40" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="244" width="500" height="8" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-41" value="+void GetVehicleConfig(const std::string&amp;amp; config_file)&lt;div&gt;调用VehicleConfigHelper中的GetConfig函数对车辆硬件配置参数ego_vehicle_config_赋值&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-38" vertex="1">
          <mxGeometry y="252" width="500" height="42" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-45" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="fScHyBXz6SIJeMNVfW56-1" target="5JwgbHoywKSMs2gWUFIL-38" edge="1">
          <mxGeometry x="-0.8403" y="10" relative="1" as="geometry">
            <mxPoint x="-4310" y="2060" as="sourcePoint" />
            <mxPoint x="-4150" y="2060" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-4480" y="1770" />
              <mxPoint x="-4790" y="1770" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-46" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleStateProvider&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;车辆状态构建器&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;提供车辆状态VehicleState的基本信息和计算&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;后面使用该类主要用于存储规划起点的车辆运动状态&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=86;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4220" y="1839" width="410" height="302" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-47" value="-vehicle_state_:VehicleState&lt;div&gt;自车状态，纵向速度、纵向加速度、heading角、当前车辆位置轨迹曲率等&lt;br&gt;&lt;div&gt;定义在thirdparty/x86/common/proto/Planning/vehicle_state.proto&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-46" vertex="1">
          <mxGeometry y="86" width="410" height="56" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-50" value="-loc_pose_:Pose&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;自车位姿&lt;/div&gt;&lt;div&gt;定义在thirdparty/x86/common/proto/Localization/localization.proto&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-46" vertex="1">
          <mxGeometry y="142" width="410" height="58" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-48" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-46" vertex="1">
          <mxGeometry y="200" width="410" height="8" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-49" value="+Update(&lt;span style=&quot;background-color: initial;&quot;&gt;Pose&amp;amp; loc_pose,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const Vec3d&amp;amp; cur_vel,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const Vec3d&amp;amp; cur_acc):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态更新函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入的车速cur_vel加速度cur_acc，是三维坐标系下的向量，先将cur_vel和cur_acc写入loc_pose，最后将输入loc_pose写入成员loc_pose_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-46" vertex="1">
          <mxGeometry y="208" width="410" height="94" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-51" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="fScHyBXz6SIJeMNVfW56-1" target="5JwgbHoywKSMs2gWUFIL-46" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-5490" y="1900" as="sourcePoint" />
            <mxPoint x="-5330" y="1900" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-4310" y="1990" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-52" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleConfigHelper&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;车辆配置帮助静态类，用于加载车辆配置信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5050" y="2180" width="480" height="240" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-53" value="-vehicle_config_:static haomo::hios::HardwareConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆硬件配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-52" vertex="1">
          <mxGeometry y="50" width="480" height="26" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-54" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-52" vertex="1">
          <mxGeometry y="76" width="480" height="8" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-56" value="+Init(const HardwareConfig &amp;amp;vehicle_config):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;div&gt;通过输入的&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_config&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化vehicle_config_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-52" vertex="1">
          <mxGeometry y="84" width="480" height="46" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-55" value="+Init(const std::string &amp;amp;config_file):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;通过配置文件绝对路径的字符串，实例化一个临时HardwareConfig对象，调用上面重载的初始化函数，初始化vehicle_config_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-52" vertex="1">
          <mxGeometry y="130" width="480" height="66" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-58" value="+GetConfig(const std::string&amp;amp; config_file)：static const HardwareConfig&amp;amp;&lt;div&gt;调用第二个初始化函数Init，并返回车辆硬件配置参数&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_config_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-52" vertex="1">
          <mxGeometry y="196" width="480" height="44" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-57" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-41" target="5JwgbHoywKSMs2gWUFIL-52" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4690" y="2120" as="sourcePoint" />
            <mxPoint x="-5060" y="1938" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-67" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 0, 128);&quot;&gt;NOH_PLANNING&lt;/span&gt;(adc的全部simulink输入):void&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;实例化DataProcessor类，并调用函数Data_Update进行数据更新&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4110" y="-326" width="690" height="290" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-2" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6wdL3qndjjb1l8kqZaIJ-1" target="fScHyBXz6SIJeMNVfW56-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-4630" y="1680" as="sourcePoint" />
            <mxPoint x="-4470" y="1680" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-4400" y="720" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-3" value="&lt;span style=&quot;text-align: left;&quot;&gt;ReferenceLineProvider&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;参考线构造器类&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;一个ReferenceLineProvider对应多条ReferenceLine&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=54;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-3125" y="1496" width="950" height="644" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-7" value="-vehicle_state_provider_:const VehicleStateProvider*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="54" width="950" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-tcycle_s_、veh_kappa_、alp_slip_angle_、spd_mps_:double&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="84" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-4" value="-reference_lines_:std::list&amp;lt;ReferenceLine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;存储全部参考线，三条，顺序依次为左中右&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="110" width="950" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="150" width="950" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-6" value="+ReferenceLineProvider(const VehicleStateProvider* vehicle_state_provider)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;构造函数，使用车辆状态构建器实例化&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="158" width="950" height="42" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-11" value="+UpdateState(const double&amp;amp; kap, const double&amp;amp; speed,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const double&amp;amp; alp_slip_angle, const double&amp;amp; tcycle_s):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;状态更新函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;更新周期、当前位置曲率、滑移率、车速m/s&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="200" width="950" height="64" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-12" value="+bool GetReferenceLines(const std::vector&amp;lt;PP_LINE&amp;gt;&amp;amp; vis_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道线，不是车道中心线，三条车道四条车道线，左左、左、右、右右&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;PP_LINE&amp;gt;&amp;amp; vis_edge,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//道路边界线，两条路沿，左、右&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;MP_Line&amp;gt;&amp;amp; mp_lines,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//路口左右转根据贝塞尔曲线生成的点集，车道之间是一一对应的关系，不是一对多的关系，三条，左中右&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;PP_PATH&amp;gt;&amp;amp; pn_pp_paths,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//车道中心线，6条，左、中左/中、空、紧急车道、探路&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const MP_PILOTINFO&amp;amp; mp_pilotinfo,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//记忆行车导航信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;LcInformation&amp;gt;&amp;amp; pp_lcInformations,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;4&lt;span style=&quot;white-space: pre;&quot;&gt;条车道线&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;的换道信息，每条车道线包含虚实信息和虚实段长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::list&amp;lt;ReferenceLine&amp;gt; &amp;amp;reference_lines)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成好的ReferenceLine对象既存储在成员reference_lines_也存储在该输入参数中&lt;/span&gt;，三条，左中右&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; 函数中首先会把&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines清空&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;PP_LINE、&lt;span style=&quot;background-color: initial;&quot;&gt;MP_Line、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PP_PATH、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;MP_PILOTINFO、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;LcInformation是cpp代码中新定义的结构体，沿用模型里的定义，定义在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;modules/adc/src/noh_planner/common/reference_line/reference_line.h&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;该函数用于生成左中右三条参考线，并将这三条&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;参考线&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;写入成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;reference_lines_和输入&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;reference_lines&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;mp_pilotinfo，若其中的MP_SelectSts==4，使用输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;mp_lines，调用函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetMpLineRefeLine&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;生成左中右三条参考线写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines_和输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines；否则使用输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pn_pp_paths，调用ReferenceLine类的构造函数实例化左中右三条参考线&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines_和输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines。&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;返回是否成功标志位&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="264" width="950" height="260" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-60" value="+GetMpLineRefeLine(const MP_Line&amp;amp; mp_line,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const std::vector&amp;lt;PP_LINE&amp;gt;&amp;amp; vis_edge,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const std::vector&amp;lt;LcInformation&amp;gt;&amp;amp; pp_lcInformations,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const MP_PILOTINFO&amp;amp; mp_pilotinfo,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const int&amp;amp; j,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;ReferenceLine&amp;amp; reference_line):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据一条&lt;span style=&quot;background-color: initial;&quot;&gt;mp_line实例化代码中的参考线类ReferenceLine并存入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line中&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ijnevb-9qaTQt8viAWx_-3" vertex="1">
          <mxGeometry y="524" width="950" height="120" as="geometry" />
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-8" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="Ijnevb-9qaTQt8viAWx_-3" target="5JwgbHoywKSMs2gWUFIL-46" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-2545" y="3584.0270270270266" as="sourcePoint" />
            <mxPoint x="-2815" y="3560" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-3410" y="1980" />
              <mxPoint x="-3410" y="1980" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Ijnevb-9qaTQt8viAWx_-9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6wdL3qndjjb1l8kqZaIJ-1" target="4BFno3uP-ZcI9NOxWfNB-71" edge="1">
          <mxGeometry x="-0.8483" relative="1" as="geometry">
            <mxPoint x="-4040" y="1840" as="sourcePoint" />
            <mxPoint x="-3880" y="1840" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-2910" y="1550" />
              <mxPoint x="-2910" y="1550" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oxPOzmRVD7sxvV5kMznU-5" value="&lt;b&gt;&lt;font style=&quot;font-size: 29px;&quot;&gt;Use&lt;/font&gt;&lt;/b&gt;" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;exitX=0.499;exitY=0.994;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.533;entryY=-0.002;entryDx=0;entryDy=0;entryPerimeter=0;strokeWidth=4;" parent="1" source="5JwgbHoywKSMs2gWUFIL-60" target="oxPOzmRVD7sxvV5kMznU-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-520" y="-650" as="sourcePoint" />
            <mxPoint x="-360" y="-650" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-26" value="" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="zW1O8TjaNUOvfqduSw5c-4" target="m5GmCovmBHHTgXhQDanx-2" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-4896.205000000001" y="2900" as="sourcePoint" />
            <mxPoint x="-4876.655405405405" y="2810" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-29" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;IndexedQueue&amp;lt;uint32_t, Frame&amp;gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];spacingLeft=4;spacingRight=4;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;gradientColor=none;container=0;" parent="fScHyBXz6SIJeMNVfW56-26" vertex="1" connectable="0">
          <mxGeometry x="-0.3491" y="1" relative="1" as="geometry">
            <mxPoint x="1" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-31" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;frame&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;fontFamily=Helvetica;fontSize=12;fontColor=default;fillColor=none;gradientColor=none;container=0;strokeWidth=4;width=100;height=50;" parent="1" vertex="1">
          <mxGeometry x="-5560" y="2470" width="1550" height="2560" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="zW1O8TjaNUOvfqduSw5c-4" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-4550" y="3065" as="sourcePoint" />
            <mxPoint x="-5390" y="4753.809523809524" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-5040" y="2960" />
              <mxPoint x="-5040" y="2960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-14" value="Frame&lt;div&gt;用于存储planning模块一次运行周期内的全部数据&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5310" y="3220" width="1190" height="1728" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-15" value="-sequence_num_ = 0:uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;表征第几帧数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="40" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-18" value="-planning_start_point_:TrajectoryPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="66" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-19" value="-vehicle_state_:VehicleState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="92" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-20" value="-injector_:std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依赖注射类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="118" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-60" value="-reference_line_info_:std::list&amp;lt;ReferenceLineInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;左中右三条参考线的信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="144" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-59" value="-cur_reference_line_info_ = nullptr:ReferenceLineInfo*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;本&lt;/span&gt;车道参考线的信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="170" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-2" value="-acc_reference_line_infos_:std::list&amp;lt;ReferenceLineInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;acc模式下的参考线信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="196" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-24" value="-obstacles_:ThreadSafeIndexedList&amp;lt;std::string, Obstacle&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物&lt;/span&gt;Obstacle链表，数据处理类DataProcessor中的障碍物处理函数ObstacleDataProcess会将simulink输入的障碍物写入该链表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="222" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-2" value="-st_driving_limits_:STDrivingLimits&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车能力边界，最大能力边界(加减速)和舒适能力边界(加减速)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="248" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-st_guide_line_:&lt;span style=&quot;background-color: initial;&quot;&gt;STGuideLine&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车匀速行驶线&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="274" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-50" value="&lt;div&gt;CIO相关信号&lt;/div&gt;-hard_cio_ref_:SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio激烈驾驶轨迹&lt;div&gt;-soft_cio_ref_:SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cio正常驾驶轨迹&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="300" width="1190" height="58" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-7" value="&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;simulink输入信号，相比于DataProcessor中的信号，Frame中只存储业务后处理逻辑中需要的信号，DataProcessor中存储的是adc接受的全部simulink输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这些数据类型定义在simulinksrc/ADAS_Core_noh_ert_rtw/ADAS_Core_noh_types.h&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;CSC相关信号&lt;div&gt;-cruise_speed_mps_ = 0.0:real32_T&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将CSC的设定表显车速kph转换成实际控车车速m/s(CAN)&lt;/div&gt;&lt;div&gt;-time_gap_level_ = 1:uint8_T&lt;/div&gt;&lt;div&gt;-AP_spd_limit_SPL_ = 0.0:real32_T&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cruise状态机输出的状态&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;-cruise_TJA_state_ = 0:&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-cruise_ACC_state_ = 0:&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;TFL相关信号&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;-TFL_stopline_state_ = 0:&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-TFL_stop_distance_ = 0:&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;VIE相关信号&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;vxvRefMs_:&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;axRefMs2_:&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;axvRoadSlopeMs2_:&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;控制相关信号&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;lonc_vlc_internal_acc_:&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;目标相关信号&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;acc_p0_:&lt;span style=&quot;background-color: initial;&quot;&gt;TOS_ACCP0_BUS&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;换道意图相关信号&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;lc_intention_detail_ = LCIntentionDetail::None：LCIntentionDetail&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;None = 0,&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;LeftPole(拨杆变道) = 1,&amp;nbsp;&amp;nbsp;LeftNohRecommendation(noh强推变道) = 2,&amp;nbsp;&amp;nbsp;LeftReduceSpeed(压速变道)&amp;nbsp;= 4,&amp;nbsp;&amp;nbsp;LeftExchange(交换区变道)&amp;nbsp;= 8,&amp;nbsp;&amp;nbsp;LeftAvoidObs(绕障变道)&amp;nbsp;= 16,&amp;nbsp;&amp;nbsp;LeftMpRecommendation(MP强推变道) = 32,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;  RightPole = -1,&amp;nbsp;&amp;nbsp;RightNohRecommendation = -2,&amp;nbsp;&amp;nbsp;RightReduceSpeed = -4,&amp;nbsp;&amp;nbsp;RightExchange = -8,&amp;nbsp; RightAvoidObs = -16,&amp;nbsp;&amp;nbsp;RightMpRecommendation = -32,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="358" width="1190" height="572" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="930" width="1190" height="8" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-16" value="+Frame(uint32_t sequence_num, &lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const TrajectoryPoint &amp;amp;planning_start_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const VehicleState &amp;amp;vehicle_state,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector):构造函数，成员初始化使用初始化列表&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="938" width="1190" height="92" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-1" value="+Init(const std::list&amp;lt;ReferenceLine&amp;gt;&amp;amp; reference_lines):Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;从成员规划起始点&lt;span style=&quot;background-color: initial;&quot;&gt;planning_start_point_中取到自车当前车速和加速度，利用ivista工具类中提供的查表函数，根据当前车速得到加减速最大能力边界和舒适能力边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;有了以上变量&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用成员st_driving_limits_和st_guide_line_的初始化函数Init初始化这两个成员；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用成员函数CreateReferenceLineInfo&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，通过输入reference_lines&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;初始化成员reference_line_info_和cur_reference_line_info_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1030" width="1190" height="70" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-42" value="+AddObstacle(const Obstacle &amp;amp;obstacle):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在原始障碍物链表obstacles_中添加新障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1100" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-43" value="+Find(const std::string &amp;amp;id):Obstacle*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物查找函数，根据输入的障碍物id在原始障碍物链表obstacles_中查找障碍物，并返回指向该障碍物的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1126" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;更新simulink输入信号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+UpdateCscInfo(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_speed_kph&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;time_gap_level&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AP_spd_limit_SPL&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新CSC相关信号，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;Status定义在thirdparty/x86/common/include/status.h，表征API调用的返回状态，有OK、success、failure并包含错误消息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+UpdateCruiseStateInfo(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_TJA_state&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_acc_state&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;):&lt;/span&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新CruiseState相关信号&lt;span style=&quot;background-color: rgb(153, 153, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+UpdateTFLInfo(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;uint8_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;stop_line_state,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;real32_T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;stop_distance&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;):&lt;/span&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新TFL相关信号&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+SetVxvRefMs(real32_T res):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;设置VIE相关信号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+SetAxRefMs2(real32_T res):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;设置VIE相关信号&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+SetAxvRoadSlopeMs2(real32_T res):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;设置VIE相关信号&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+SetLONCVLCInternalAcc(real32_T res):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;设置控制相关信号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+SetAccP0(TOS_ACCP0_BUS res):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;设置目标相关信号&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1152" width="1190" height="216" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-10" value="+void SetHardCioRef(const SpeedData ref):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将输入ref写入成员cio激烈驾驶&lt;/span&gt;轨迹hard_cio_ref_&lt;div&gt;+void SetSoftCioRef(const SpeedData ref):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;将输入ref写入成员cio正常驾驶&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;轨迹soft_cio_ref_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1368" width="1190" height="50" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-49" value="-CreateReferenceLineInfo(const std::list&amp;lt;ReferenceLine&amp;gt;&amp;amp; reference_lines):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线信息生成函数&lt;div&gt;1.遍历输入的全部参考线reference_lines调用参考线信息类ReferenceLineInfo的构造函数构造参考线信息对象并依次推入成员&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.遍历成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_的各元素，调用ReferenceLineInfo类成员函数Init，对各&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo类对象中的成员cruise_speed_和成员path_decision_的成员obstacles_进行赋值，函数输入为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员obstacles_&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_speed_mps_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;遍历成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_的各元素，找到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo类对象成员reference_line_的成员position_type_为Cur本车道的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo类&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对象，写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cur_reference_line_info_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1418" width="1190" height="132" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-8" value="+mutable_acc_reference_line_info():std::list&amp;lt;ReferenceLineInfo&amp;gt;*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回指向成员acc模式下的参考线信息acc_reference_line_infos_的指针，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;函数名中的mutable表示返回值为指针&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1550" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-3" value="+mutable_reference_line_info():std::list&amp;lt;ReferenceLineInfo&amp;gt;*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回指向成员acc模式下的参考线信息reference_line_info_的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1576" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+GetVehicleDynamicsLimits() const：const&amp;nbsp;std::pair&amp;lt;STDrivableBoundary,&amp;nbsp;STDrivableBoundary&amp;gt;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回成员st_driving_limits_的可行驶边界成员drivable_bound_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+GetVehicleDynamicsLimits(const STDrivableBoundary&amp;amp; boundary,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double t,&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; STDrivableBoundaryInstance* st_boundary) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在输入&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary中根据输入指定的时间t，查值构造&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STDrivableBoundaryInstance类对象，写入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundary，超过范围的t维持端点值。返回成功标志位，当输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary为空时返回false&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1602" width="1190" height="100" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-34" value="+GetVehicleGuideLine()：const&amp;nbsp;SpeedData&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回成员st_guide_line_的成员guideline_speed_data_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-14" vertex="1">
          <mxGeometry y="1702" width="1190" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-25" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ThreadSafeIndexedList&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;线程安全索引列表&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;modules/adc/src/noh_planner/common/indexed_list.h&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=64;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5490" y="2940" width="340" height="124" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-26" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-25" vertex="1">
          <mxGeometry y="64" width="340" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-27" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8JCNk2U0JjAdMXNqzOKq-25" vertex="1">
          <mxGeometry y="90" width="340" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-28" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-25" vertex="1">
          <mxGeometry y="98" width="340" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-29" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;template &amp;lt;索引号类型 I, 索引值类型 T&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;IndexedList&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;用于管理带索引的链表&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;modules/adc/src/noh_planner/common/indexed_list.h&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=90;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5505" y="2545" width="370" height="260" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-30" value="-object_dict_:std::unordered_map&amp;lt;I,&amp;nbsp;T&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;元素存储表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-29" vertex="1">
          <mxGeometry y="90" width="370" height="26" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-6" value="-object_list_:std::vector&amp;lt;const&amp;nbsp;T*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-29" vertex="1">
          <mxGeometry y="116" width="370" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-31" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="8JCNk2U0JjAdMXNqzOKq-29" vertex="1">
          <mxGeometry y="142" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-32" value="+Add(const I id, const T&amp;amp; object):T*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;在object_dict_和object_list_中插入新元素，并返回指向该新元素的指针；若非新元素，则无操作，并返回指向输入元素的指针&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-29" vertex="1">
          <mxGeometry y="150" width="370" height="70" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-7" value="+Items() const:const&amp;nbsp;std::vector&amp;lt;const&amp;nbsp;T*&amp;gt;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回object_list_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="8JCNk2U0JjAdMXNqzOKq-29" vertex="1">
          <mxGeometry y="220" width="370" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-33" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;IndexedList&lt;span style=&quot;text-align: left;&quot;&gt;&amp;lt;std::string, Obstacle&amp;gt;&lt;/span&gt;&lt;/div&gt;" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-25" target="8JCNk2U0JjAdMXNqzOKq-29" edge="1">
          <mxGeometry x="-0.1379" width="160" relative="1" as="geometry">
            <mxPoint x="-5570" y="2806" as="sourcePoint" />
            <mxPoint x="-5410" y="2806" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-34" value="使用这个容器管理障碍物" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="8JCNk2U0JjAdMXNqzOKq-25" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-5140" y="3015" as="sourcePoint" />
            <mxPoint x="-4980" y="3015" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-1" value="HistoryObjectDecision&lt;div&gt;历史障碍物决策类，相比于HistoryStatus中的ObjectStatus包含更多的决策信息&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-7686.5" y="1900" width="610" height="336.49999999999994" as="geometry" />
        </mxCell>
        <mxCell id="HFpVUEeg75ciD2D8HKTY-1" value="-id_:std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物id" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-1" vertex="1">
          <mxGeometry y="50" width="610" height="26" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-44" value="-object_decision_:std::vector&amp;lt;ObjectDecisionType&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物的决策类型？全部障碍物？&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;ObjectDecisionType定义在thirdparty/x86/common/proto/Planning/decision.proto，包含决策种类&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;ObjectIgnore&lt;/div&gt;&lt;div&gt;    ObjectStop&lt;/div&gt;&lt;div&gt;    ObjectFollow&lt;/div&gt;&lt;div&gt;    ObjectYield&lt;/div&gt;&lt;div&gt;    ObjectOvertake&lt;/div&gt;&lt;div&gt;    ObjectNudge&lt;/div&gt;&lt;div&gt;    ObjectAvoid&lt;/div&gt;&lt;div&gt;    ObjectSidePass&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-1" vertex="1">
          <mxGeometry y="76" width="610" height="200" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-2" value="-object_hidden_decision_:std::vector&amp;lt;ObjectDecisionType&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物的隐决策？全部障碍物？" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-1" vertex="1">
          <mxGeometry y="276" width="610" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-1" vertex="1">
          <mxGeometry y="302.21666666666664" width="610" height="8.066666666666666" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-4" value="+" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-1" vertex="1">
          <mxGeometry y="310.2833333333333" width="610" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-9" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-5" target="5JwgbHoywKSMs2gWUFIL-1" edge="1">
          <mxGeometry x="-0.4267" y="10" relative="1" as="geometry">
            <mxPoint x="-6901.5" y="831.4166666666665" as="sourcePoint" />
            <mxPoint x="-6741.5" y="831.4166666666665" as="targetPoint" />
            <mxPoint as="offset" />
            <Array as="points">
              <mxPoint x="-7381.5" y="1830" />
              <mxPoint x="-7381.5" y="1830" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="R6yMHHjHUhYibpEbnA3r-3" value="一帧历史数据类存储全部历史障碍物的决策" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="5JwgbHoywKSMs2gWUFIL-9" vertex="1" connectable="0">
          <mxGeometry x="-0.1277" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-11" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HistoryStatus&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;存储关心的历史障碍物的状态，并提供根据id读写障碍物状态的功能&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6881.5" y="1320.0033333333336" width="467.5" height="181.08333333333331" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-12" value="-object_id_to_status_:std::unordered_map&amp;lt;std::string, ObjectStatus&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;根据障碍物id查障碍物状态&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-11" vertex="1">
          <mxGeometry y="50" width="467.5" height="40.33333333333333" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-11" vertex="1">
          <mxGeometry y="90.33333333333333" width="467.5" height="8.066666666666666" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-22" value="+SetObjectStatus(const std::string&amp;amp; id,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;const ObjectStatus&amp;amp; object_status):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;设置障碍物状态&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-11" vertex="1">
          <mxGeometry y="98.39999999999999" width="467.5" height="42.35" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-14" value="+GetObjectStatus(const std::string&amp;amp; id,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;const ObjectStatus&amp;amp; object_status):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;div&gt;获取障碍物状态，并返回是否成功获取的标志位&lt;br&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-11" vertex="1">
          <mxGeometry y="140.75" width="467.5" height="40.33333333333333" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ObjectStatus&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;decision.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6801.5" y="1673.9666666666662" width="307.5" height="175.03333333333333" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-21" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ObjectMotionType motion_type&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;静态障碍物or动态障碍物&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-16" vertex="1">
          <mxGeometry y="50" width="307.5" height="50.416666666666664" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-17" value="ObjectDecisionType decision_type&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;障碍物决策，跟停、跟车、让行、超车、避让等&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-16" vertex="1">
          <mxGeometry y="100.41666666666666" width="307.5" height="40.33333333333333" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-16" vertex="1">
          <mxGeometry y="140.75" width="307.5" height="8.066666666666666" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-19" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-16" vertex="1">
          <mxGeometry y="148.81666666666666" width="307.5" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-20" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-11" target="5JwgbHoywKSMs2gWUFIL-16" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-7242.75" y="972.5833333333335" as="sourcePoint" />
            <mxPoint x="-7242.75" y="902" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-23" value="History&lt;div&gt;历史类&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-7741.5" y="1199.996666666667" width="720" height="190.00333333333333" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-24" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-HistoryStatus history_status_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史状态对象&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-23" vertex="1">
          <mxGeometry y="44" width="720" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-29" value="-history_frames_:std::list&amp;lt;HistoryFrame&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史帧决策链表，历史5帧" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-23" vertex="1">
          <mxGeometry y="70.21666666666667" width="720" height="26.22" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-23" vertex="1">
          <mxGeometry y="96.43666666666667" width="720" height="8.066666666666666" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-26" value="+Add(const ADCTrajectory&amp;amp; adc_trajectory_pb, const Frame* frame)：int&lt;div&gt;若成员history_frames_的size&amp;gt;=5标定量，pop第一个元素，否则继续&lt;/div&gt;&lt;div&gt;新建&lt;span style=&quot;background-color: initial;&quot;&gt;HistoryFrame类型局部变量history_frame，调用其中的Init函数，初始化&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frame内成员的初值，最后将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;history_frame推入成员history_frames_中&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在DataProcessor::FillPlanningPb中调用&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-23" vertex="1">
          <mxGeometry y="104.50333333333333" width="720" height="85.5" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-30" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-23" target="5JwgbHoywKSMs2gWUFIL-5" edge="1">
          <mxGeometry x="-0.1254" y="10" relative="1" as="geometry">
            <mxPoint x="-7181.5" y="1214.5833333333335" as="sourcePoint" />
            <mxPoint x="-7021.5" y="1214.5833333333335" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="R6yMHHjHUhYibpEbnA3r-2" value="历史类内存储多帧历史数据" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="5JwgbHoywKSMs2gWUFIL-30" vertex="1" connectable="0">
          <mxGeometry x="-0.1649" y="-1" relative="1" as="geometry">
            <mxPoint y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-31" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-23" target="5JwgbHoywKSMs2gWUFIL-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-6581.5" y="1345.6666666666665" as="sourcePoint" />
            <mxPoint x="-6421.5" y="1345.6666666666665" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-32" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;history&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;width=130;height=50;strokeWidth=4;" parent="1" vertex="1">
          <mxGeometry x="-7881.5" y="1140" width="1480" height="1090" as="geometry" />
        </mxCell>
        <mxCell id="8JCNk2U0JjAdMXNqzOKq-45" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="zWTbZChh2CSGO8JRFA1Z-10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-7490.04" y="2810.000000000001" as="sourcePoint" />
            <mxPoint x="-4320.04" y="4190.000000000001" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-3460" y="3900" />
              <mxPoint x="-3460" y="5035" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HistoryFrame&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;历史决策类&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相比于FrameHistory，这个类里只包含障碍物决策历史数据&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=74;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-7746.5" y="1489.9966666666664" width="730" height="299.99666666666667" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-6" value="-object_decisions_:std::vector&amp;lt;HistoryObjectDecision&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;历史全部障碍物决策" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="74" width="730" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-15" value="-lonc_vlc_internal_acc_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;控制模块的执行加速度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="100.21666666666667" width="730" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-28" value="-adc_trajactory_:ADCTrajectory&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定义在planning.proto中" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="126.43333333333334" width="730" height="26.216666666666665" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-27" value="-seq_num_:int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入的轨迹消息的序列号，类似于id，上电后运行的第一帧seq_num_为0，之后每运行一帧+1，在Init函数中通过规划轨迹对其赋值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="152.65" width="730" height="41.35" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="194" width="730" height="8.066666666666666" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-8" value="+GetObjectDecisions() const:std::vector&amp;lt;const&amp;nbsp;HistoryObjectDecision*&amp;gt;&lt;div&gt;读全部历史障碍物决策序列object_decisions_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="202.06666666666666" width="730" height="47.07" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-1" value="+Init(const ADCTrajectory&amp;amp; adc_trajactory, const Frame* frame = nullptr)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化决策相关成员&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="5JwgbHoywKSMs2gWUFIL-5" vertex="1">
          <mxGeometry y="249.13666666666666" width="730" height="50.86" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;STGuideLine&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;匀速运动&lt;/span&gt;速度线类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6290" y="3820" width="630" height="240" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-10" value="-v0_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前自车车速" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="50" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-31" value="-total_time_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划总时长，标定值&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="76" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-30" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-guideline_speed_data_:&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;匀速运动的速度线，时间间隔0.1s&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="102" width="630" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="128" width="630" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-12" value="+Init(double current_v, double total_time):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数&lt;div&gt;成员v0_、total_time_由输入current_t、total_time写入&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="136" width="630" height="54" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--11" value="+GetGuideLine()：const&amp;nbsp;SpeedData&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;生成匀速运动速度线&lt;div&gt;以0.1s的间隔生成SpeedPoint类对象(只写入s、v、t)，写入&lt;span style=&quot;background-color: initial;&quot;&gt;guideline_speed_data_，并返回&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;guideline_speed_data_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-9" vertex="1">
          <mxGeometry y="190" width="630" height="50" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-23" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;ST可行驶边界&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=230;height=60;strokeWidth=4;" parent="1" vertex="1">
          <mxGeometry x="-7290" y="2610" width="1430" height="1050" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-44" value="&lt;span style=&quot;&quot;&gt;STDrivableBoundary.proto&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;ST可行驶边界类，是一个序列&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;thirdparty/x86/common/proto/Planning/st_drivable_boundary.proto&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-23" vertex="1">
          <mxGeometry x="62.5" y="92" width="450" height="120" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-45" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;repeated STDrivableBoundaryInstance st_boundary&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-44" vertex="1">
          <mxGeometry y="60" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-46" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-44" vertex="1">
          <mxGeometry y="86" width="450" height="8" as="geometry" />
        </mxCell>
        <mxCell id="zWTbZChh2CSGO8JRFA1Z-47" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;rounded=0;" parent="zWTbZChh2CSGO8JRFA1Z-44" vertex="1">
          <mxGeometry y="94" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-22" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-23" source="zWTbZChh2CSGO8JRFA1Z-44" target="4BFno3uP-ZcI9NOxWfNB-18" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-25" y="60" as="sourcePoint" />
            <mxPoint x="135" y="60" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-18" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;STDrivableBoundaryInstance&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;STDrivableBoundary类中存储的元素&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-23" vertex="1">
          <mxGeometry x="60" y="360" width="455" height="194" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-19" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;t:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应时刻&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;s_lower:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t时刻下自车s坐标下界，通过最大减速度计算&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;s_upper:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t时刻下自车s坐标下界，通过最大加速度计算&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;v_obs_lower:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t时刻下自车速度下界，通过最大减速度计算&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;v_obs_upper:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t时刻下自车速度上界，通过最大加速度计算&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-18" vertex="1">
          <mxGeometry y="50" width="455" height="110" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-18" vertex="1">
          <mxGeometry y="160" width="455" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-21" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-18" vertex="1">
          <mxGeometry y="168" width="455" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;STDrivingLimits&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;自车行驶边界类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-23" vertex="1">
          <mxGeometry x="590" y="50" width="730" height="946" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-24" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-drivable_bound_:&lt;span style=&quot;background-color: initial;&quot;&gt;std::pair&amp;lt;STDrivableBoundary, STDrivableBoundary&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;可行驶边界，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&amp;lt;最大边界，舒适边界&amp;gt;，时间间隔0.1s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;其中最大边界包括最大加速能力边界和最大减速能力边界，舒适边界包括舒适加速边界和舒适减速边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="44" width="730" height="46" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;通用信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-curr_v_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前自车车速&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-curr_a_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;当前自车加速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_v_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车最大车速，标定值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-total_time_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划总时长，标定值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;/div&gt;&lt;div style=&quot;&quot;&gt;自车最大能力边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_acc_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最大加速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_dec_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最大减速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_ajerk_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最大加速jerk&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_djerk_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最大减速jerk&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;自车舒适能力边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-comfort_acc_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;舒适加速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-comfort_dec_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;舒适减速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-comfort_ajerk_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;舒适加速jerk&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-comfort_djerk_:&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;舒适减速jerk&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="90" width="730" height="300" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="390" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-7" value="+Init(double curr_v,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double curr_a,&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_v,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double total_time,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_acc,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_dec,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_ajerk,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double max_djerk,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double comfort_acc,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double comfort_dec,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double comfort_ajerk,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double comfort_djerk):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化函数，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;通用信息、最大能力边界和舒适边界成员由函数输入初始化；可行驶边界成员&lt;span style=&quot;background-color: initial;&quot;&gt;drivable_bound_调用函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GenerateVehicleDynamicsLimits进行初始化&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="398" width="730" height="260" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-8" value="-GenerateVehicleDynamicsLimits():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;生成车辆动态边界&lt;/span&gt;&lt;div&gt;根据最大能力边界和舒适能力边界，以0.1s的间隔，调用函数&lt;span style=&quot;background-color: initial;&quot;&gt;AppendVehicleDynamicsLimits&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;向成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;drivable_bound_中写入值&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="658" width="730" height="60" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-26" value="-AppendVehicleDynamicsLimits(STDrivableBoundary&amp;amp; st_dirvable_bound,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const STDrivableBoundaryInstance&amp;amp; pre_st_bound,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double&amp;amp; cur_acc,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double&amp;amp; cur_dec,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double time_step, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double max_acc,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double max_dec,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double max_ajerk,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double max_dajerk):void&lt;/div&gt;&lt;div style=&quot;&quot;&gt;在输入st_dirvable_bound中根据能力上下边界和时间步长time_step添加ST可行驶边界元素类&lt;span style=&quot;text-align: center;&quot;&gt;STDrivableBoundaryInstance&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="718" width="730" height="202" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--13" value="+GetVehicleDynamicsLimits() const：const&amp;nbsp;std::pair&amp;lt;STDrivableBoundary,&amp;nbsp;STDrivableBoundary&amp;gt;&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回成员drivable_bound_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-4" vertex="1">
          <mxGeometry y="920" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-28" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-23" source="4BFno3uP-ZcI9NOxWfNB-4" target="zWTbZChh2CSGO8JRFA1Z-44" edge="1">
          <mxGeometry x="-0.2258" y="20" relative="1" as="geometry">
            <mxPoint x="400" y="140" as="sourcePoint" />
            <mxPoint x="560" y="140" as="targetPoint" />
            <Array as="points">
              <mxPoint x="570" y="150" />
              <mxPoint x="570" y="150" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-29" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="4BFno3uP-ZcI9NOxWfNB-4" edge="1">
          <mxGeometry x="-0.4615" y="-5" relative="1" as="geometry">
            <mxPoint x="-5360" y="3080" as="sourcePoint" />
            <mxPoint x="-5470" y="3080" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-5350" y="3390" />
              <mxPoint x="-5350" y="3390" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-32" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="4BFno3uP-ZcI9NOxWfNB-9" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-5560" y="3740" as="sourcePoint" />
            <mxPoint x="-5400" y="3740" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-5620" y="3910" />
              <mxPoint x="-5620" y="3910" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-41" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-9" target="4BFno3uP-ZcI9NOxWfNB-48" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-6180" y="4060" as="sourcePoint" />
            <mxPoint x="-6280" y="3911.0476190476184" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-6360" y="3911" />
              <mxPoint x="-6360" y="3911" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-48" value="&lt;font style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;速度线数据&lt;/b&gt;&lt;/font&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=170;strokeWidth=4;height=40;" parent="1" vertex="1">
          <mxGeometry x="-7120" y="3730" width="665" height="820" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-43" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpeedPoint.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;速度轨迹点类&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-48" vertex="1">
          <mxGeometry x="146.25" y="580" width="372.5" height="174" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-44" value="s:double&lt;div&gt;t&lt;span style=&quot;background-color: initial;&quot;&gt;:double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;v&lt;span style=&quot;background-color: initial;&quot;&gt;:double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;a&lt;span style=&quot;background-color: initial;&quot;&gt;:double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;da&lt;span style=&quot;background-color: initial;&quot;&gt;:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;jerk&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-43" vertex="1">
          <mxGeometry y="60" width="372.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-45" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-43" vertex="1">
          <mxGeometry y="140" width="372.5" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-46" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-43" vertex="1">
          <mxGeometry y="148" width="372.5" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-37" value="std::vector&amp;lt;SpeedPoint&amp;gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-48" vertex="1">
          <mxGeometry x="235" y="360" width="195" height="86" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-38" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-37" vertex="1">
          <mxGeometry y="26" width="195" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-39" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-37" vertex="1">
          <mxGeometry y="52" width="195" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-40" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-37" vertex="1">
          <mxGeometry y="60" width="195" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-47" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-48" source="4BFno3uP-ZcI9NOxWfNB-37" target="4BFno3uP-ZcI9NOxWfNB-43" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="57.5" y="340" as="sourcePoint" />
            <mxPoint x="217.5" y="340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-33" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;SpeedData&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-48" vertex="1">
          <mxGeometry x="77.5" y="60" width="510" height="146" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-34" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-33" vertex="1">
          <mxGeometry y="26" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-35" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-33" vertex="1">
          <mxGeometry y="52" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6ibLDvTvOvNRvsP2Sin3-1" value="+explicit SpeedData(std::vector&amp;lt;SpeedPoint&amp;gt; speed_points)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-33" vertex="1">
          <mxGeometry y="60" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-36" value="+EvaluateByTime(const double t,&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedPoint* const speed_point) const：bool&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在速度线上找到对应输入时间t上的速度点，并存储在输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_point中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-33" vertex="1">
          <mxGeometry y="86" width="510" height="60" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-42" value="" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-48" source="4BFno3uP-ZcI9NOxWfNB-33" target="4BFno3uP-ZcI9NOxWfNB-37" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="57.5" y="180" as="sourcePoint" />
            <mxPoint x="217.5" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-51" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="4BFno3uP-ZcI9NOxWfNB-48" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-6030" y="3930" as="sourcePoint" />
            <mxPoint x="-5870" y="3930" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-6590" y="3690" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-53" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6wdL3qndjjb1l8kqZaIJ-1" target="8JCNk2U0JjAdMXNqzOKq-14" edge="1">
          <mxGeometry x="-0.9616" relative="1" as="geometry">
            <mxPoint x="-4410" y="2340" as="sourcePoint" />
            <mxPoint x="-4250" y="2340" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-3430" y="3430" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-54" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;IVistaUtils&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;ivista工具&lt;span style=&quot;background-color: initial;&quot;&gt;静态&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;类，用于提供ivista法规加速度和jerk的限值&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6070" y="4190" width="400" height="190" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-55" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-54" vertex="1">
          <mxGeometry y="50" width="400" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-56" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-54" vertex="1">
          <mxGeometry y="76" width="400" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-57" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+getMaxAcc(double v, bool ivista = true):&lt;span style=&quot;background-color: initial;&quot;&gt;static double&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+getMaxDec(double v, bool ivista = true):&lt;span style=&quot;background-color: initial;&quot;&gt;static double&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+getMaxJerk(double v, bool ivista = true):&lt;span style=&quot;background-color: initial;&quot;&gt;static double&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;+getMinJerk(double v, bool ivista = true):&lt;span style=&quot;background-color: initial;&quot;&gt;static double&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ivista=true表示使用ivista规定的最大能力；ivista=false表示使用舒适能力&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-54" vertex="1">
          <mxGeometry y="84" width="400" height="106" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-58" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-1" target="4BFno3uP-ZcI9NOxWfNB-54" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-5520" y="4240" as="sourcePoint" />
            <mxPoint x="-5360" y="4240" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-70" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="Ijnevb-9qaTQt8viAWx_-3" target="4BFno3uP-ZcI9NOxWfNB-66" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-2785" y="2140" as="sourcePoint" />
            <mxPoint x="-2625" y="2140" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-2650" y="2068" />
              <mxPoint x="-2555" y="2068" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-71" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;参考线&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=165;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="-3245" y="1430" width="2240" height="2620" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-61" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ReferenceLineInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;参考线信息类&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;相比于参考线类ReferenceLine，多了障碍物信息&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;一个ReferenceLineInfo对应一条ReferenceLine&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=90;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-71" vertex="1">
          <mxGeometry x="1205" y="60" width="970" height="740" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-62" value="-vehicle_state_:const VehicleState&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="90" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-73" value="-adc_planning_point_:const TrajectoryPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划轨迹起点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="116" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-75" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-reference_line_:&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLine&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应参考线&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="142" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-74" value="-reference_lines_:std::list&amp;lt;ReferenceLine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="168" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-22" value="-path_data_：PathData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径规划结果，路径数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="194" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-16" value="-path_decision_：PathDecision&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径决策结果" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="220" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-1" value="-speed_data_：SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度规划结果，速度线数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="246" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-1" value="-cruise_speed_ = -1.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;巡航车速，m/s" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="272" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-9" value="-st_graph_data_：StGraphData&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st图数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="298" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-debug_：Debug&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;debug信息，整个决策规划模块的debug观测量，&lt;span style=&quot;background-color: initial;&quot;&gt;Debug类定义在thirdparty/x86/common/proto/Planning/planning_debug.proto&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="324" width="970" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-63" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="350" width="970" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-64" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+ReferenceLineInfo(const VehicleState&amp;amp; vehicle_state,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const TrajectoryPoint&amp;amp; adc_planning_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const ReferenceLine&amp;amp; reference_line,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const std::list&amp;lt;ReferenceLine&amp;gt;&amp;amp; reference_lines)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;构造函数，初始化列表&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="358" width="970" height="107" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-1" value="+IsChangeLanePath(const Vec2d&amp;amp; point = Vec2d(0, 0)) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;输入xy坐标系下一个点判断这个点是否在成员reference_line_的车道内，若不在返回true，表示此时自车在换道，&lt;span style=&quot;background-color: initial;&quot;&gt;这里默认参数为自车坐标系原点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="465" width="970" height="43" as="geometry" />
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-2" value="+Init(const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全部障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double cruise_speed,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//巡航设定车速&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//依赖注射器&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;向成员path_decision_中的成员&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_写值，向成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_speed_写值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="508" width="970" height="112" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-14" value="+GetNearestLane(const Vec2d&amp;amp; point,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，目标点&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ReferenceLine* refline,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用于存储成员reference_lines_中距离目标点法向距离最近的那条参考线，称为最近参考线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;double *curr_s,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用于存储目标点到最近参考线上投影点的s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double *curr_l) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//用于存储目标点到最近参考线上投影点的法相距离，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;绝对值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;遍历成员reference_lines_中的各个ReferenceLine类型元素&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-61" vertex="1">
          <mxGeometry y="620" width="970" height="120" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-66" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ReferenceLine&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;参考线类&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;在实例化时一条参考线类ReferenceLine对象对应一条simulink输入的path&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=70;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-71" vertex="1">
          <mxGeometry x="120" y="870" width="900" height="1332" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-10" value="-path_source_ = PathSource::UNKNOWN: PathSource&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应path的来源" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="70" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-67" value="-position_type_:PositionType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应path相对于自车的位置类型" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="96" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-11" value="-edge_ref_type_:EdgeRefType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应path距离最近的道路边界类型" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="122" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-14" value="-path_type_ = PathType::Empty: PathType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应path类型&lt;div&gt;0--Left左车道中心线&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1--Cur当前车道中心线&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2--Empty空&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3--Right右车道中心线&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4--PulOver靠边停车线&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;5--Blind探路盲开线&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="148" width="900" height="52" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-15" value="-lc_info_:std::vector&amp;lt;LcInformation&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应path左右车道线的换道信息，存储顺序为[左车道线的换道信息，右车道线的换道信息]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="200" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-59" value="-vis_line_:std::vector&amp;lt;PP_LINE&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;全部三车道的四条车道线，存储顺序为[左左、左、右、右右]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="226" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-58" value="-vis_edge_:std::vector&amp;lt;PP_LINE&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;道路边界线，存储顺序为[左、右]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="252" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-61" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-line_id_ = 0:&lt;span style=&quot;background-color: initial;&quot;&gt;int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线id，从pp线中读取&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="278" width="900" height="32" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-57" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-quality_ = 1.0:&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线质量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，从pp线中读取&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="310" width="900" height="30" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-62" value="-offset_dist_ = 0.0:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线偏移量，从pp线读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="340" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-63" value="-navi_recLevel_ = NoRecommend：NaviRecLevel&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线导航推荐等级，从pp线读取" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="366" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-3" value="-reference_points_:std::vector&amp;lt;ReferencePoint&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考点序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="392" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-3" value="导航信息成员&lt;div&gt;-intersection_type_ = IntersectionType::UNKNOWN：&lt;span style=&quot;background-color: initial;&quot;&gt;IntersectionType&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-intersection_area_ = IntersectionArea::UNKNOWN：&lt;span style=&quot;background-color: initial;&quot;&gt;IntersectionArea&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-memory_lc_intention_ = MemoryLCIntention::UNKNOWN：&lt;span style=&quot;background-color: initial;&quot;&gt;MemoryLCIntention&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;-next_elecfence_range_ = 1e6&amp;nbsp;：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-latest_cl_dis_ = 0.0&amp;nbsp;：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-mpliot_dist_to_exit_= 1e6：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-mpliot_spd_rec_ = 1e6：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-lc_num_ = 0：int&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(156, 220, 254); background-color: rgb(31, 31, 31); font-family: &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;monospace&amp;quot;, monospace; font-size: 14px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="418" width="900" height="162" as="geometry" />
        </mxCell>
        <mxCell id="3bqp5ODEZR5uIWAhxG4H-3" value="-is_target_ref_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否为目标车道参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="580" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-13" value="-is_cur_ref_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否为本车道参考线" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="606" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-4" value="-accumulated_s_:std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;每个参考点位置的参考线弧长累和，即每个参考点的s坐标序列&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="632" width="900" height="38" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-68" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="670" width="900" height="8" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+ReferenceLine(PP_PATH pn_pp_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//一条pn_pp_path生成一条参考线ReferenceLine对象&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;std::vector&amp;lt;PP_LINE&amp;gt; vis_lines,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//车道线，不是车道中心线，三条车道四条车道线，左左、左、右、右右&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;std::vector&amp;lt;PP_LINE&amp;gt; vis_edges,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//道路边界线，两条路沿，左、右&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;std::vector&amp;lt;LcInformation&amp;gt; lc_info,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre; background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;条车道线&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;的换道信息，每条车道线包含虚实信息和虚实段长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;MP_PILOTINFO mp_pilotinfo,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//记忆行车导航信息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;int i)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//该条pn_pp_path在数组pn_pp_path[6]中的索引号&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vis_lines、vis_edges初始化成员vis_line_和vis_edge_；输入pn_pp_path初始化成员line_id_、quality_、offset_dist_、navi_recLevel_；调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetRefPoint初始化成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_points_；调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PathTypeInit初始化成员path_source_、position_type_、edges_ref_type_、path_type；调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;LcInfoInit初始化成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lc_info_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;；调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PilotInfoInit初始化导航信息成员&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="678" width="900" height="176" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-65" value="+GetRefPoint(PP_PATH pn_pp_path)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据输入pn_pp_path得到离散化后的参考点序列写入成员reference_points_&lt;div&gt;调用函数成员GetPoint得到实例化输入&lt;span style=&quot;background-color: initial;&quot;&gt;pn_pp_path上&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;参考点类ReferencePoint所需输入，根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pn_pp_path上的x坐标由小到大&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用参考点类ReferencePoint的构造函数实例化得到pn_pp_path上的离散参考点序列，依次推入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_points_中&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="854" width="900" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-2" value="+GetPoint(const double&amp;amp; x, const double&amp;amp; C0, const double&amp;amp; C1, const double&amp;amp; C2,&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;C3&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;double*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;y&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;heading&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;kappa&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const：void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据输入三次多项式曲线的系数得到输入x坐标下的y坐标、朝向角、曲率，分别写入输入y、heading、kappa&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="914" width="900" height="64" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+PathTypeInit(PP_PATH pn_pp_path, int i):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PP_PATH类对象类型初始化&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;根据输入的对应path的Source向成员&lt;span style=&quot;background-color: initial;&quot;&gt;path_source_写值；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据输入的对应path的Type向成员&lt;/span&gt;position_type_&lt;span style=&quot;background-color: initial;&quot;&gt;写值；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据输入的对应path的&lt;/span&gt;EdgeRefType&lt;span style=&quot;background-color: initial;&quot;&gt;向成员&lt;/span&gt;edge_ref_type_&lt;span style=&quot;background-color: initial;&quot;&gt;写值；根据对应path在path数组中的索引位置i向成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_type_写值&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="978" width="900" height="70" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+LcInfoInit(std::vector&amp;lt;LcInformation&amp;gt; lc_info, int i):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考线换道信息初始化函数，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里的输入是4条车道线的换道信息&lt;/span&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;根据输入的4条车道线换道信息lc_info，根据&lt;span style=&quot;background-color: initial;&quot;&gt;对应path在path数组中的索引位置i，挑选该path左右车道线的换道信息写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lc_info_，若对应path非左中右，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lc_info_写入空值&lt;/span&gt;&lt;/div&gt;&lt;/blockquote&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1048" width="900" height="64" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-66" value="+PilotInfoInit(MP_PILOTINFO mp_pilotinfo):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;导航信息初始化函数，将输入mp_pilotinfo中的导航信息写入参考线类ReferenceLine的成员" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1112" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-69" value="+GetPositionType() const:PositionType&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回position_type_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1138" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-47" value="-Interpolate(const ReferencePoint&amp;amp; p0, const double s0,&lt;br&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const ReferencePoint&amp;amp; p1, const double s1,&lt;br&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;   &lt;/span&gt;const double s):ReferencePoint&lt;div&gt;通过指定的s在p0点和p1点之间线形插值找到对应参考点的xy坐标，构造ReferencePoint对象返回&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1164" width="900" height="72" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-48" value="+GetReferencePoint(const double s) const:ReferencePoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;通过线性插值找输入s对应的参考线上的点，通过&lt;span style=&quot;background-color: initial;&quot;&gt;accumulated_s_找参考点&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1236" width="900" height="44" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-49" value="+Length() const:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回参考线长度{ return accumulated_s_.back(); }" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1280" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9bf47KpHjE6bdmcJn5c--6" value="+XYToSL(const Vec2d&amp;amp; xy_point,&lt;span style=&quot;background-color: initial;&quot;&gt;SLPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sl_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const：&lt;/span&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将xy坐标下的点转换到SL坐标系，结果存入sl_point" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-66" vertex="1">
          <mxGeometry y="1306" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-76" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-71" source="4BFno3uP-ZcI9NOxWfNB-61" target="4BFno3uP-ZcI9NOxWfNB-66" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="570" y="790" as="sourcePoint" />
            <mxPoint x="730" y="790" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1455" y="970" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-5" value="ReferencePoint&lt;div&gt;XY坐标系&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-71" vertex="1">
          <mxGeometry x="1115" y="1620" width="470" height="200" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-6" value="-heading_ = 0.0:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考点的朝向角&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-kappa_ = 0.0:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考点的曲率&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-dkappa_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考点的曲率变化率&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-5" vertex="1">
          <mxGeometry y="40" width="470" height="60" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="kzcMpU4epHDK3Gdo8-ln-5" vertex="1">
          <mxGeometry y="100" width="470" height="8" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-8" value="+ReferencePoint(const Vec2d&amp;amp; xy_point,&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const double heading, const double kappa,&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const double dkappa = 0.0)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;调用父类Vec2d的构造函数实例化父类部分，剩下的子类特有成员使用初始化列表，&lt;/div&gt;&lt;div style=&quot;&quot;&gt;同时由于曲率变化率一般不使用，故这里给的默认参数为0&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-5" vertex="1">
          <mxGeometry y="108" width="470" height="92" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-71" source="4BFno3uP-ZcI9NOxWfNB-66" target="kzcMpU4epHDK3Gdo8-ln-5" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="640" y="1300" as="sourcePoint" />
            <mxPoint x="800" y="1300" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1045" y="1710" />
              <mxPoint x="1045" y="1710" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-50" value="&lt;span style=&quot;text-align: left;&quot;&gt;PP_PATH_BUS&lt;/span&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="4BFno3uP-ZcI9NOxWfNB-71" vertex="1">
          <mxGeometry x="1135" y="1020" width="430" height="550" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-51" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;Source&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;0--UNKNOW无效&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1--Dashed当前车道中心线来源于RFM根据地图的拟合的线，实际没有车道线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2--Left当前车道中心线来源于该车道的左车道线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3--Right&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线来源于该车道的右车道线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4--Double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线来源于该车道的双侧车道线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5--Dop&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线来源于目标探路盲开线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;6--Fusion当前车道中心线来源于RFM计算的车道中心线&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-50" vertex="1">
          <mxGeometry y="26" width="430" height="164" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-54" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;Type&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;0--UNKNOW无效&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1--Cur&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线为本车道中心线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2--Left当前车道中心线为左车道中心线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3--Right当前车道中心线为右车道中心线&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;4--Mrc当前车道中心线为靠边停车线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;5--Entry&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线为汇入线合流路口&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;6--Exit&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线为汇出线分流路口&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-50" vertex="1">
          <mxGeometry y="190" width="430" height="160" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-55" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;EdgeRefType&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1--Left当前车道中心线靠近左侧道路边界&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2--Right&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线靠近右侧道路边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3--Double&lt;span style=&quot;background-color: initial;&quot;&gt;当前车道中心线靠近两侧道路边界&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-50" vertex="1">
          <mxGeometry y="350" width="430" height="90" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-64" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;NaviRecLevel&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-1--NoPassageAllowed禁止通行&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;0--StrongRecommend强推荐&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1--WeakRecommend弱推荐&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2--NoRecommend不推荐&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-50" vertex="1">
          <mxGeometry y="440" width="430" height="110" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-56" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="4BFno3uP-ZcI9NOxWfNB-71" source="4BFno3uP-ZcI9NOxWfNB-66" target="kzcMpU4epHDK3Gdo8-ln-50" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1360" y="650" as="sourcePoint" />
            <mxPoint x="1520" y="650" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4BFno3uP-ZcI9NOxWfNB-72" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="8JCNk2U0JjAdMXNqzOKq-14" target="4BFno3uP-ZcI9NOxWfNB-71" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-4260" y="2950" as="sourcePoint" />
            <mxPoint x="-3965" y="3270" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-3700" y="3710" />
              <mxPoint x="-3700" y="3710" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;template&amp;lt;索引号类型 I,索引值类型 T&amp;gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;IndexedQueue&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;用于管理带索引的队列，功能类似于vector&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;modules/adc/src/noh_planner/common/indexed_queue.h&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=86;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-4850" y="2843" width="470" height="256.6" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-18" value="+map_:std::unordered_map&amp;lt;I, std::unique_ptr&amp;lt;T&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储元素查询表&lt;div&gt;通过索引号查询元素的功能主要通过该哈希表实现，根据I查T&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="86" width="470" height="40.95" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-27" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+capacity_:&lt;span style=&quot;background-color: initial;&quot;&gt;size_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最大存储个数&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="126.95" width="470" height="27.3" as="geometry" />
        </mxCell>
        <mxCell id="9bf47KpHjE6bdmcJn5c--2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+queue_:&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;queue&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;I&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;T&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储类型为T的元素的队列&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="154.25" width="470" height="26" as="geometry" />
        </mxCell>
        <mxCell id="m5GmCovmBHHTgXhQDanx-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="180.25" width="470" height="8" as="geometry" />
        </mxCell>
        <mxCell id="fScHyBXz6SIJeMNVfW56-20" value="+explicit IndexedQueue(size_t capacity):&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;构造函数，对成员capacity_赋初值来完成类的构造&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;container=0;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="188.25" width="470" height="42.35" as="geometry" />
        </mxCell>
        <mxCell id="9bf47KpHjE6bdmcJn5c--3" value="+Latest() const：const T*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回指向成员queue_的最后一个类型为T的对象的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="m5GmCovmBHHTgXhQDanx-2" vertex="1">
          <mxGeometry y="230.6" width="470" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VGIkBZhOoSKE9tPILx4s-1" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6wdL3qndjjb1l8kqZaIJ-1" target="4BFno3uP-ZcI9NOxWfNB-48" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-2460" y="1460" as="sourcePoint" />
            <mxPoint x="-6710" y="2920" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-7970" y="530" />
              <mxPoint x="-7970" y="4140" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="APxx2EGmygYpqpyiRNHT-1" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Factory&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;template &amp;lt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; typename IdentifierType,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//显式的告诉编译器 标识符&lt;span style=&quot;background-color: initial;&quot;&gt;IdentifierType是一个类型而不是一个变量&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class AbstractProduct,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//这里class与typename一样，都是告诉编译器&lt;span style=&quot;background-color: initial;&quot;&gt;AbstractProduct是一个类型&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class ProductCreator = AbstractProduct *(*)(),&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//这里使用了默认模板参数，类型&lt;span style=&quot;background-color: initial;&quot;&gt;ProductCreator的默认值为函数指针类型&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AbstractProduct *(*)()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; class MapContainer = std::map&amp;lt;IdentifierType,&lt;span style=&quot;background-color: initial;&quot;&gt;ProductCreator&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//使用默认模板参数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;IdentifierType表示产品种类的类型&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;AbstractProduct表示产品的抽象类&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ProductCreator表示创建产品对象的函数，即生产者&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;MapContainer表示产品种类和生产者之间的映射关系，即特定生产者可以生产特定种类的产品&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=left;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=220;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1080" y="-1470" width="950" height="580" as="geometry" />
        </mxCell>
        <mxCell id="APxx2EGmygYpqpyiRNHT-2" value="-producers_:MapContainer&#x9;表示产品种类和生产者之间的映射关系，存储全部的生产者的map，所谓生产者就是可以生成产品对象的函数指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="220" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="APxx2EGmygYpqpyiRNHT-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="246" width="950" height="8" as="geometry" />
        </mxCell>
        <mxCell id="APxx2EGmygYpqpyiRNHT-4" value="+Register(const IdentifierType &amp;amp;id, ProductCreator creator):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;注册生产者，即向producers_中插入键值对pair(id,creator)，如果生产者有效则注册成功。&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在该函数的输入ProductCreator中定义函数指针，即生产产品的函数的函数体在这里定义&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;注册函数不生成任务类对象，只提供生成任务类对象的函数定义&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="254" width="950" height="56" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-2" value="+Contains(const IdentifierType &amp;amp;id):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查producers_中是否有可以生产指定产品种类id的生产者" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="310" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-3" value="+Unregister(const IdentifierType &amp;amp;id):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在producers_中删除指定id的键值对，若成功删除返回true" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="336" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-4" value="+Clear():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;清空producers_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="362" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-5" value="+Empty() const:bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;校验producers_是否为空" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="388" width="950" height="26" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-6" value="+template &amp;lt;typename... Args&amp;gt;&lt;div&gt;&amp;nbsp; CreateObjectOrNull(const IdentifierType &amp;amp;id,Args &amp;amp;&amp;amp;... args):std::unique_ptr&amp;lt;AbstractProduct&amp;gt;:&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;给定的产品种类id，若该id在producers_中存在，则调用对应的函数指针ProductCreator生成产品对象AbstractProduct，并返回指向该产品对象AbstractProduct的指针；若该id在producers_中不存在，返回空指针&lt;/div&gt;&lt;div&gt;typename... Args表示可变模板参数，这个参数包存放着生产者这个函数ProductCreator所需的全部参数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;任务类对象的构造在这里完成&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="414" width="950" height="106" as="geometry" />
        </mxCell>
        <mxCell id="iMCgXXuPmT37YGtHRQd3-9" value="+template &amp;lt;typename... Args&amp;gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; CreateObject(const IdentifierType &amp;amp;id,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Args &amp;amp;&amp;amp;... args):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std::unique_ptr&amp;lt;AbstractProduct&amp;gt;:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;与上面的成员函数含义完全一样，在函数体内部调用一次&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObjectOrNull，实际上使用的也是&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObject而非&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObjectOrNull&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="APxx2EGmygYpqpyiRNHT-1" vertex="1">
          <mxGeometry y="520" width="950" height="60" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-1" value="TaskFactory&lt;div&gt;任务工厂静态类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2030" y="-1460" width="850" height="560" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-2" value="-static task_factory_:Factory&amp;lt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;TaskConfig::TaskType,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;Task,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Task *(*)(const TaskConfig &amp;amp;config,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector),&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::unordered_map&amp;lt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TaskConfig::TaskType,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;Task *(*)(const TaskConfig &amp;amp;config,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector),&lt;/div&gt;&lt;div style=&quot;&quot;&gt;          &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;std::hash&amp;lt;int&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;任务工厂，Factory模板类的实例化。TaskType定义了产品种类，Task为工厂生产的产品类型，生产者的输入为config和injector，通过哈希表unordered_map存储映射关系，使用int类型的哈希值作为索引&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vT7Xdxdd8HU9_829ViZ7-1" vertex="1">
          <mxGeometry y="40" width="850" height="274" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-5" value="-static default_task_configs_:std::unordered_map&amp;lt;TaskConfig::TaskType, TaskConfig, std::hash&amp;lt;int&amp;gt;&amp;gt;&lt;div&gt;默认任务配置映射表，当没有指定scenario时使用&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vT7Xdxdd8HU9_829ViZ7-1" vertex="1">
          <mxGeometry y="314" width="850" height="40" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="vT7Xdxdd8HU9_829ViZ7-1" vertex="1">
          <mxGeometry y="354" width="850" height="8" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-4" value="+static Init(const PlanningConfig &amp;amp;config,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector):void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;定义各种不同的Task子类名称及其的生成函数之间的对应关系&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用Register函数初始化task_factory_的producers_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，在任务工厂中称为任务配置映射表，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;producers_中定义了生成特定种类Task的函数指针&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;；通过输入的PlanningConfig初始化&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;default_task_configs_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vT7Xdxdd8HU9_829ViZ7-1" vertex="1">
          <mxGeometry y="362" width="850" height="108" as="geometry" />
        </mxCell>
        <mxCell id="vT7Xdxdd8HU9_829ViZ7-9" value="+static CreateTask(&lt;span style=&quot;background-color: initial;&quot;&gt;const TaskConfig &amp;amp;task_config,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt; &amp;amp;injector):std::unique_ptr&amp;lt;Task&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;调用不同Task子类的构造函数生成对应的对象&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;使用任务工厂task_factory_中的方法&lt;span style=&quot;background-color: initial;&quot;&gt;CreateObject，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;根据输入的不同任务配置task_config和依赖注射器指针std::shared_ptr&amp;lt;DependencyInjector&amp;gt;，创建不同的Task子类对象，并返回指向这个Task类对象的指针&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="vT7Xdxdd8HU9_829ViZ7-1" vertex="1">
          <mxGeometry y="470" width="850" height="90" as="geometry" />
        </mxCell>
        <mxCell id="5JwgbHoywKSMs2gWUFIL-62" value="&lt;font color=&quot;#cc0066&quot; size=&quot;1&quot; style=&quot;&quot;&gt;&lt;b style=&quot;font-size: 34px;&quot;&gt;任务工厂&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-1960" y="-1530" width="160" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-7" value="ScenarioConfig&lt;div&gt;planning_config.proto&lt;/div&gt;&lt;div&gt;在lane_follow_config.prototxt中定义的type为LANE_FOLLOW&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=57;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1330" y="-480" width="570" height="154" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-8" value="repeated StageConfig stage_config&lt;div&gt;&amp;nbsp;&#x9;&lt;br&gt;在lane_follow_config.prototxt中只定义了一个stage_config，其type为LANE_FOLLOW_DEFAULT_STAGE&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-7" vertex="1">
          <mxGeometry y="57" width="570" height="63" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tYoZKa7LIVWvfuPdVHDL-7" vertex="1">
          <mxGeometry y="120" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-10" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-7" vertex="1">
          <mxGeometry y="128" width="570" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-11" value="StageConfig&#xa;planning_config.proto&#xa;在lane_follow_config.prototxt中只定义了一个stage_config，其type为LANE_FOLLOW_DEFAULT_STAGE&#xa;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1490" y="-270" width="890" height="264" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-12" value="repeated TaskConfig task_config&lt;br&gt;&lt;br&gt;在lane_follow_config.prototxt中，对于LANE_FOLLOW_DEFAULT_STAGE定义的task序列，其TaskType及对应任务类为&lt;br&gt;PRE_DECIDER----------------------------------------------------------PreDecider&lt;br&gt;PATH_BOUNDS_DECIDER------------------------------------------PathBoundsDecider&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PATH_CENTER_LINE_DECIDER----------------------------------PathCenterLineDecider&lt;/span&gt;&lt;div&gt;PIECEWISE_JERK_PATH_OPTIMIZER--------------------------PiecewiseJerkPathOptimizer&lt;br&gt;PATH_DECIDER---------------------------------------------------------PathDecider&lt;br&gt;RULE_BASED_STOP_DECIDER-----------------------------------RuleBasedStopDecider&lt;br&gt;ST_BOUNDS_DECIDER----------------------------------------------STBoundsDecider&lt;br&gt;SPEED_HEURISTIC_OPTIMIZER---------------------------------PathTimeHeuristicOptimizer&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-11" vertex="1">
          <mxGeometry y="60" width="890" height="170" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tYoZKa7LIVWvfuPdVHDL-11" vertex="1">
          <mxGeometry y="230" width="890" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-14" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-11" vertex="1">
          <mxGeometry y="238" width="890" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-15" value="TaskConfig&lt;div&gt;planning_config.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1435" y="100" width="460" height="484" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-16" value="task_type:TaskType&lt;div&gt;enum&lt;br&gt;&lt;div&gt;PRE_DECIDER&lt;br&gt;PATH_BOUNDS_DECIDER&lt;/div&gt;&lt;div&gt;PATH_CENTER_LINE_DECIDER&lt;br&gt;PIECEWISE_JERK_PATH_OPTIMIZER&lt;br&gt;PATH_DECIDER&lt;br&gt;RULE_BASED_STOP_DECIDER&lt;br&gt;ST_BOUNDS_DECIDER&lt;br&gt;SPEED_HEURISTIC_OPTIMIZER&lt;br&gt;&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;其余未使用&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-15" vertex="1">
          <mxGeometry y="41" width="460" height="189" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-19" value="oneof task_config&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;pre_decider_config：PreDeciderConfig&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;path_bounds_decider_config：PathBoundsDeciderConfig&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;path_center_line_decider_config：&lt;span style=&quot;background-color: initial;&quot;&gt;PathCenterLineDeciderConfig&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;piecewise_jerk_path_optimizer_config：PiecewiseJerkPathOptimizerConfig&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;path_decider_config：PathDeciderConfig&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;rule_based_stop_decider_config：RuleBasedStopDeciderConfig&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;st_bounds_decider_config：STBoundsDeciderConfig&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;speed_heuristic_optimizer_config：SpeedHeuristicOptimizerConfig&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;其余未使用&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-15" vertex="1">
          <mxGeometry y="230" width="460" height="220" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="tYoZKa7LIVWvfuPdVHDL-15" vertex="1">
          <mxGeometry y="450" width="460" height="8" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-18" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="tYoZKa7LIVWvfuPdVHDL-15" vertex="1">
          <mxGeometry y="458" width="460" height="26" as="geometry" />
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-19" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tYoZKa7LIVWvfuPdVHDL-15" target="tYoZKa7LIVWvfuPdVHDL-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1680" y="-79.59000000000015" as="sourcePoint" />
            <mxPoint x="-1520" y="-79.59000000000015" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1205" />
              <mxPoint x="-1205" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tYoZKa7LIVWvfuPdVHDL-20" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tYoZKa7LIVWvfuPdVHDL-11" target="tYoZKa7LIVWvfuPdVHDL-7" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-550" y="-241.21000000000004" as="sourcePoint" />
            <mxPoint x="-300" y="-241.21000000000004" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oxPOzmRVD7sxvV5kMznU-2" value="&lt;font color=&quot;#cc0066&quot; size=&quot;1&quot; style=&quot;&quot;&gt;&lt;b style=&quot;font-size: 34px;&quot;&gt;任务配置&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-1560" y="-590" width="160" height="50" as="geometry" />
        </mxCell>
        <mxCell id="oxPOzmRVD7sxvV5kMznU-3" value="&lt;b&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;在ScenarioConfig对象写入时，初始化TaskConfig类成员，TaskConfig对象写入后任务工厂TaskFactory才能生成Task对象&lt;/font&gt;&lt;/b&gt;&lt;div&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;配置中参数的具体数值写在&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-size: 14px;&quot;&gt;&lt;b&gt;modules/adc/src/noh_planner/config/config_ICU15/planning_config.prototxt&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-1570" y="-540" width="790" height="50" as="geometry" />
        </mxCell>
        <mxCell id="uG4MeVkCdLaI0rsq9yw4-6" value="单acc模式下的task序列为：&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;ST_BOUNDS_DECIDER&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;SPEED_HEURISTIC_OPTIMIZER&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-570" y="-186" width="240" height="86" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-15" value="Decider" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5030" y="-380" width="900" height="170" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-16" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-15" vertex="1">
          <mxGeometry y="26" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="x43RHuNwQAWLNvNylpUT-15" vertex="1">
          <mxGeometry y="52" width="900" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-12" value="+Decider(const TaskConfig&amp;amp; config,&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; injector):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Task&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(config, injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;构造函数，调用基类Task的构造函数初始化基类Task成员frame_、reference_line_info_&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-15" vertex="1">
          <mxGeometry y="60" width="900" height="30" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-25" value="#virtual Process(&lt;span style=&quot;background-color: initial;&quot;&gt;Frame* frame, ReferenceLineInfo* reference_line_info):Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务处理函数，虚函数，在子类中被重写，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;返回OK状态&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-15" vertex="1">
          <mxGeometry y="90" width="900" height="26" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-18" value="+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;Execute&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;Frame* frame, ReferenceLineInfo* reference_line_info) override:&lt;/span&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务执行函数，重写&lt;div&gt;先显式的调用基类Task中的执行函数Execute，初始化成员frame_和reference_line_info_；再调用处理函数Process进行主逻辑&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-15" vertex="1">
          <mxGeometry y="116" width="900" height="54" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-20" value="task_config对应的类&lt;div&gt;thirdparty/x86/common/proto/Planning/task_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-860" y="292" width="350" height="100" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-21" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-20" vertex="1">
          <mxGeometry y="40" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-22" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="x43RHuNwQAWLNvNylpUT-20" vertex="1">
          <mxGeometry y="66" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-23" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="x43RHuNwQAWLNvNylpUT-20" vertex="1">
          <mxGeometry y="74" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-24" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="tYoZKa7LIVWvfuPdVHDL-15" target="x43RHuNwQAWLNvNylpUT-20" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-930" y="180" as="sourcePoint" />
            <mxPoint x="-770" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="x43RHuNwQAWLNvNylpUT-26" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="x43RHuNwQAWLNvNylpUT-15" target="tYoZKa7LIVWvfuPdVHDL-25" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="5030" y="264" as="sourcePoint" />
            <mxPoint x="4800" y="214" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-3" value="PreDecider" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3420" y="-540" width="940" height="480" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-4" value="-path_recommend_map_:std::unordered_map&amp;lt;PositionType, ReferenceLine*&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据参考线相对于自车的位置&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，查对应的ReferenceLine对象&lt;/span&gt;&lt;div&gt;由于成员frame_中的参考线信息成员&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_只有&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;左中右三条，因此参考线对应的相对于自车的位置类型只有左中右三种&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="26" width="940" height="44" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="70" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-13" value="+&lt;span style=&quot;background-color: initial;&quot;&gt;PreDecider&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; TaskConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; config,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; injector)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Decider&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(config, injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，调用基类Decider构造函数初始化基类Decider成员frame_、reference_line_info_&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="78" width="940" height="52" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-6" value="+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;Process&lt;/span&gt;(Frame* frame,*&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo* reference_line_info) override:Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;任务处理函数，重写，任务执行入口&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;先判断成员injecctor_的成员plan_context_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;predecider_processed_是否置位，若为true表示PreDecider类任务已经执行过，跳出处理函数，否则继续，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用函数成员InitPreDecider向成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_recommend_map_写入初值，若成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_recommend_map_中没有本车道参考线，返回函数，否则继续，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PathSelectProcess，将成员frame_中的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_中各条参考线元素的成员reference_line_的成员is_target_ref_和is_cur_ref_赋予初始值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="130" width="940" height="76" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-9" value="-InitPreDecider():void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;前决策任务初始化函数&lt;div&gt;进入该函数表示PreDecider类任务在本帧第一次执行，首先将成员&lt;span style=&quot;background-color: initial;&quot;&gt;injecctor_的成员plan_context_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;predecider_processed_置为true，然后&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;遍历成员frame_中的成员reference_line_info_中的ReferenceLineInfo类元素，读取各元素的成员reference_line_和&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;reference_line_的&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员position_type_，写入成员path_recommend_map_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="206" width="940" height="70" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-11" value="-PathSelectProcess():void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将三条参考线打上是否为本车道或者目标车道的标签&lt;div&gt;读取成员frame_中的换道意图成员&lt;span style=&quot;background-color: initial;&quot;&gt;lc_intention_detail_，如果为拨杆、noh强推、mp强推、压速、避障导致变道，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;通过成员path_recommend_map_查询将对应方向的ReferenceLine类对象指针，并写入ReferenceLine对象中的目标车道标志位成员is_target_ref_为true；将&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员path_recommend_map_中位置类型为当前车道的参考线的成员is_cur_ref_置为true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在入口函数NOH_PLANNING中在任务PreDecider执行完成后，读取DataProcessor类的唯一实例化对象中的成员frame_的成员全部三条参考线信息reference_line_info_，通过list的容器的splice函数将本车道参考线移到&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;reference_line_info_首位，在遍历&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;reference_line_info_时，若该条参考线成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;is_target_ref_和&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;is_cur_ref_都为false，则continue掉该条参考线，即只对标签为本车道和目标车道的参考线进行task_list_遍历&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="276" width="940" height="120" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-12" value="-static TwoPathCompare(ReferenceLineInfo&amp;amp; lhs, ReferenceLineInfo&amp;amp; rhs):bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对参考线信息列表std::list&amp;lt;ReferenceLineInfo&amp;gt;中的元素进行排序的比较函数&lt;div&gt;调用std::list&amp;lt;ReferenceLineInfo&amp;gt;容器的sort函数的自定义比较函数，其比较规则为（按规则判断优先级由高到低排序）：&lt;/div&gt;&lt;div&gt;1.如果输入的两条参考线信息lhs和rhs的位置类型&lt;span style=&quot;&quot;&gt;position_type_只有一个为本车道，将其排在前面；如果两条都为本车道，排序不变；如果都不为本车道，跳过判断&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;&quot;&gt;如果输入的两条参考线信息lhs和rhs的导航推荐等级&lt;/span&gt;&lt;span style=&quot;&quot;&gt;navi_recLevel_一条为强推荐另一条为其他，则将强推荐的线排在前面，如果一条为弱推荐另一条为不推荐或禁止通行，将弱推荐线排在前面&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=#000000;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;labelBackgroundColor=none;labelBorderColor=none;fillStyle=cross-hatch;" parent="I94j1_RwSaS1liBqiiPH-3" vertex="1">
          <mxGeometry y="396" width="940" height="84" as="geometry" />
        </mxCell>
        <mxCell id="I94j1_RwSaS1liBqiiPH-7" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="I94j1_RwSaS1liBqiiPH-3" target="x43RHuNwQAWLNvNylpUT-15" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4945" y="424" as="sourcePoint" />
            <mxPoint x="5105" y="424" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-34" value="Vec2d&lt;div&gt;二维平面中的向量&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="200" y="3006" width="555" height="300" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-35" value="#x_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;二维平面向量的x坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="40" width="555" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-36" value="#y_:double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;二维平面向量的y坐标" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="66" width="555" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-37" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="92" width="555" height="8" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-1" value="+constexpr Vec2d(const double x, const double y) noexcept : x_(x), y_(y) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;constexpr关键字表示常量成员函数，noexcept关键字表示该函数不会抛出异常，这两个关键字都是在编译时起作用&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="100" width="555" height="54" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+rotate(const double angle) const：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入一个角度angle(弧度制)，返回将该向量旋转这个角度后得到的新向量，旋转角度正方向为x轴正方向到y轴正方向的旋转方向，通过坐标旋转矩阵实现&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="154" width="555" height="50" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-22" value="+SelfRotate(const double angle)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将该向量本身绕起点旋转angle角度(弧度)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="204" width="555" height="26" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-11" value="+Angle() const { return std::atan2(y_, x_); }：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回向量与x轴正方向的夹角" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="230" width="555" height="26" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-14" value="&lt;div&gt;+InnerProd(const Vec2d &amp;amp;other) const {&lt;span style=&quot;background-color: initial;&quot;&gt;return x_ * other.x() + y_ * other.y();&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;输入另外一个向量other，计算两向量之间的内积/点积&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="kzcMpU4epHDK3Gdo8-ln-34" vertex="1">
          <mxGeometry y="256" width="555" height="44" as="geometry" />
        </mxCell>
        <mxCell id="kzcMpU4epHDK3Gdo8-ln-42" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="kzcMpU4epHDK3Gdo8-ln-5" target="kzcMpU4epHDK3Gdo8-ln-34" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-2585" y="3030" as="sourcePoint" />
            <mxPoint x="-2425" y="3030" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;FrameHistory&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;frame历史队列，其实只有历史一帧&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=55;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5110" y="2545" width="740" height="148" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-5" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zW1O8TjaNUOvfqduSw5c-4" vertex="1">
          <mxGeometry y="55" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="zW1O8TjaNUOvfqduSw5c-4" vertex="1">
          <mxGeometry y="81" width="740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="zW1O8TjaNUOvfqduSw5c-7" value="+FrameHistory():&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造函数&lt;div&gt;调用父类初始化函数IndexedQueue&amp;lt;uint32_t, Frame&amp;gt;(FLAGS_max_frame_history_num)初始化父类成员，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;其中FLAGS参数为1，表示队列只记录历史一帧数据&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zW1O8TjaNUOvfqduSw5c-4" vertex="1">
          <mxGeometry y="89" width="740" height="59" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-1" value="SpeedOptimizer&lt;div&gt;速度优化器类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="17700" y="-130" width="940" height="384" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="40" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="66" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-14" value="+SpeedOptimizer(&lt;span style=&quot;background-color: initial;&quot;&gt;const TaskConfig&amp;amp; config,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Task(config, injector) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;构造函数，调用基类的构造函数初始化基类成员" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="74" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;Execute&lt;/span&gt;(Frame* frame,&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo* reference_line_info) override：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;先显示的调用基类Task中的执行函数Execute，初始化成员frame_和reference_line_info_；再调用处理函数Process进行主逻辑，Process计算得到的速度规划结果写入成员reference_line_info_中的成员speed_data_；调用debug记录函数RecordDebugInfo，将任务名称成员name_和上一步得到的速度规划结果写入成员reference_line_info_中的成员debug_&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="100" width="940" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-15" value="#virtual Process(const PathData&amp;amp; path_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;SpeedData&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_data&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;0：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;任务处理函数，纯虚函数，无函数实体，必须在子类中重写&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="180" width="940" height="74" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-16" value="#RecordDebugInfo(const SpeedData&amp;amp; speed_data)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度线debug话题记录函数&lt;div&gt;将任务名称成员name_和规划好的速度线输入&lt;span style=&quot;background-color: initial;&quot;&gt;speed_data&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;写入成员reference_line_info_中的成员debug_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="254" width="940" height="50" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-23" value="#RecordDebugInfo(const SpeedData&amp;amp; speed_data,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;std::vector&amp;lt;FMTPoint&amp;gt;&amp;gt;&amp;amp; candidate_trajectory, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STGraphDebug* st_graph_debug)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//存储debug信息&lt;/div&gt;&lt;div style=&quot;&quot;&gt;DP搜索结果debug话题记录函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-1" vertex="1">
          <mxGeometry y="304" width="940" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-5" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="Y4-yIGm9fwrnqA95aYLy-1" target="tYoZKa7LIVWvfuPdVHDL-25" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1370" y="200" as="sourcePoint" />
            <mxPoint x="1530" y="200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-10" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="Y4-yIGm9fwrnqA95aYLy-6" target="Y4-yIGm9fwrnqA95aYLy-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="14740" y="530" as="sourcePoint" />
            <mxPoint x="14900" y="530" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-2" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-61" target="4BFno3uP-ZcI9NOxWfNB-48" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1550" y="2010" as="sourcePoint" />
            <mxPoint x="-2000" y="1290" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1590" y="5160" />
              <mxPoint x="-6120" y="5160" />
              <mxPoint x="-6120" y="4120" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-18" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;debug信息&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=180;strokeWidth=4;height=57;" parent="1" vertex="1">
          <mxGeometry x="-810" y="1440.25" width="560" height="679.75" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-4" value="Debug.proto&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;定义在thirdparty/x86/common/proto/Planning/planning_debug.proto&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-18" vertex="1">
          <mxGeometry x="55" y="92" width="450" height="67" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;planning_data:PlanningData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划数据&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-4" vertex="1">
          <mxGeometry y="41" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-8" value="PlanningData&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;定义在thirdparty/x86/common/proto/Planning/planning_debug.proto&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-18" vertex="1">
          <mxGeometry x="60" y="223" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;repeated speed_plan:SpeedPlan&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度规划数据&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;repeated st_graph：&lt;span style=&quot;background-color: initial;&quot;&gt;STGraphDebug&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st图数据&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-8" vertex="1">
          <mxGeometry y="40" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-12" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-18" source="HuAyBqt8NcXd-a5JXoLN-4" target="HuAyBqt8NcXd-a5JXoLN-8" edge="1">
          <mxGeometry x="-0.25" y="5" relative="1" as="geometry">
            <mxPoint x="145" y="183" as="sourcePoint" />
            <mxPoint x="305" y="183" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-14" value="&lt;div&gt;SpeedPlan&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;定义在thirdparty/x86/common/proto/Planning/planning_debug.proto&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-18" vertex="1">
          <mxGeometry x="60" y="509.75" width="440" height="84" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-15" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;name：&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;记录任务名称&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated speed_point&amp;nbsp;：&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度线上的速度点&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-14" vertex="1">
          <mxGeometry y="40" width="440" height="44" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-17" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-18" source="HuAyBqt8NcXd-a5JXoLN-8" target="HuAyBqt8NcXd-a5JXoLN-14" edge="1">
          <mxGeometry x="-0.4706" y="5" relative="1" as="geometry">
            <mxPoint x="225" y="313" as="sourcePoint" />
            <mxPoint x="385" y="313" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-20" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-61" target="HuAyBqt8NcXd-a5JXoLN-18" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1100" y="1540" as="sourcePoint" />
            <mxPoint x="-940" y="1540" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-870" y="1620" />
              <mxPoint x="-870" y="1620" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-57" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;路径数据&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=170;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="-7630" y="4700" width="1465" height="1180" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-27" value="DiscretizedPath&lt;div&gt;离散规划路径点序列&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="910" y="350" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-28" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-27" vertex="1">
          <mxGeometry y="40" width="420" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-29" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="HuAyBqt8NcXd-a5JXoLN-27" vertex="1">
          <mxGeometry y="66" width="420" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-30" value="+Length() const：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径总长&lt;div&gt;调用vector的方法back和front，取到末了和起始路径点，s相减得到总长&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-27" vertex="1">
          <mxGeometry y="74" width="420" height="46" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-23" value="PathData&lt;div&gt;路径规划数据类，规划结果&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=36;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="290" y="80" width="1060" height="170" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-24" value="-discretized_path_：DiscretizedPath&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;离散规划路径点序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-23" vertex="1">
          <mxGeometry y="36" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-23" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;path_point_decision_guide_：&lt;/span&gt;std::vector&amp;lt;std::tuple&amp;lt;double, PathPointType, double&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;每个路径点上的决策信息，用于速度决策&lt;div&gt;ctor存储每个路径点，每个路径点的属性由tuple存储，包括&amp;lt;该路径点在参考线上的s坐标，路径点类型，距离最近障碍物的距离&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-23" vertex="1">
          <mxGeometry y="62" width="1060" height="48" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-7" value="-frenet_path_：FrenetFramePath&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;在参考线frenet坐标系下的路径" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-23" vertex="1">
          <mxGeometry y="110" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="HuAyBqt8NcXd-a5JXoLN-23" vertex="1">
          <mxGeometry y="136" width="1060" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-26" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-23" vertex="1">
          <mxGeometry y="144" width="1060" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-31" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="HuAyBqt8NcXd-a5JXoLN-23" target="HuAyBqt8NcXd-a5JXoLN-27" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="835" y="190" as="sourcePoint" />
            <mxPoint x="995" y="190" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1120" y="260" />
              <mxPoint x="1120" y="260" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-37" value="PathPoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="860" y="770" width="520" height="350" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-38" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;x：double&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下x坐标&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;y&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;z&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;直角坐标系下z坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;theta&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;xy平面下路径点处的heading角&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;kappa&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;xy平面下路径点处的曲率&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s&lt;/span&gt;：double&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;从路径起点到该路径点的路径弧长&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dkappa&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;曲率的一阶导数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ddkappa&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;曲率的二阶导数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;lane_id&lt;span style=&quot;background-color: initial;&quot;&gt;：string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// The lane ID where the path point is on&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;  // derivative of x and y w.r.t parametric parameter t in CosThetareferenceline&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double x_derivative = 10;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double y_derivative = 11;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;l：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点相对于参考线的法向距离，即路径点的l坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-37" vertex="1">
          <mxGeometry y="40" width="520" height="310" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-32" value="std::vector&amp;lt;PathPoint&amp;gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="1005" y="584" width="230" height="86" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-33" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-32" vertex="1">
          <mxGeometry y="26" width="230" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-34" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="HuAyBqt8NcXd-a5JXoLN-32" vertex="1">
          <mxGeometry y="52" width="230" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-35" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-32" vertex="1">
          <mxGeometry y="60" width="230" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-36" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="HuAyBqt8NcXd-a5JXoLN-27" target="HuAyBqt8NcXd-a5JXoLN-32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1160" y="480" as="sourcePoint" />
            <mxPoint x="1320" y="480" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-41" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="HuAyBqt8NcXd-a5JXoLN-32" target="HuAyBqt8NcXd-a5JXoLN-37" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="920" y="610" as="sourcePoint" />
            <mxPoint x="1080" y="610" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-24" value="PathPointType" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="10" y="72" width="200" height="208" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-25" value="enum：&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;IN_LANE,&lt;/div&gt;&lt;div&gt;    OUT_ON_FORWARD_LANE,&lt;/div&gt;&lt;div&gt;    OUT_ON_REVERSE_LANE,&lt;/div&gt;&lt;div&gt;    OFF_ROAD,&lt;/div&gt;&lt;div&gt;    NO_TURN,&lt;/div&gt;&lt;div&gt;    LEFT_TURN,&lt;/div&gt;&lt;div&gt;    RIGHT_TURN,&lt;/div&gt;&lt;div&gt;    UNKNOWN,&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-24" vertex="1">
          <mxGeometry y="26" width="200" height="174" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="VXBDi3d1ndRj7hIO50mS-24" vertex="1">
          <mxGeometry y="200" width="200" height="8" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-28" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="VXBDi3d1ndRj7hIO50mS-23" target="VXBDi3d1ndRj7hIO50mS-24" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="270" y="340" as="sourcePoint" />
            <mxPoint x="430" y="340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-8" value="FrenetFramePath&lt;div&gt;离散frenet坐标系路径点&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="290" y="350" width="530" height="100" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-9" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-8" vertex="1">
          <mxGeometry y="40" width="530" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-8" vertex="1">
          <mxGeometry y="66" width="530" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-11" value="+EvaluateByS(const double s) const：FrenetFramePoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;指定s，返回路径上对应的frenet点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-8" vertex="1">
          <mxGeometry y="74" width="530" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;std::vector&amp;lt;FrenetFramePoint&amp;gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="405" y="576" width="310" height="86" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-13" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-12" vertex="1">
          <mxGeometry y="26" width="310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-14" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-12" vertex="1">
          <mxGeometry y="52" width="310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-15" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-12" vertex="1">
          <mxGeometry y="60" width="310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-16" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="6aikKVBvCmk6lyRLQm6R-8" target="6aikKVBvCmk6lyRLQm6R-12" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="270" y="550" as="sourcePoint" />
            <mxPoint x="430" y="550" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-17" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="HuAyBqt8NcXd-a5JXoLN-23" target="6aikKVBvCmk6lyRLQm6R-8" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="829" y="270" as="sourcePoint" />
            <mxPoint x="829" y="370" as="targetPoint" />
            <Array as="points">
              <mxPoint x="560" y="270" />
              <mxPoint x="560" y="270" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-18" value="FrenetFramePoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="HuAyBqt8NcXd-a5JXoLN-57" vertex="1">
          <mxGeometry x="370" y="770" width="380" height="132" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-19" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;s：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点的s坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;l&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路径点的l坐标，相对于参考线frenet坐标系&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;dl&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径点的dl/ds&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ddl&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;路径点的d(dl/ds)/ds&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-18" vertex="1">
          <mxGeometry y="40" width="380" height="84" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-18" vertex="1">
          <mxGeometry y="124" width="380" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-22" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="HuAyBqt8NcXd-a5JXoLN-57" source="6aikKVBvCmk6lyRLQm6R-12" target="6aikKVBvCmk6lyRLQm6R-18" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="200" y="740" as="sourcePoint" />
            <mxPoint x="360" y="740" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-21" value="&lt;font style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;轨迹数据&lt;/b&gt;&lt;/font&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=177;strokeWidth=4;height=50;" parent="1" vertex="1">
          <mxGeometry x="-6918.5" y="6150" width="517" height="520" as="geometry" />
        </mxCell>
        <mxCell id="bZs9VvthoLb4ROwhrg8k-9" value="TrajectoryPoint.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=51;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;spacingLeft=4;spacingRight=4;fillColor=none;gradientColor=none;" parent="krv4bcZnEFRCWFMmFaij-21" vertex="1">
          <mxGeometry x="52" y="110" width="430" height="180" as="geometry" />
        </mxCell>
        <mxCell id="bZs9VvthoLb4ROwhrg8k-14" value="path_point_:PathPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;路径点&lt;div&gt;v：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向速度&lt;/div&gt;&lt;div&gt;a：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加速度&lt;/div&gt;&lt;div&gt;relative_time：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;相对于轨迹起点的时间&lt;br&gt;&lt;/div&gt;&lt;div&gt;da:：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;纵向加加速度&lt;/div&gt;&lt;div&gt;steer：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;前轮转角&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;gaussian_info：&lt;span style=&quot;background-color: initial;&quot;&gt;GaussianInfo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;概率信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=12;fontColor=default;" parent="bZs9VvthoLb4ROwhrg8k-9" vertex="1">
          <mxGeometry y="51" width="430" height="129" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-6" value="Trajectory.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="krv4bcZnEFRCWFMmFaij-21" vertex="1">
          <mxGeometry x="57" y="370" width="420" height="102" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;string name = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated TrajectoryPoint trajectory_point = 2;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="krv4bcZnEFRCWFMmFaij-6" vertex="1">
          <mxGeometry y="40" width="420" height="54" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="krv4bcZnEFRCWFMmFaij-6" vertex="1">
          <mxGeometry y="94" width="420" height="8" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="krv4bcZnEFRCWFMmFaij-21" source="krv4bcZnEFRCWFMmFaij-6" target="bZs9VvthoLb4ROwhrg8k-9" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-113" y="290" as="sourcePoint" />
            <mxPoint x="47" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;GriddedPathTimeTree&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;路径-时间平面网格树类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="17562" y="1861.3" width="1920" height="3694" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-3" value="-st_graph_data_：const StGraphData&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;前面task计算得到的st图数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="50" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-17" value="-gridded_path_time_graph_config_：DpStSpeedOptimizerConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DP速度优化器配置" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="76" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-18" value="-obstacles_：const&amp;nbsp;std::vector&amp;lt;const&amp;nbsp;Obstacle*&amp;gt;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对应参考线的对应路径上挂的障碍物" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="102" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-19" value="-init_point_：TrajectoryPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹起点，从这个起点开始进行速度规划" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="128" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-23" value="-dp_st_cost_：DpStCost&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DP代价类" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="154" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-24" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;搜索配置相关成员&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-total_length_t_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴搜索总长度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-unit_t_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴搜索间隔，等分辨率，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-unit_t_table_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t轴搜索间隔，变分辨率，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;第一个元素为0，从第二个元素起有效&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-dimension_t_ = 0&lt;span style=&quot;background-color: initial;&quot;&gt;：uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴采样点个数，成员time_table_use_的长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-time_table_ = {0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0}：&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;double&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴采样点表&lt;/span&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;包含原点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-time_table_use_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;dp搜索真正使用的t轴采样点表，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;截取time_table_中小于total_length_t_的部分，最后一个元素推入total_length_t_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-total_length_s_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴搜索总长度，配置中的s方向最长长度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-dense_unit_s_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴搜索间隔，等分辨率&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="180" width="1920" height="194" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-21" value="-ref_speed_data_：std::vector&amp;lt;RefSpeedData&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考速度线数据，采样时刻t对应的车速，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="374" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-22" value="-last_speed_data_：SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DP搜索出来的最优速度线？&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="400" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--15" value="-DrivableGaps_：std::unordered_map&amp;lt;int,&amp;nbsp;std::vector&amp;lt;DrivableGap&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;可行区间表，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;根据列号即成员time_table_use_中时间t的索引，查该时刻下所有可用于生长节点的区间，即自车可行走空间，在大喇叭之间减去障碍物占据的区间后的可生长节点的空间&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;vector中存储的可行区间按区间从小到大排列，区间与区间之间没有交集&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="426" width="1920" height="44" as="geometry" />
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-end_node_：&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;StGraphNode&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;搜索最后一列节点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -block_node_&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;StGraphNode&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;被障碍物block掉的点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -unopt_node_&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;std::shared_ptr&amp;lt;StGraphNode&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最优性剪枝剪掉的点&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="470" width="1920" height="90" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-13" value="-cost_table_：std::unordered_map&amp;lt;int,&amp;nbsp;std::unordered_map&amp;lt;int,&amp;nbsp;std::shared_ptr&amp;lt;StGraphNode&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;只有在cost_table_中的节点才可以参与生长&lt;/span&gt;，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;第一维表示t轴的采样索引即列号，第二维表示节点在可行区间里的按照分辨率划分小区间的索引号&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="560" width="1920" height="40" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-2" value="&lt;div&gt;st节点结构体&lt;/div&gt;-sturct &lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;StGraphNode&lt;/span&gt;{&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;StGraphNode(double _t, double _s, int _n, uint32_t _id) : t(_t), s(_s), n(_n), id(_id) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，列表初始化&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;节点t坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点s坐标&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;n = -1：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点的列号，即节&lt;/span&gt;结构体成员&lt;span style=&quot;white-space: pre;&quot;&gt;t在成员time_table_use_中的索引号&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;id = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;uint32_t&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点的行号，即节点在成员函数BFS输入node_list中的索引，也表示该节点时第几次生成的&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;fmt_retrieve = false：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cost_point：&lt;span style=&quot;background-color: initial;&quot;&gt;StGraphPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储该节点各种代价的类&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;pre = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;std::shared_ptr&amp;lt;StGraphNode&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;父节点的指针&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="600" width="1920" height="220" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--14" value="DrivableGap：std::tuple&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;区间类型名重定义，表示某一时刻下区间的下界和上界，&amp;lt;区间下界，区间上界&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="820" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="846" width="1920" height="8" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-5" value="+GriddedPathTimeTree(&lt;span style=&quot;background-color: initial;&quot;&gt;const StGraphData&amp;amp; st_graph_data,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const DpStSpeedOptimizerConfig&amp;amp; dp_config,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const TrajectoryPoint&amp;amp; init_point, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const std::vector&amp;lt;RefSpeedData&amp;gt;&amp;amp; ref_speed_data,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const SpeedData last_speed_data,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const Frame* frame)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.成员&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_data_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;gridded_path_time_graph_config_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point_、ref&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_speed_data_、last&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_speed_data_由输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_data、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dp_config、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point、ref&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_speed_data、last&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_speed_data进行列表初始化&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;total_length_t_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;total_length_s_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dense_unit_s_由成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_data_中的成员toatal_time_by_conf和成员path_length_by_conf、成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;gridded_path_time_graph_config_中的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dense_unit_s进行初始化赋值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;time_table_use_由成员time_table_中比成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;total_length_t_小的那一部分进行初始化赋值，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;time_table_use_进行差分的结果写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;unit_t_table_，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;time_table_use_的长度写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dimension_t_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;4.成员dp_st_cost_由DpStCost的构造函数初始化，构造函数输入为：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入dp_config&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入st_graph_data的成员total_time_by_conf_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入st_graph_data的成员path_data_length_&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入obstacles&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入st_graph_data的成员st_drivable_boundary_&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员init_point_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入ref_speed_data&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入frame&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5.调用成员dp_st_cost_中的函数SetDimension，使用成员dimension_t_更改dp代价成员dp_st_cost_中的t轴维度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;6.调用成员函数GenerateDrivableGaps初始化成员DrivableGaps_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="854" width="1920" height="458" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-30" value="-GenerateDrivableGaps(const Frame* frame,&lt;span style=&quot;background-color: initial;&quot;&gt;const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles)：void&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入frame中的自车最大加减速边界和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles的st边界，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成t轴各采样时刻下在自车最大加减速边界之间减去障碍物的占用空间后可用于生长节点的空隙&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，并写入成员DrivableGaps_，&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;查找的键为各采样时刻t在成员time_table_use_中的索引，某一采样时刻下的全部可行区间在vector中按从小到大排列，区间之间不存在重合&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="1312" width="1920" height="70" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--16" value="+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;Search&lt;/span&gt;(SpeedData* const speed_data ,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储搜索出的最有速度线&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;std::vector&amp;lt;std::vector&amp;lt;FMTPoint&amp;gt;&amp;gt;* const candidate_trajectory)：Status&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储全部FMT生长节点，用于debug&lt;/div&gt;&lt;div&gt;1.st图合理性检验&lt;/div&gt;&lt;div&gt;遍历成员st_graph_data_的成员st_boundaries_，检查st图合理性，即起始点(0,0)不能在障碍物st边界内&lt;/div&gt;&lt;div&gt;对于禁停区障碍物，&lt;span style=&quot;background-color: initial;&quot;&gt;起始点(0,0)可以在障碍物st边界内&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用BFS扩展函数进行fmt节点扩展&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员end_node_、block_node_、unopt_node_都在BFS函数中被赋值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始节点队列中只有st图坐标原点一个元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用成员函数GetCandidateTrajectory&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将成员end_node_、block_node_、unopt_node_中存储的值依次推入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;fmt_debug，用于debug使用，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;candidate_trajectory&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用函数RetrieveSpeedProfile，反向回溯得到最优速度线&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入speed_data&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="1382" width="1920" height="230" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-3" value="-GetDrivableGap(size_t idx,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//列号，时刻t在成员time_table_use_中的索引&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; double lower,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//在该列下，自车能力下边界，小喇叭下边界&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; double upper)：DrivableGap&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;在该列下，自车能力上边界，小喇叭上边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;在确定的列号下，遍历成员DrivableGaps_在该列中的全部可行区间，寻找与小喇叭存在重合的最小可行区间，若小喇叭与全部的可行空间都不重合，通过{lower，upper}构造DrivableGap&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="1612" width="1920" height="78" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-15" value="-EstimateResolution(const DrivableGap&amp;amp; gap)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据输入的gap区间的长度，通过查表得到s方向生长节点时的分辨率，查表函数为：区间长度[1，100]、s方向分辨率[0.1，1]，超过范围的使用端点值" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="1690" width="1920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-9" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;BFS&lt;/span&gt;(std::vector&amp;lt;StGraphNode&amp;gt;&amp;amp; node_list)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点(树枝)扩展函数，输入node_list表示每扩展一次生成的节点，返回是否扩展成功的标志位&lt;div&gt;1.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;更新输入node_list中每个节点的属性，遍历输入node_list中的每个节点node，对于各节点node执行以下计算步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;1.1.计算各节点处的cost，调用成员函数CalculateCostAt，函数输入是node，向node的成员cost_point赋值&lt;/div&gt;&lt;div&gt;1.2.剪枝操作&lt;/div&gt;&lt;div&gt;1.2.1.确定包含着输入node的s位置处的可行区间的分辨率，分别调用成员函数GetDrivableGap得到&lt;span style=&quot;background-color: initial;&quot;&gt;包含着输入node的s位置处的可行区间drivable_gap，和成员函数&lt;/span&gt;EstimateResolution得到该可行空间的分辨率，根据分辨率得到node在可行区间drivable_gap中的索引&lt;/div&gt;&lt;div&gt;1.2.2.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;更新成员block_node_、unopt_node_和cost_table_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;if&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员cost_point的成员total_cost为无穷大 || (根据node的成员n和1.2.1中计算出来的索引，在成员cost_table_中可以找到对应节点 &amp;amp;&amp;amp; node的代价大于等于cost_table_中对应节点的代价)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cost_table_中找不到对应节点说明node是这个索引对应的小区间里的第一个节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;if&amp;nbsp; node的成员cost_point的成员obstacle_cost_为无穷大&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;{&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将node推入成员block_node_ ;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;else&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将node推入成员unopt_node_;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员cost_point的成员total_cost不为无穷大&amp;nbsp; &amp;amp;&amp;amp;&amp;nbsp; 成员cost_table_中可以找到对应节点&amp;nbsp; &amp;amp;&amp;amp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的代价小于cost_table_中对应节点的代价&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//说明新节点node更优&lt;/span&gt;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将&lt;span style=&quot;background-color: initial;&quot;&gt;成员cost_table_中的对应节点(老节点)推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员unopt_node_;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将新节点node取代老节点的位置推入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cost_table_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;GetDrivableGap和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;EstimateResolution，计算node所处s处的可行区间，和s方向的分辨率&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.节点扩展&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用函数GrowNodeList以成员cost_table对应第n列的全部节点为父节点扩展子节点，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入node_list中节点的成员n，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node_list中每个节点的n都是一样的&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建局部变量next_node_list，用于存储生长出来的所有子节点&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.递归调用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;递归调用BFS，函数输入为2中得到的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;next_node_list，递归终止条件在成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GrowNodeList中当搜索的t大于成员total_length_t_或者&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;搜索的s大于成员total_length_s_时，停止递归&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="1716" width="1920" height="464" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-16" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;CalculateCostAt&lt;/span&gt;(StGraphNode&amp;amp; node)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算当前节点node处的cost&lt;div&gt;1.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;基础信息依赖&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1.向输入node的成员cost_point写入初始属性，调用cost_point的成员函数Init，函数输入：node的成员n，node的成员s&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(这里有问题，Init函数需要的是行号，而非s坐标)&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，由node的s和node的t实例化的STPoint类对象&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;1.2.将成员unit_t_table_中node的n对应的t轴分辨率delta_time写入成员dp_st_cost_的成员unit_t_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;1.3.若node的成员pre非空，表示node非起始节点，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;利用公式(v+v_k1)/2 = (s-s_k1)/delta_time，求得当前节点处的速度v，其中v_k1是父节点速度，从node的成员pre的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;optimal_speed_读取，s&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;_k1是父节点s坐标，从node的成员pre的成员sb&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;利用公式a = (v -&amp;nbsp;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;v_k1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)/&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;delta_time，求得当前节点处的加速度a，其中v已由上面一步求得，v_k1同上&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;将输入node的成员pre的成员cost_point写入输入node的成员cost_point的成员pre_point_，即将父节点写入子节点的成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;pre_point_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;node的成员pre为空，表示node是起始节点，则当前节点处的v和a由成员init_point_的v和a取得&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将当前节点处的v和a写入输入node的成员cost_point的成员optimal_speed_和optimal_acc_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;数据保护&lt;/span&gt;&lt;/div&gt;&lt;div&gt;如果输入node的成员t为0，说明节点为初始节点，将node的成员cost_point的成员total_cost_赋值为0，并返回函数&lt;/div&gt;&lt;div&gt;如果在父节点速度对应的ivista加减速度和&lt;span style=&quot;background-color: initial;&quot;&gt;在子节点速度对应的ivista加减速度构成的最小区间，1.3计算出的a不在这个区间内，说明当前点的加速度超过ivista法规限制，将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_acc_cost_置为inf，并返回函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;如果1.3中计算出的v为负，说明出现了倒车工况，&lt;span style=&quot;background-color: initial;&quot;&gt;将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_speed_cost_置为inf，并返回函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;计算当前节点处的各种代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.计算障碍物代价，调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员dp_st_cost_的成员函数GetObstacleCost&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：输入node的成员cost_point。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算结果写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入node的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_cost_，若障碍物代价为inf，返回函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.计算空间代价，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员dp_st_cost_的成员函数GetSpatialPotentialCost&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：输入node的成员cost_point。&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算结果写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入node的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;spatial_potential_cost_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.计算edge代价，调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员函数CalculateEdgeCost&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入node&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤1.3中计算出来的v、a&lt;/span&gt;&lt;/div&gt;&lt;div&gt;通过公式jerk = (a - a_k1)/&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;delta_time，得到当前节点处的jerk，其中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;a_k1是父节点的加速度，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;从node的成员pre的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;optimal_acc_读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员st_graph_data_中的成员&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_speed_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员st_graph_data_中的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_cio_hard_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_cio_soft_，分别调用SpeedLimit类成员函数&lt;/span&gt;GetSpeedLimitByS得到node的s处的三种速度限值&lt;/div&gt;&lt;div&gt;得到的edge代价分别写入&lt;span style=&quot;background-color: initial;&quot;&gt;输入node的成员cost_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_speed_cost_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_acc_cost_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_jerk_cost_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_cost_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.将步骤3.1～3.3的代价求和并加上从原点到父节点的总代价，得到从原点到当前节点的总代价，写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入node的成员cost_point的成员total_cost_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;其中&lt;span style=&quot;background-color: initial;&quot;&gt;从原点到父节点的总代价从输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员pre的成员cost_point的成员total_cost_中读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="2180" width="1920" height="440" as="geometry" />
        </mxCell>
        <mxCell id="7xBfLPEhstN1AAC4Dfrv-3" value="-CalculateEdgeCost(const StGraphNode&amp;amp; node,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double cur_speed,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double acc,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double jerk,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double cruise_speed,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double speed_limit,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double CIO_speed_limit,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                             &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;const double CIO_ref_speed)：&lt;span style=&quot;background-color: initial;&quot;&gt;EdgeCost&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员dp_st_cost_的成员函数GetSpeedCost、GetAccelCost、GetJerkCost&lt;/span&gt;，计算结果写入三元组类&lt;span style=&quot;background-color: initial;&quot;&gt;EdgeCost对象，并返回&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="2620" width="1920" height="200" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-10" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;GrowNodeList&lt;/span&gt;(int n,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前是第几次扩展，列号&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;std::vector&amp;lt;GriddedPathTimeTree::StGraphNode&amp;gt;&amp;amp; node_list)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//由当前列扩展出下一列得到的节点列表，扩展结果存储在输入node_list中&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;1.遍历成员cost_table_在输入父节点列所在列号n处的各个节点node&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;遍历父节点前设置子节点的生成个数初始值id=0，id从0开始计数，也表示子节点和行号&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;1.1.更新成员end_node_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;当node的成员t&amp;gt;成员total_length_t_ ||&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;node的成员s&amp;gt;成员total_length_s_&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;时，将node推入成员end_node_，将循环continue&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;1.2.调用生长节点函数GrowNode，生成子节点，其输入为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;父节点node&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入node_list，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;用于存储全部生成的子节点，当父节点遍历完得到完整的子节点列表&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;node_list&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;子节点生成个数，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;上一次for循环调用函数GrowNode会更新已经生成的子节点的个数id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;2.递归终止条件&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;当&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;node的成员t&amp;gt;成员total_length_t_&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;时，步骤1.1会continue掉所有的父节点，此时id为初始值0，如果子节点在该函数GrowNodeList中一个也没有生成，返回false，终止递归&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;通常&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;node的成员s&amp;gt;成员total_length_s_&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;时不会导致子节点一个都不生成&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="2820" width="1920" height="220" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-11" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;GrowNode&lt;/span&gt;(const std::shared_ptr&amp;lt;StGraphNode&amp;gt;&amp;amp; node,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点，父节点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;StGraphNode&amp;gt;&amp;amp; node_list,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储本次扩展得到的节点列表，父节点生长出来的子节点依次推入&lt;span style=&quot;background-color: initial;&quot;&gt;node_list中，在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GrowNodeList中遍历完父节点后，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node_list得到最终的此次扩展的完整节点列表&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; uint32_t&amp;amp; id)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//子节点在输入node_list中的索引，子节点的生成个数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.数据保护&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员n找到成员time_table_use_中在n+1处的时刻点t，从成员st_graph_data_的成员&lt;/span&gt;st_drivable_boundary_&lt;span style=&quot;background-color: initial;&quot;&gt;取t时刻处的大喇叭上下边界s_upper_bound、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower_bound&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，若上边界小于下边界时返回false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.基础数据依赖&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.根据输入的父节点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;node的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cost_point拿到父节点的速度pre_speed、加速度pre_acc，根据父节点的速度通过ivista静态工具类&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;IVistaUtils拿到父节点处的最大最小加减速度max_acc、max_dec，通过匀变速公式得到从父节点出发当前时刻的小喇叭[s_lower,s_upper]，分别与[&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower_bound，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_upper_bound&lt;/span&gt;&lt;span style=&quot;background-color: initial; text-align: center;&quot;&gt;]取最小交集&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;确定子节点最终的扩展的范围&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;[s_lower,s_upper]&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;2.2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetDrivableGap得到与区间&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;[s_lower,s_upper]有交集的最小可行区间，根据这个可行区间的长度调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;EstimateResolution&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;得到s方向上生长节点的分辨率unit_s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;2.3.在[s_lower,s_upper]内按照分辨率unit_s不考虑障碍物等距生长节点，生长出的节点存入输入node_list&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，调用结构体成员StGraphNode构造函数，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;步骤1中得到的子节点列时刻点t&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;按照分辨率unit_s得到的在该节点处的s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;该节点的列号，父节点node的列号n加1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;该节点的列号id++&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;(从0开始计数)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;同时将父节点node的指针赋值给子节点的成员pre&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="3040" width="1920" height="310" as="geometry" />
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-GetCandidateTrajectory(std::vector&amp;lt;std::vector&amp;lt;FMTPoint&amp;gt;&amp;gt;* const fmt_debug)：void&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;将成员end_node_、block_node_、unopt_node_中存储的值依次推入输入&lt;span style=&quot;background-color: initial;&quot;&gt;fmt_debug，用于debug使用&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="3350" width="1920" height="64" as="geometry" />
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;RetrieveSpeedProfile&lt;/span&gt;(SpeedData* const speed_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储搜索出的最优速度线&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;反向回溯，得到dp搜索出的最优速度线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.遍历成员end_node_中的各节点，根据节点总cost最小选出最优末了节点，存入std::shared_ptr&amp;lt;StGraphNode&amp;gt;类局部变量best_end_node&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2.获取最优速度线信息s和t&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;创建std::vector&amp;lt;SpeedPoint&amp;gt;类局部变量speed_profile用于存储最优速度线&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;将&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;best_end_node中的成员s、t构造&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedPoint类对象推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_profile，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;读取局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;best_end_node中的成员pre并重新更新&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;best_end_node，重复上述操作，直到回溯到st图原点，最后调用std::reverse函数将局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_profile中的元素顺序颠倒，保证按时间从小到大排序&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;获取速度点上的v和a(下发给控制的a)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始点的v、a从成员init_point_上获取&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;遍历局部变量&lt;span style=&quot;background-color: initial;&quot;&gt;speed_profile中的各元素，从第二个元素开始遍历，计算前后两个速度点的ds和dt，计算v时用的公式为(v+v_k1)/2 = ds/dt，计算a时用的公式为a = (v-v_k1)/dt&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(有点问题)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，计算得到的a要满足IVistaUtils工具类的验证，将v、a写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_profile中的各速度点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.数据输出&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用SpeedData类构造函数，将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_profile的值写入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_data&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-2" vertex="1">
          <mxGeometry y="3414" width="1920" height="280" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-6" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="Y4-yIGm9fwrnqA95aYLy-6" target="jmzA_E2FORbxOF1XWL5z-2" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="17850" y="1351.3" as="sourcePoint" />
            <mxPoint x="18010" y="1351.3" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-10" value="&lt;span style=&quot;text-align: start;&quot;&gt;StGraphData&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: start;&quot;&gt;st图数据类&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="910" y="2020" width="970" height="606" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-26" value="-st_drivable_boundary_：STDrivableBoundary&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;st图可行驶边界，上下边界&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-init_ = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否初始化标志位&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-st_boundaries_：&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;const STBoundary*&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储全部障碍物的st边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-min_s_on_st_boundaries_ = 0.0：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-init_point_：&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-speed_limit_：&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedLimit&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-speed_limit_cio_hard_&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedLimit&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-speed_limit_cio_soft_&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SpeedLimit&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;/div&gt;&lt;div style=&quot;&quot;&gt;-cruise_speed_ = -1.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-path_data_length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-path_length_by_conf_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -total_time_by_conf_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-st_graph_debug_ = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;STGraphDebug*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-10" vertex="1">
          <mxGeometry y="40" width="970" height="260" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="jmzA_E2FORbxOF1XWL5z-10" vertex="1">
          <mxGeometry y="300" width="970" height="8" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-13" value="+SetSTDrivableBoundary(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;tuple&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_boundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//可搜索区域的s上下边界&amp;lt;t，s下界，s上界&amp;gt;&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const std::vector&amp;lt;std::tuple&amp;lt;double, double, double&amp;gt;&amp;gt;&amp;amp; v_obs_info)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;可搜索区域的v上下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;t，v下界，v上界&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_drivable_boundary_进行赋值，返回是否赋值成功标志位&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-10" vertex="1">
          <mxGeometry y="308" width="970" height="72" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+LoadData(const std::vector&amp;lt;const STBoundary*&amp;gt;&amp;amp; st_boundaries,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double min_s_on_st_boundaries,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const TrajectoryPoint&amp;amp; init_point,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const SpeedLimit&amp;amp; speed_limit, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const SpeedLimit&amp;amp; speed_limit_cio_hard,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const SpeedLimit&amp;amp; speed_limit_cio_soft, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double cruise_speed,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double path_data_length,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double total_time_by_conf,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;STGraphDebug* st_graph_debug)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储debug信息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对上面的成员变量进行赋值&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-10" vertex="1">
          <mxGeometry y="380" width="970" height="226" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-35" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="jmzA_E2FORbxOF1XWL5z-2" target="jmzA_E2FORbxOF1XWL5z-31" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="17780" y="2461.3" as="sourcePoint" />
            <mxPoint x="17940" y="2461.3" as="targetPoint" />
            <Array as="points">
              <mxPoint x="19020" y="1125.3" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-15" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-61" target="ydLdNuPebUsn6rm5Q9Q--3" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-270" y="2190" as="sourcePoint" />
            <mxPoint x="-6540" y="6000.000000000002" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1350" y="2580" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PathDecision&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;路径决策类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-650" y="2518" width="1200" height="216" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--4" value="-obstacles_：IndexedList&amp;lt;std::string, Obstacle&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;路径上挂的障碍物序列" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="ydLdNuPebUsn6rm5Q9Q--3" vertex="1">
          <mxGeometry y="50" width="1200" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-sorted_obstacle_ids_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对成员obstacles_按照其成员sl_boundary_的成员start_s进行从小到大排序，存储排序好的障碍物的id序列&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="ydLdNuPebUsn6rm5Q9Q--3" vertex="1">
          <mxGeometry y="76" width="1200" height="54" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="ydLdNuPebUsn6rm5Q9Q--3" vertex="1">
          <mxGeometry y="130" width="1200" height="8" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--6" value="+GetSortedObstacles()：const std::vector&amp;lt;std::string&amp;gt;&amp;amp;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对成员obstacles_&lt;/span&gt;按照其成员sl_boundary_的成员start_s进行从小到大排序，存储排序好的障碍物的id序列，写入成员sorted_obstacle_ids_，并返回，&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(排序有问题)&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="ydLdNuPebUsn6rm5Q9Q--3" vertex="1">
          <mxGeometry y="138" width="1200" height="52" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-7" value="+Find(const std::string &amp;amp;object_id)：Obstacle*&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据障碍物id在成员obstacles_中找到对应的障碍物对象，并返回指向其的指针" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="ydLdNuPebUsn6rm5Q9Q--3" vertex="1">
          <mxGeometry y="190" width="1200" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--7" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="ydLdNuPebUsn6rm5Q9Q--3" target="zWTbZChh2CSGO8JRFA1Z-10" edge="1">
          <mxGeometry x="-0.9853" y="20" relative="1" as="geometry">
            <mxPoint x="-380" y="2340" as="sourcePoint" />
            <mxPoint x="130" y="2480" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-50" y="3990" />
              <mxPoint x="-50" y="3990" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-61" target="jmzA_E2FORbxOF1XWL5z-10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1340" y="1982" as="sourcePoint" />
            <mxPoint x="-735" y="2320" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1220" y="2360" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-58" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="4BFno3uP-ZcI9NOxWfNB-61" target="HuAyBqt8NcXd-a5JXoLN-57" edge="1">
          <mxGeometry x="-0.991" y="-10" relative="1" as="geometry">
            <mxPoint x="-1469.8571428571413" y="1946" as="sourcePoint" />
            <mxPoint x="-6560" y="5070" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1470" y="5220" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-8" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="-W1G2oS5m7lf5mVvRUFl-2" target="-W1G2oS5m7lf5mVvRUFl-4" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="8720" y="2391.3" as="sourcePoint" />
            <mxPoint x="8880" y="2391.3" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-14" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="jmzA_E2FORbxOF1XWL5z-2" target="jmzA_E2FORbxOF1XWL5z-10" edge="1">
          <mxGeometry x="-0.9917" relative="1" as="geometry">
            <mxPoint x="1970" y="1870" as="sourcePoint" />
            <mxPoint x="2130" y="1870" as="targetPoint" />
            <Array as="points">
              <mxPoint x="2880" y="4740" />
              <mxPoint x="2880" y="1810" />
              <mxPoint x="1420" y="1810" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-6" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="Dhq__uPdf9VPHLC-a9Wb-1" target="yS3iJQVPmNXREE4WV7Ys-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="4050" y="2870" as="sourcePoint" />
            <mxPoint x="4210" y="2870" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;STBoundsDecider&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="12140" y="781.3" width="1740" height="1580" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-19" value="-st_bounds_config_：STBoundsDeciderConfig&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;配置信息" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="26" width="1740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-11" value="-current_v_：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; 当前位置车速" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="52" width="1740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-10" value="-st_obstacles_processor_：STObstaclesProcessor&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="78" width="1740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-2" value="-limit_s_：std::unordered_map&amp;lt;int,&amp;nbsp;std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;各个t轴采样时刻点处的大喇叭下界和上界，st图中的大喇叭下界为最大减速度线，上边界为cio硬边界线，t轴采样间隔为0.1s，这里的map是根据索引号来查值的，从0s开始，pair存储顺序为&amp;lt;下界，上界&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="104" width="1740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="130" width="1740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-20" value="+STBoundsDecider(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; TaskConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; config,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; injector)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;div&gt;构造函数，调用基类Decider构造函数初始化基类Decider成员frame_、reference_line_info_，读取输入config的成员st_bounds_decider_config写入成员st_bounds_config_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="138" width="1740" height="62" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-4" value="&lt;span style=&quot;background-color: rgb(251, 251, 251);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;Process&lt;/span&gt;(Frame* const frame,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo* const reference_line_info) override：&lt;/span&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;处理函数，主逻辑入口&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;1.有效性检查&lt;/span&gt;，检查成员reference_line_info_中的成员path_data_长度是否有效，无效返回，有效继续&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;2.生成障碍物的st图&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.1.调用成员函数InitSTBoundsDecider，输入参数为输入&lt;span style=&quot;background-color: initial;&quot;&gt;frame和输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成非acc模式下障碍物的st边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GenerateNoObsSTBound，生成最大加减速的st、vt线和匀速行驶线，分别存入局部变量&lt;/span&gt;regular_st_bound、&lt;span style=&quot;background-color: initial;&quot;&gt;regular_vt_bound、&lt;/span&gt;st_guide_line&lt;/div&gt;&lt;div&gt;2.3.若输入reference_line_info对应的是acc模式的参考线，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成acc模式下的障碍物st边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;遍历输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info中成员path_decision_中成员obstacles_中的每个障碍物&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;遍历每个障碍物预测轨迹trajectory_中的每个轨迹点，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;读每个轨迹点的x坐标(非acc障碍物是根据轨迹点的s坐标生成st边界)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，加半车长得到st上边界点，减半车长得到st下边界点，结合轨迹点的相对时间relative_time，按不同的时间依次推入创建的&lt;/span&gt;std::vector&amp;lt;STPoint&amp;gt;类型的局部变量upper_points和lower_points&lt;/div&gt;&lt;div&gt;调用STBoundary类中的静态成员函数CreateInstanceAccurate，生成该障碍物的st边界，写入该障碍物的成员path_st_boundary_&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;3.生成沿路径的速度限制&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.1.调用SpeedLimitDecider类构造函数实例化对象speed_limit_decider&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.2.如果&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;输入reference_line_info不是acc参考线&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;speed_limit_decider的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;GetSpeedLimits&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，否则继续，得到沿路径的速度限值点，函数输入如下：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info中的成员path_decision_的成员obstacles_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员injector&lt;/div&gt;&lt;div&gt;创建的SpeedLimit类成员变量speed_limit用于存储成员函数&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;GetSpeedLimits的计算结果&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.3.对于&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;输入reference_line_info是或不是acc参考线&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;speed_limit_decider的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;GetSpeedLimitsCIO&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;得到沿路径的速度限值点，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;函数输入如下：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info中的成员path_decision_的成员obstacles_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员injector&lt;/div&gt;&lt;div&gt;创建的SpeedLimit类成员变量speed_limit_cio_hard、&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_cio_soft&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;用于存储成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;GetSpeedLimitsCIO的计算结果&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;debug信息记录，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;得到全部障碍物的边界，存储在&lt;/span&gt;std::vector&amp;lt;STBoundary&amp;gt;类&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量st_boundaries，用于debug&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;非acc模式下，读取成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_obstacles_processor_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_id_to_st_boundary_(在2.1中已经进行过赋值)，将其中的障碍物st边界依次填入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundaries&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;acc模式下，2.3中生成的障碍物st边界稍带已经填入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundaries&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;RecordSTGraphDebug，记录debug信息，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundaries&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤2.2中的输出&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;regular_st_bound和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_guide_line&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info中的成员debug_的成员planning_data的成员st_graph&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.将该task的所有输出存储在输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员st_graph_data_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;st_graph_data_的成员函数SetSTDrivableBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，将2.2中的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;regular_st_bound和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;regular_vt_bound写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_data_的成员st_drivable_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;st_graph_data_的成员函数LoadData&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，对&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_data_内的成员变量进行赋值，函数输入参数为：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建&lt;/span&gt;std::vector&amp;lt;const STBoundary *&amp;gt;类&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量boundaries，读取全部障碍物的成员path_st_boundary_并存储下来&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;无穷大值&lt;/span&gt;std::numeric_limits&amp;lt;double&amp;gt;::infinity()&lt;/div&gt;&lt;div&gt;输入frame中的成员&lt;span style=&quot;background-color: initial;&quot;&gt;planning_start_point_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.2中创建的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3中创建的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_cio_hard和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_cio_soft&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员cruise_speed_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;reference_line_info的成员path_data_的成员discretized_path_的成员函数Length，返回路径总长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_bounds_config_的成员total_time&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员debug_的成员planning_data的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph，存储debug信息，在&lt;/span&gt;SPEED_HEURISTIC_OPTIMIZER任务中进行debug信息记录&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="200" width="1740" height="620" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-6" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;InitSTBoundsDecider&lt;/span&gt;(Frame* const frame,&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;初始化st图基本信息&lt;/span&gt;&lt;div&gt;1.调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;UpdataPlanningStartPoint，更新输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame中的成员planning_start_point_中的a，输入参数如下：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;调用IVistaUtils类得到当前车速下的最大加速jerk，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当前车速即成员current_v_从输入reference_line_info的成员vehicle_state_中读取&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;从输入frame中读取最大减速度线和cio硬边界线，更新成员limit_s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;从输入reference_line_info中读取当前参考线是否为acc参考线，若为非acc参考线进行下一步，否则函数结束&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1调用成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_obstacles_processor_中的成员函数Init，对&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_obstacles_processor_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;进行初始化赋值，函数参数为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入frame&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入reference_line_info&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员path_data_的成员discretized_path_，调用其中的成员函数Length得到规划好的路径总长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员st_bounds_config_的成员total_time，表示st图t轴总长&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员path_data_写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PathData类局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_data&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，创建&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PathData类局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_data_dense，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ToDensePath对&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_data进行加密，通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_data_dense中的成员函数&lt;/span&gt;SetFrenetPath将加密后的结果写入&lt;span style=&quot;background-color: initial;&quot;&gt;path_data_dense，作为函数输入&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员path_decision_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员injector_的成员history_&lt;/div&gt;&lt;div&gt;成员injector&lt;/div&gt;&lt;div&gt;成员limit_s的指针&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_obstacles_processor_中的成员函数&lt;/span&gt;MapObstaclesToSTBoundaries，更新输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info中的成员path_decision_中的成员obstacles_中各障碍物的成员***_st_boundary_，函数参数为：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;的成员path_decision_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;的成员is_in_junction_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;创建PointENU类对象start_point，xyz坐标设置为0&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="820" width="1740" height="380" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-UpdataPlanningStartPoint(const double max_ajerk, Frame* const frame,ReferenceLineInfo* const reference_line_info)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新输入frame中的成员planning_start_point_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;输入reference_line_info未使用&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当减速度为负时，防止因减速度过大导致以输入max_ajerk将减速度提升至0时自车速度为负，进而导致QP无解，因此需要更新输入frame中的成员planning_start_point_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;从输入frame中的成员planning_start_point_中取到当前位置的v和a，判断&lt;span style=&quot;background-color: initial;&quot;&gt;以输入max_ajerk将减速度提升至0时自车速度是否为负，若是，根据a^2=2*jerk*delta_v公式，修正当前位置的a并重新写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入frame中的成员planning_start_point_中的a中，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;问海镔&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="1200" width="1740" height="110" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-21" value="+ToDensePath(const PathData&amp;amp; sparse_path_data)：FrenetFramePath&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对输入sparse_path_data按照s方向1的分辨率进行插值加密" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="1310" width="1740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-33" value="-GenerateNoObsSTBound(&lt;span style=&quot;background-color: initial;&quot;&gt;Frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//从frame中读取自车最大加减速线和匀速行驶线&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;std::tuple&amp;lt;double, double, double&amp;gt;&amp;gt;* const st_bound,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//vector存储最大加减速线st边界点序列，tuple存储每个边界点的信息&amp;lt;t，最大减速线上的s，&lt;span style=&quot;background-color: initial;&quot;&gt;最大加速线上的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;std::tuple&amp;lt;double, double, double&amp;gt;&amp;gt;* const vt_bound,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//vector存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最大加减速线&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vt边界点序列，tuple存储每个边界点的信息&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t，最大减速线上的v，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最大加速线上的v&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;std::pair&amp;lt;double, double&amp;gt;&amp;gt;* const st_guide_line)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector存储匀速行驶线点序列，pair中存储&amp;lt;t，匀速线上的s&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;取出来的速度线以成员st_bounds_config_中的成员total_time为截止时间，0.1s一个点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;d&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="1336" width="1740" height="114" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-1" value="-RecordSTGraphDebug(&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入参考线&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;STBoundary&amp;gt;&amp;amp; st_graph_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入障碍物的st边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;std::tuple&amp;lt;double, double, double&amp;gt;&amp;gt;&amp;amp; st_bound,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入搜索区间上下界，&amp;lt;&lt;span style=&quot;background-color: initial;&quot;&gt;t，最大减速线上的s，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最大加速线上的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::vector&amp;lt;std::pair&amp;lt;double, double&amp;gt;&amp;gt;&amp;amp; st_guide_line,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入自车匀速线&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;STGraphDebug* const st_graph_debug)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储debug数据&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;记录debug信息&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-1" vertex="1">
          <mxGeometry y="1450" width="1740" height="130" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-5" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="VXBDi3d1ndRj7hIO50mS-1" target="x43RHuNwQAWLNvNylpUT-15" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="5870" y="330" as="sourcePoint" />
            <mxPoint x="5870" y="210" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;STObstaclesProcessor&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="14020" y="621.3" width="1790" height="5122" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-13" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-frame_：Frame*&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-reference_line_info_：ReferenceLineInfo*&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-planning_time_：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划总时长&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-planning_distance_：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划路径长度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-path_data_：PathData&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划路径&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-vehicle_param_：haomo::hios::VehicleParameter&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆参数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-adc_path_init_s_：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-path_decision_：PathDecision*&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-history_ = nullptr：History*&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-injector_：std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-limit_s_：std::unordered_map&amp;lt;int,&amp;nbsp;std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;gt;*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;各个t轴采样时刻点处的大喇叭下界和上界，st图中的大喇叭下界为最大减速度线，上边界为cio硬边界线，t轴采样间隔为0.1s，这里的map是根据索引号来查值的，从0s开始，pair存储顺序为&amp;lt;下界，上界&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-adc_lane_left_width_{1.5}：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;左半边车道宽度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-adc_lane_right_width_{1.5}：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;右半边车道宽度&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="26" width="1790" height="274" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-29" value="-adc_low_road_right_segments_：std::vector&amp;lt;std::pair&amp;lt;double,&amp;nbsp;double&amp;gt;&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储一条路径中的多段低路权路段，存储路段起止点，pair&amp;lt;某段低路权路段的起始点s坐标，某段低路权路段的末了点s坐标&amp;gt;，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="300" width="1790" height="40" as="geometry" />
        </mxCell>
        <mxCell id="D7oMFita6UG4JvU4ndth-3" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;candidate_clear_zones_：&lt;/span&gt;std::vector&amp;lt;std::tuple&amp;lt;std::string, STBoundary, Obstacle*&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;候选禁停区集合，tuple&amp;lt;障碍物id，障碍物st边界，障碍物对象指针&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="340" width="1790" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_HWI0THK7regcAKxdJNW-3" value="-obs_id_to_st_boundary_：std::unordered_map&amp;lt;std::string, STBoundary&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;全部障碍物(全部动态障碍物+一个距离自车最近的静止障碍物障碍物)&lt;/span&gt;的id与动态障碍物的成员&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;path_st_boundary_&lt;/span&gt;的映射表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="366" width="1790" height="26" as="geometry" />
        </mxCell>
        <mxCell id="UJOnidI7TLM1SowN9Nu--1" value="-obs_id_to_alternative_st_boundary_：std::unordered_map&amp;lt;std::string, STBoundary&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;全部障碍物(path_decision中的全部障碍物)&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;的id&lt;/span&gt;与丢弃障碍物关注截止时间之外st边界的&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;替代st边界&lt;/span&gt;的映射表" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="392" width="1790" height="26" as="geometry" />
        </mxCell>
        <mxCell id="_jNNKmyN074_u90SVWYH-1" value="- // A vector of sorted obstacle&#39;s t-edges:&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  //  (is_starting_t, t, s_min, s_max, obs_id).&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  //  tuple--元组 可以由多个元素组成&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-obs_t_edges_：&lt;span style=&quot;background-color: initial;&quot;&gt;std::vector&amp;lt;std::tuple&amp;lt;int, double, double, double, std::string&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储全部障碍物的最小t边和最大t边，若障碍物个数有n，该成员内元素个数为2n，tuple&amp;lt;是起始t边(1)还是末了t边(0)，t值，t边上的s最小值，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t边上的s最大值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，障碍物id&amp;gt;，存储顺序按若t值不同按t从小到大排列，若t值相同按先起始t边后末了t边排列&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="418" width="1790" height="112" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-14" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="530" width="1790" height="8" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-15" value="+&lt;span style=&quot;background-color: initial;&quot;&gt;Init(Frame* const frame,&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ReferenceLineInfo* const reference_line_info,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double planning_distance,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const double planning_time,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const PathData&amp;amp; path_data,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;PathDecision* const path_decision,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;History* const history,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::unordered_map&amp;lt;int, std::pair&amp;lt;double, double&amp;gt;&amp;gt;* const limit_s)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;列表初始化成员变量&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="538" width="1790" height="182" as="geometry" />
        </mxCell>
        <mxCell id="D7oMFita6UG4JvU4ndth-4" value="+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;MapObstaclesToSTBoundaries&lt;/span&gt;(PathDecision* const path_decision,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//path决策相关信息&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;bool isInJunction,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前是否在路口&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const PointENU start_point)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//起始点信息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.输入合理性判断，不合理返回错误状态，合理则进入主逻辑&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入path_decision为空，返回错误状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员planning_time_&amp;lt;0，规划时长被错误初始化，返回错误状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员planning_distance_&amp;lt;0，规划时长被错误初始化，返回错误状态&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员path_data_的成员discretized_path_中的路径点个数 &amp;lt;= 1，生成父路径太短，返回错误状态&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.遍历成员path_data_的成员&lt;/span&gt;path_point_decision_guide_中每个路径点上的PathPointType，记录&lt;span style=&quot;background-color: initial;&quot;&gt;path_data_中的低路权路段，写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_low_road_right_segments_，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.遍历输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_decision中的成员obstacles_的各障碍物&lt;/span&gt;obs_item_ptr&lt;span style=&quot;background-color: initial;&quot;&gt;，将每个障碍物以st边界的方式将其画在st图中，计算每个障碍物的st上下边界点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.数据保护，在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_中根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_item_ptr的成员id_返回的Obstacle类对象指针&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，返回错误状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2若障碍物满足以下条件，则该障碍物可忽略不生成st边界：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;(障碍物成员函数HasLongitudinalDecision表征有纵向决策 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;障碍物成员函数HasLateralDecision表征有横向决策 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;障碍物成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;IsIgnore表征障碍物决策为忽略 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员函数LonDeciderTageFindNoSafeBoundary表征该障碍物可以被忽略 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;障碍物成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;GetSpeedDecision不为soft_overtake)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;        || (调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;IsNeedIgnore，判断障碍物在成员sl_boundary_的起止s点处至少有一个点满足切出可忽略的情况)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.3.生成障碍物上下边界点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.3.1.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若obs_ptr的成员obstacle_caution_info_的成员is_caution为真&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，调用&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;ComputeObstacleProbabilitySTBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;生成障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr的st&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;上下边界点，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的被遍历到的障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建&lt;/span&gt;std::vector&amp;lt;STPoint&amp;gt;类&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量lower_points、upper_points，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物不需要考虑caution的部分的st下上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::vector&amp;lt;STPoint&amp;gt;类局部变量lower_points_orignal、upper_points_orignal&lt;span style=&quot;background-color: initial;&quot;&gt;，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物&lt;/span&gt;按全程不考虑caution的原始&lt;span style=&quot;background-color: initial;&quot;&gt;st下上边界&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::vector&amp;lt;std::vector&amp;lt;STPoint&amp;gt;&amp;gt;类局部变量probability_points，用于存储&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物需要考虑caution的部分的st边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建bool类型的局部变量is_caution_obstacle，用于存储该障碍物是否需要关注，默认为false，用于判断是否需要在关注时间结束后不考虑该障碍物在st中的边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建double类型的局部变量obs_caution_end_t，用于存储障碍物的关注结束时间，&lt;span style=&quot;background-color: initial;&quot;&gt;关注时间结束后不考虑该障碍物在st中的边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;isInJunction，函数内未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;固定值1，函数内未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;否则，前端对obs_ptr的决策不为caution&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若开关FLAGS_use_stbounds_refmethod打开(目前是关闭)，调用成员函数&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;ComputeObstacleRefSTBoundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;生成障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr的st&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;上下边界点，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的被遍历到的障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建&lt;/span&gt;std::vector&amp;lt;STPoint&amp;gt;类&lt;span style=&quot;background-color: initial;&quot;&gt;局部变量lower_points_ref、upper_points_ref，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物基于参考线计算的st下上边界&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;步骤3.3.1中创建的局部变量is_caution_obstacle，用于存储该障碍物是否需要关注，默认为false，用于判断是否需要在关注时间结束后不考虑该障碍物在st中的边界&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中创建&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;的局部变量obs_caution_end_t，用于存储障碍物的关注结束时间，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;关注时间结束后不考虑该障碍物在st中的边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;isInJunction，函数内未使用&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;ComputeObstacleSTBoundary&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;生成障碍物obs_ptr的st上下遍节点，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的被遍历到的障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中创建的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points、upper_points，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物不需要考虑caution的部分的st下上边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;步骤&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中创建的局部变量is_caution_obstacle，用于存储该障碍物是否需要关注，默认为false，用于判断是否需要在关注时间结束后不考虑该障碍物在st中的边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中创建&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;的局部变量obs_caution_end_t，用于存储障碍物的关注结束时间，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;关注时间结束后不考虑该障碍物在st中的边界&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;isInJunction，函数内未使用&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.判断该被遍历到的障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr是否是后方障碍物，创建bool类型&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;局部变量is_back_obs存储障碍物是否是后方障碍物的判断结果&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，默认值给false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断方法：若obs_ptr的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges_非空 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges_的第一个元素为BACK(表示障碍物与自车起始碰撞时刻碰的是自车的后边)，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;is_back_obs = true，其中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges_在步骤3.3.1～3.3.2中被赋值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.如果障碍物obs_ptr满足条件：不为caution障碍物 &amp;amp;&amp;amp; 障碍物预测轨迹成员trajectory_不为空 &amp;amp;&amp;amp; 不为后方障碍物 &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3.1～3.3.2中生成的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points不为空(说明障碍物st边界成功生成)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用成员函数SetObstacleExpand，对步骤3.3中得到的障碍物的st上下边界点lower_points、upper_points进行膨胀和变形&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的被遍历到的障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;中创建的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points、upper_points，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物膨胀后的上下边界点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.6.对于步骤3.3.2中计算的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points_ref、upper_points_ref和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points、upper_points进行合并处理&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;开关FLAGS_use_stbounds_refmethod打开(目前是关闭) &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points_ref的大小&amp;gt;=1(说明成员函数&lt;/span&gt;ComputeObstacleRefSTBoundary中障碍物基于参考线计算的st&lt;span style=&quot;background-color: initial;&quot;&gt;边界成功生成)，进入合并主逻辑&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.6.1.调用&lt;/span&gt;STBoundary类中的静态成员函数CreateInstanceAccurate将&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points_ref、upper_points_ref生成st边界&lt;/span&gt;boundary_ref写入障碍物obs_ptr成员path_st_boundary_ref_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.6.2.遍历&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points中的各时刻点t，在t时刻点下l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ower_points、upper_points组成区间[s_lower，s_upper]，在t时刻点下调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_ref的成员函数&lt;/span&gt;GetBoundarySRange，得到区间[s_lower_ref，s_upper_ref]，将两个区间的交集作为新的s上下边界点重新写入&lt;span style=&quot;background-color: initial;&quot;&gt;l&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ower_points、upper_points&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.7.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;生成障碍物的st边界boundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary类中的静态成员函数CreateInstanceAccurate&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将步骤3.6.2中合并后的lower_points、upper_points生成st边界boundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;读取障碍物obs_ptr的成员id_写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary的成员id_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若步骤3.3.1～3.3.2中障碍物是否需要关注标志位&lt;span style=&quot;background-color: initial;&quot;&gt;is_caution_obstacle置位，将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3.1～3.3.2中得到的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_caution_end_t写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_road_right_ending_t_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.8.更新成员&lt;/span&gt;obs_id_to_alternative_st_boundary_&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;存储全部障碍物id与丢弃障碍物关注截止时间之外st边界的替代st边界的映射表&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;丢弃lower_points、upper_points在&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3.1～3.3.2中得到的关注截至时间&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_caution_end_t之外的边节点，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary类中的静态成员函数CreateInstanceAccurate将丢弃处理后的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points、upper_points生成障碍物的替代st边界&lt;/span&gt;alternative_boundary&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将障碍物obs_ptr的成员id_和此障碍物的&lt;span style=&quot;background-color: initial;&quot;&gt;替代st边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;alternative_boundary写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_id_to_alternative_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.9.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;如果障碍物为禁停区将该障碍物推入成员candidate_clear_zones_&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;推入顺序并非按照禁停区由近及远的顺序，并且对于交叠的禁停区未作合并处理，而是按照禁停区在输入path_decision中的成员obstacles_中的顺序推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;若障碍物obs_ptr的成员id_有&quot;KC&quot;字段，说明该障碍物是禁停区，将&amp;lt;该障碍物obs_ptr的成员id_，步骤3.7中生成的该障碍物st边界boundary，该障碍物指针obs_ptr&amp;gt;组成三元组作为候选禁停区，推入成员&lt;span style=&quot;background-color: initial;&quot;&gt;candidate_clear_zones_，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;continue下一次循环&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.10.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对非禁停区障碍物进行处理，向动静态障碍物的边界成员写值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.10.1.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若该障碍物为静止障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对于静止障碍物只需要考虑全部静止障碍物中离自车最近的那个&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::tuple&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::string, STBoundary, Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&amp;gt;类&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;局部变量closest_stop_obstacle，tuple&amp;lt;该障碍物obs_ptr的成员id_，步骤3.7中生成的该障碍物st边界boundary，该障碍物对象指针obs_ptr&amp;gt;，存储最近障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断方法：遍历全部静态障碍物(轨迹点个数为0)，寻找左下角st边界点s值最小的障碍物，即为距离自车最近的障碍物。存入局部变量closest_stop_obstacle&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.10.2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;否则障碍物为动态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.10.2.1.若步骤3.4中判断该障碍物obs_ptr不是后方障碍物 &amp;amp;&amp;amp; 步骤3.7中该障碍物的st边界boundary长度大于1 &amp;amp;&amp;amp; 该障碍物obs_ptr的成员&lt;span style=&quot;background-color: initial;&quot;&gt;speed_decision_不为Soft_Overtake且不为Soft_Yield&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将该障碍物obs_ptr的成员id_和&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.7中该障碍物的st边界boundary写入成员&lt;/span&gt;obs_id_to_st_boundary_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.7中该障碍物的st边界boundary&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;写入该障碍物obs_ptr的成员path_st_boundary_和orignal_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::unordered_set&amp;lt;std::string&amp;gt;类局部变量non_ignore_obstacles用于存储不需要ignore的障碍物id，将该障碍物obs_ptr的id插入non_ignore_obstacles，用于步骤5是否对该障碍物obs_ptr重新打上ignore标签&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.10.2.2.&lt;span style=&quot;background-color: initial;&quot;&gt;若步骤3.4中判断该障碍物obs_ptr不是后方障碍物 &amp;amp;&amp;amp; 步骤3.3.1中该障碍物的需要考虑caution的st边界&lt;/span&gt;probability_points&lt;span style=&quot;background-color: initial;&quot;&gt;长度大于0(该障碍物需要考虑caution且存在caution边界) &amp;amp;&amp;amp; 该障碍物obs_ptr的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_decision_不为Soft_Overtake且不为Soft_Yield&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::unordered_set&amp;lt;std::string&amp;gt;类局部变量absolute_caution_obstacles用于存储绝对需要caution的障碍物id(caution和soft决策不重合)&lt;span style=&quot;background-color: initial;&quot;&gt;，将该障碍物obs_ptr的id插入&lt;/span&gt;absolute_caution_obstacles&lt;span style=&quot;background-color: initial;&quot;&gt;，用于步骤5是否对该障碍物obs_ptr重新打上ignore标签&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.10.2.3.若&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;该障碍物obs_ptr的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_decision_为Soft_Overtake或Soft_Yield，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对于存在soft决策的障碍物会调用步骤3.3.1生成边界，由于步骤3.10.2.4的存在这里其实只会将后方soft障碍物的原始边界进行比较后写入&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在步骤3.3.1中生成的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points、upper_points和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points_orignal、upper_points_orignal中长度较长的那对边界，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary类中的静态成员函数CreateInstanceAccurate生成障碍物原始边界&lt;/span&gt;boundary_orignal，并&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;写入obs_ptr的成员orignal_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.10.2.4.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若步骤3.4中判断该障碍物obs_ptr不是后方障碍物 &amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3.1中该障碍物的需要考虑caution的st边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;probability_points&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;长度大于0(该障碍物需要考虑caution且存在caution边界)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;将在步骤3.3.1中生成的&lt;span style=&quot;background-color: initial;&quot;&gt;probability_points&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;写入obs_ptr的成员probability_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.10.2.5.&lt;span style=&quot;background-color: initial;&quot;&gt;若步骤3.4中判断该障碍物obs_ptr不是后方障碍物 &amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.3.1中该障碍物的原始st边界&lt;/span&gt;lower_points_orignal、upper_points_orignal&lt;span style=&quot;background-color: initial;&quot;&gt;长度大于0&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STBoundary类中的静态成员函数CreateInstanceAccurate生成障碍物原始边界&lt;/span&gt;boundary_orignal，并&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;写入obs_ptr的成员orignal_st_boundary_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;对于禁停区与最近静止障碍物重叠的情况，更新步骤3.10.1中计算得到的最近静止障碍物closest_stop_obstacle中的障碍物st边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4.1遍历步骤3.9中得到的全部禁停区集合candidate_clear_zones中的各禁停区clear_zone，如果closest_stop_obstacle中的最近障碍物st边界的s最小值在由clear_zone的st边界的组成的区间内([s最小值，s最大值])，将&lt;span style=&quot;background-color: initial;&quot;&gt;closest_stop_obstacle中的st边界替换成&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;clear_zone的st边界&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(代码这里有bug，未替换成禁停区的st边界)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，并break掉循环&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(这里也有问题，由于candidate_clear_zones中的禁停区未作排序及合并处理，因此对于禁停区重叠的情况会有bug)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4.2.将新的最近障碍物st边界写入&lt;span style=&quot;background-color: initial;&quot;&gt;closest_stop_obstacle中障碍物指针的成员path_st_boundary&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4.3.对于步骤3.10.2.1中的成员&lt;span style=&quot;background-color: initial;&quot;&gt;obs_id_to_st_boundary_和局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;non_ignore_obstacles分别写入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;closest_stop_obstacle的st边界和障碍物id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.经过st图判断不会出现在st图上的障碍物添加ignore决策和avoid决策&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;再次遍历&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_decision中的成员obstacles_中的各障碍物obs_ptr&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.1.若该障碍物obs_ptr的成员id_在步骤4.3中更新过的完整的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_id_to_st_boundary_和步骤3.10.2.2中的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;absolute_caution_obstacles中都未找到&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建一个新的ObjectDecisionType类局部变量ignore_decision&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(这是啥？)&lt;/span&gt;，如果obs_ptr的成员longitudinal_decision_为OBJECT_TAG_NOT_SET未设置，就将ignore_decision写入obs_ptr,如果obs_ptr的成员lateral_decision_为OBJECT_TAG_NOT_SET未设置，就将ignore_decision写入obs_ptr&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5.2.&lt;span style=&quot;background-color: initial;&quot;&gt;若该障碍物obs_ptr的成员id_只在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.10.2.2中的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;absolute_caution_obstacles中都未找到&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建一个新的ObjectDecisionType类局部变量ignore_avoid&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(这是啥？)&lt;/span&gt;，如果obs_ptr的成员longitudinal_decision_为OBJECT_TAG_NOT_SET未设置，就将ignore_avoid写入obs_ptr,如果obs_ptr的成员lateral_decision_为OBJECT_TAG_NOT_SET未设置，就将ignore_avoid写入obs_ptr&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6.更新成员obs_t_edges_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6.1.遍历步骤&lt;span style=&quot;background-color: initial;&quot;&gt;4.3中更新过的完整的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_id_to_st_boundary_中的各元素it，将it的起始t边和末了t边分别推入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_t_edges_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;6.2.对上一步得到的原始&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obs_t_edges_中的元素按&quot;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若t值不同按t从小到大排列，若t值相同按先起始t边后末了t边排列&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&quot;的方法进行排序&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="720" width="1790" height="1832" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-44" value="-LonDeciderTageFindNoSafeBoundary(Obstacle *obs_ptr)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断输入obs_ptr成员decider_tags_中存在“no_safe_driving_st_boundary”的障碍物中需要不忽略的障碍物&lt;div&gt;遍历输入obs_ptr的成员decider_tags_若其中存在“no_safe_driving_st_boundary”标签，进一步判断：自车偏离referenceline时，障碍物判碰不满足，需要st图重新考虑不能直接忽略，&lt;span style=&quot;background-color: initial;&quot;&gt;目前只考虑欧式距离在30m内 &amp;amp;&amp;amp; 在自车前方的障碍物 &amp;amp;&amp;amp; 在1.5个车道内 &amp;amp;&amp;amp; 自车偏离reference line超过0.5m，返回false，表示该障碍物不能被忽略，否则返回true，表示该障碍物可以被忽略&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="2552" width="1790" height="80" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-30" value="-IsNeedIgnore(const Obstacle&amp;amp; obstacle , const double&amp;amp; s)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;判断障碍物在输入s处是否切出，返回值为true表示障碍物切出可以忽略&lt;div&gt;判断障碍物可忽略策略：(预测轨迹朝左且障碍物右边界 &amp;gt; 自车在s处的左边界 + 安全膨胀&amp;nbsp; ||&amp;nbsp;&amp;nbsp;预测轨迹朝右且障碍物左边界 &amp;lt; 自车在s处的右边界 + 安全膨胀) &amp;amp;&amp;amp; 障碍物切出路径的迟滞数为0 &amp;amp;&amp;amp; 障碍物的成员reference_line_st_boundary_为空(说明此时障碍物与参考线不碰撞)&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="2632" width="1790" height="70" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-31" value="-ComputeObstacleProbabilitySTBoundary(const Obstacle&amp;amp; obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的待计算st上下边界的障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;STPoint&amp;gt;* const lower_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物的st下边界，障碍物不需要考虑caution的部分&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;STPoint&amp;gt;* const upper_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，障碍物不需要考虑caution的部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;STPoint&amp;gt;* const lower_points_original,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物的st下边界，按全程不考虑caution的原始边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;STPoint&amp;gt;* const upper_points_original,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st上边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;按全程不考虑caution的原始边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;std::vector&amp;lt;STPoint&amp;gt;&amp;gt;* const probability_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物的st边界，障碍物需要考虑caution的部分&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; bool* const is_caution_obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储该障碍物是否是需要关注的障碍物，静态障碍物或者与adc轨迹交汇低路权道路上的动态障碍物，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;与路权逻辑有关不同于caution决策&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; double* const obs_caution_end_t,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储该障碍物需要关注的截止时间&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; bool isInJunction,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，是否在交叉口标志位，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;函数中未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; double caution_level)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，caution等级，函数中未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;计算cation障碍物在st图中的上下界&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(255, 102, 102);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="2702" width="1790" height="250" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-45" value="-ComputeObstacleRefSTBoundary(const Obstacle&amp;amp; obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的待计算st上下边界的障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;std::vector&amp;lt;STPoint&amp;gt;* const lower_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st下边界，基于参考线的st边界计算方法，障碍物不需要考虑caution的部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;std::vector&amp;lt;STPoint&amp;gt;* const upper_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st上边界，基于参考线的st边界计算方法，障碍物不需要考虑caution的部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;bool* const is_caution_obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储该障碍物是否是需要关注的障碍物，静态障碍物或者与adc轨迹交汇低路权道路上的动态障碍物，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;与路权逻辑有关不同于caution决策&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;double* const obs_caution_end_t,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储该障碍物需要关注的截止时间&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;bool isInJunction)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//输入，是否在交叉口标志位，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;函数中未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;计算障碍物在st图中的上下界，相对于参考线计算重叠&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="2952" width="1790" height="200" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-32" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;ComputeObstacleSTBoundary&lt;/span&gt;(const Obstacle&amp;amp; obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入的待计算st上下边界的障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;std::vector&amp;lt;STPoint&amp;gt;* const lower_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st下边界，障碍物不需要考虑caution的部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;std::vector&amp;lt;STPoint&amp;gt;* const upper_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物的st上边界，障碍物不需要考虑caution的部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;bool* const is_caution_obstacle,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储该障碍物是否是需要关注的障碍物，静态障碍物或者与adc轨迹交汇低路权道路上的动态障碍物，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;与路权逻辑有关不同于caution决策&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double* const obs_caution_end_t,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储该障碍物需要关注的截止时间&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;bool isInJunction)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//输入，是否在交叉口标志位，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;函数中未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;计算指定障碍物在st图中的上下边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.调用输入obstacle成员函数GetSafeBuffer得到对于该障碍物的自车横向单侧膨胀buffer，若障碍物成员delay_time_不为0(即障碍物存在多帧保持)&amp;amp;&amp;amp;不在自车路径范围内时，调用成员函数EvaluateDelayBuffer将这个buffer+1m&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;2.若输入obstacle为静止障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，调用成员函数GetOverlappingS，计算障碍物在st图中的上下边界，函数输入如下：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员path_data_的成员discretized_path_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;输入obstacle的成员&lt;span style=&quot;background-color: initial;&quot;&gt;perception_bounding_box_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetSafeBuffer得到障碍物的横向膨胀buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建std::pair&amp;lt;double,double&amp;gt;类型的局部变量overlapping_s，存储碰撞开始和结束时s的下上边界点，pair&amp;lt;碰撞开始s下边界值，碰撞结束s上边界值&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::pair&amp;lt;bool,bool&amp;gt;类型局部变量is_collision_pt_find存储上下边界是否找到的标志位&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::vector&amp;lt;BoxEdgeType&amp;gt;类型局部变量collision_edges，存储碰了自车边框的哪条边&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.1.数据组装，若可以找到重叠，对于静态障碍物只需调用一次&lt;span style=&quot;background-color: initial;&quot;&gt;GetOverlappingS，得到一次&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;overlapping_s，将障碍物s下边界值分为0时刻点和末了时刻点成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_time_，形成两个s下边界点，存入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points。同理，形成两个s上边界点，存入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;upper_points&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;3.否则输入obstacle为动态障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，若&lt;/span&gt;obstacle&lt;span style=&quot;background-color: initial;&quot;&gt;不为block，读取&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的成员动态绕障结束时间&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;nudge_avoid_time_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.遍历输入obstacle的成员预测轨迹&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;trajectory_上的每一个轨迹点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.1.若轨迹点上的相对时间relative_time大于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;nudge_avoid_time_，退出循环，否则继续&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.2.对于横穿障碍物，扩大步骤1中得到的自车横向单侧膨胀buffer，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数GetOverlappingS，计算障碍物在st图中的上下边界，函数输入如下：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员path_data_的成员discretized_path_&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;在该预测轨迹点处构造障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;扩大后的&lt;span style=&quot;background-color: initial;&quot;&gt;自车横向单侧膨胀buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建std::pair&amp;lt;double,double&amp;gt;类型的局部变量overlapping_s，存储碰撞开始和结束时s的下上边界点，pair&amp;lt;碰撞开始s下边界值，碰撞结束s上边界值&amp;gt;，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;不复用步骤2中的局部变量重新创建&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;复用步骤2中创建的局部变量is_collision_pt_find&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;复用步骤2中创建的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges，存储在每个预测轨迹点障碍物的s下边界和s上边界碰了自车的哪条边&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.3.数据组装，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在成员path_decision_中根据输入obstacle的id找到指定障碍物，将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges写入障碍物成员&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若可以找到重叠，从预测轨迹点成员relative_time读取该轨迹点的相对时间，从&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;overlapping_s读该轨迹点处障碍物bbox碰撞开始和结束的s下上边界值，按轨迹点顺序依次推入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;upper_points&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;upper_points的维度判断输入障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;是否存在上下边界，存在，返回true。&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="3152" width="1790" height="660" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-9" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;GetOverlappingS&lt;/span&gt;(const std::vector&amp;lt;PathPoint&amp;gt;&amp;amp; adc_path_points,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//规划路径点序列，障碍物bbox与自车路径点判碰&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const Box2d&amp;amp; obstacle_instance,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const double adc_l_buffer,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车bbox的横向膨胀buffer&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;std::pair&amp;lt;double, double&amp;gt;* const overlapping_s,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储碰撞开始和结束时的s下边界点和碰撞结束时的s上边界点，&lt;span style=&quot;background-color: initial;&quot;&gt;pair&amp;lt;碰撞开始s下边界点，碰撞结束s上边界点&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::pair&amp;lt;bool, bool&amp;gt;* is_collision_pt_find,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;存储碰撞开始和结束时的s下边界点和碰撞结束时的s上边界点是否找到，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&amp;lt;碰撞开始s下边界点是否找到，碰撞结束s上边界点是否找到&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::vector&amp;lt;BoxEdgeType&amp;gt;* collision_edges)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储碰撞开始和结束时是在&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;自车bbox的哪条边&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;发生碰撞&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;固定障碍物(某一时刻下的障碍物位置固定)，寻找障碍物侵入自车行驶路径的s下边界和s上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.二分查找输入路径&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_path_points&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;上与输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_instance在s方向上有重叠的最小路径段起止点，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;分两次&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetSBoundingPathPointIndex，分别计算最小重叠路径段起点索引pt_before_idx和终点索引&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pt_after_idx&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_path_points&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_instance&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;查起点索引时用成员vehicle_param_的前保杠到中心距离(自车车头撞障碍物车尾)，&lt;span style=&quot;background-color: initial;&quot;&gt;查终点索引时用成员vehicle_param_的后保杠到中心距离(自车车尾撞障碍物车头)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;查起点时开关置为true，查终点时开关值为false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;从整条路径的起点开始索引&lt;/div&gt;&lt;div style=&quot;&quot;&gt;到整条路径的倒数第三个点结束索引&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.一些数据保护的操作&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.从&lt;span style=&quot;background-color: initial;&quot;&gt;最小重叠路径段起点到终点遍历路径点，固定障碍物，自车沿路径行驶，寻找第一次发生碰撞的s点，即障碍物在该时刻下在st图上的s下边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsADCOverlappingWithObstacle，判断该路径点处的自车box与输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_instance是否有重叠，若是将该路径点处的s写入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;overlapping_s的第一个元素&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;找到重叠后将输入&lt;span style=&quot;background-color: initial;&quot;&gt;is_collision_pt_find的第一个元素置为true，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;FindBoxCollisionEdge，判断是与自车的哪条边相碰，存入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges的第一个元素&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;从&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最小重叠路径段终点到起点遍历路径点，固定障碍物，自车沿路径倒车，寻找第一次发生碰撞的s点，即障碍物在该时刻下在st图上的s上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsADCOverlappingWithObstacle，判断该路径点处的自车box与输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_instance是否有重叠，若是将该路径点处的s写入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;overlapping_s的第二个元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;找到重叠后将输入&lt;span style=&quot;background-color: initial;&quot;&gt;is_collision_pt_find的第二个元素置为true，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;FindBoxCollisionEdge，判断是与自车的哪条边相碰，存入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;collision_edges的第二个元素&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.输出保护，如果步骤3没找到下边界，跳过步骤4，返回false&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="3812" width="1790" height="480" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-1" value="-GetSBoundingPathPointIndex(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;PathPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_path_points&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//整段规划路径，路径点序列&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;  &lt;/span&gt;const Box2d&amp;amp; obstacle_instance,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const double s_thresh,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;判断路径点是否远离障碍物的s阈值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const bool is_before,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;表征我们希望查找的是障碍物前方&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;(即靠近路径起点的方向)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;或者后方&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;的最近路径点，true表示障碍物前方，false表示障碍物后方&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const int start_idx,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//指定路径段的起点在整段路径上的索引值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; const int end_idx)：&lt;span style=&quot;background-color: initial;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;指定路径段的终点在整段路径上的索引值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在指定路径段上查找障碍物前方或者后方最近路径点的索引值，以&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;is_before=true为例，表示我们希望查找障碍物前方最近路径点的索引&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;取&lt;span style=&quot;background-color: initial;&quot;&gt;start_idx和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_idx的中点mid_idx，调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPathPointAwayFromObstacle，若mid_idx处的路径点远离障碍物前方，将mid_idx和end_idx之间的路径段作为指定路径段，递归调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetSBoundingPathPointIndex；否则&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;将start_idx和mid_idx-1之间的路径段作为指定路径段，递归调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetSBoundingPathPointIndex，直到指定路径段起止点重合，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;退出循环，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;再调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IsPathPointAwayFromObstacle检查一遍找到的点是否在障碍物前方，是则&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;返回此时的索引值，就为障碍物前方最近路径点的索引，否则返回-1，表示障碍物在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;整条路径起点的后方。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;is_before=false，表示我们希望查找障碍物后方最近路径点的索引。推导同上&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="4292" width="1790" height="230" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-15" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-IsPathPointAwayFromObstacle(const PathPoint&amp;amp; path_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//待判断的路径点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt; &lt;/span&gt;&amp;nbsp; &amp;nbsp;const PathPoint&amp;amp; direction_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//指示路径正方向的路径点，通常是输入path_point的下一个点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const Box2d&amp;amp; obs_box,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                   &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const double s_thresh,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//判断路径点是否远离障碍物的s阈值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const bool is_before)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//表征是否希望路径点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;远离&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物前方&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;(即指向路径反方向)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;判断路径点是否远离障碍物，离障碍物距离远返回true，离障碍物距离近返回false&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;取输入obs_box的四个角点，遍历每一个角点，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;direction_point的直线为l1，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point与l1&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;垂直的直线称为l2，计算角点到l2的垂线距离(从垂足到角点的向量与路径正方向同向时距离为正)。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;如果输入is_before为true表示我们希望路径点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;向障碍物前方远离，此时若存在一个角点到l2垂线的距离&amp;lt;输入阈值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_thresh，返回false表示此时路径点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point并不向前方远离障碍物；&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;如果输入is_before为false表示我们希望路径点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;向障碍物后方远离，此时若存在一个角点到l2垂线的距离 &amp;gt; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_thresh，返回false表示此时路径点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;path_point并不向后方远离障碍物；&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="4522" width="1790" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-17" value="-IsADCOverlappingWithObstacle(const PathPoint&amp;amp; adc_path_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//指定路径点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const Box2d&amp;amp; obs_box,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double l_buffer) const：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车车宽单边膨胀buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算指定路径点处的自车box和障碍物box是否重叠，重叠返回true&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.在输入adc_path_point处调用Box2d构造函数实例化自车box，adc_box，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;路径点所在xy坐标系下，路径点到自车box中心点的向量，路径点是自车后轴中心点，计算向量时要注意路径点处自车的heading角和自车后轴中心点到box中心点的偏移向量&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员vehicle_param_的整车长&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;成员vehicle_param_的整车宽+2*输入&lt;span style=&quot;background-color: initial;&quot;&gt;l_buffer&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.调用adc_box的成员函数HasOverlap，输入为obs_box，计算adc_box和obs_box是否重叠&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="4722" width="1790" height="190" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-23" value="-FindBoxCollisionEdge(const PathPoint&amp;amp; adc_path_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//指定路径点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const Box2d&amp;amp; obs_box,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物bbox&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double l_buffer,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&lt;span style=&quot;background-color: initial;&quot;&gt;自车车宽单边膨胀buffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;std::vector&amp;lt;BoxEdgeType&amp;gt;* collision_edges) const：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储碰撞边属于&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;自车的哪条边&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="4912" width="1790" height="120" as="geometry" />
        </mxCell>
        <mxCell id="D7oMFita6UG4JvU4ndth-2" value="-SetObstacleExpand(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入障碍物&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STPoint&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;lower_points&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入原始下边界，变形膨胀处理后的结果覆盖原始值&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::vector&amp;lt;STPoint&amp;gt;* const upper_points)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//输入原始上边界，变形膨胀处理后的结果覆盖原始值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;对于输入障碍物的st上下边界进行变形和膨胀&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;todo&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-12" vertex="1">
          <mxGeometry y="5032" width="1790" height="90" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-16" value="&lt;span style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;SPEED_HEURISTIC_OPTIMIZER&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=550;strokeWidth=4;height=102;" parent="1" vertex="1">
          <mxGeometry x="16340" y="541.3" width="5950" height="5140" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-4" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;StGraphPoint&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;存储节点代价的类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=54;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-16" vertex="1">
          <mxGeometry x="110" y="1406" width="850" height="550" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-5" value="&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;基本属性&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-point_：STPoint&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;当前节点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-pre_point_ = nullptr：const StGraphPoint*&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;父节点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-index_s_ = 0：std::uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点的行号&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-index_t_ = 0：std::uint32_t&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点的列号&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;-optimal_acc_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点处加速度&lt;/div&gt;&lt;div&gt;-optimal_speed_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点处车速&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;代价属性&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;EdgeCost：&lt;span style=&quot;background-color: initial;&quot;&gt;typedef&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;tuple&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;类型重定义，三元组存储顺序分别为&amp;lt;&lt;/span&gt;edge_speed_cost，&lt;span style=&quot;background-color: initial;&quot;&gt;edge_acc_cost，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_jerk_cost&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;-total_cost_ = DP::kInf：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;节点总代价&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-reference_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-obstacle_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;使用&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-spatial_potential_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;前行代价，&lt;span style=&quot;background-color: initial;&quot;&gt;使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-edge_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-edge_speed_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-edge_acc_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-edge_jerk_cost_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;使用&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-W1G2oS5m7lf5mVvRUFl-4" vertex="1">
          <mxGeometry y="54" width="850" height="346" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-6" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="-W1G2oS5m7lf5mVvRUFl-4" vertex="1">
          <mxGeometry y="400" width="850" height="8" as="geometry" />
        </mxCell>
        <mxCell id="-W1G2oS5m7lf5mVvRUFl-7" value="+Init(const std::uint32_t index_t,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::uint32_t index_s,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const STPoint&amp;amp; st_point)：&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化函数，成员index_t_、index_s_、point_分别由输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;index_t、index_s、st_point赋初始值&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-W1G2oS5m7lf5mVvRUFl-4" vertex="1">
          <mxGeometry y="408" width="850" height="82" as="geometry" />
        </mxCell>
        <mxCell id="7xBfLPEhstN1AAC4Dfrv-1" value="+SetEdgeCost(const EdgeCost&amp;amp; edge_cost)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;div&gt;将输入三元组edge_cost中的各元素依次写入成员edge_speed_cost_、&lt;span style=&quot;background-color: initial;&quot;&gt;edge_acc_cost_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;edge_jerk_cost_；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最后将加和后的数值写入成员edge_cost_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="-W1G2oS5m7lf5mVvRUFl-4" vertex="1">
          <mxGeometry y="490" width="850" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-1" value="STPoint" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-16" vertex="1">
          <mxGeometry x="240" y="2096" width="590" height="130" as="geometry" />
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Dhq__uPdf9VPHLC-a9Wb-1" vertex="1">
          <mxGeometry y="26" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Dhq__uPdf9VPHLC-a9Wb-1" vertex="1">
          <mxGeometry y="52" width="590" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-4" value="&lt;div&gt;+STPoint(const double s, const double t) : Vec2d(t, s) {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;x是t，y是s&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;+STPoint(const math::Vec2d&amp;amp; vec2d_point) : Vec2d(vec2d_point) {}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;构造函数，初始化st坐标&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Dhq__uPdf9VPHLC-a9Wb-1" vertex="1">
          <mxGeometry y="60" width="590" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Dhq__uPdf9VPHLC-a9Wb-5" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="VXBDi3d1ndRj7hIO50mS-16" source="-W1G2oS5m7lf5mVvRUFl-4" target="Dhq__uPdf9VPHLC-a9Wb-1" edge="1">
          <mxGeometry x="-0.6964" y="15" relative="1" as="geometry">
            <mxPoint x="-890" y="3103" as="sourcePoint" />
            <mxPoint x="-730" y="3103" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-6" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PathTimeHeuristicOptimizer&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;路径-时间平面启发式优化器类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-16" vertex="1">
          <mxGeometry x="1320" y="220" width="1020" height="864" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-7" value="-speed_heuristic_optimizer_config_：SpeedHeuristicOptimizerConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度启发式优化器配置参数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="50" width="1020" height="26" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-59" value="-init_point_：TrajectoryPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划轨迹起点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="76" width="1020" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9bf47KpHjE6bdmcJn5c--7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-speed_heuristic_optimizer_config_：SpeedHeuristicOptimizerConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度dp优化器配置参数&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="102" width="1020" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-7" value="-ref_speed_data_：std::vector&amp;lt;RefSpeedData&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考速度线数据，采样时刻t对应的车速，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="128" width="1020" height="26" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-8" value="-last_speed_data_：SpeedData&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DP搜索出来的最优速度线？&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="154" width="1020" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="180" width="1020" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Y4-yIGm9fwrnqA95aYLy-9" value="+PathTimeHeuristicOptimizer(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TaskConfig&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;shared_ptr&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DependencyInjector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;injector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，调用基类构造函数初始化基类成员，将成员config_中的成员&lt;/span&gt;speed_heuristic_optimizer_config写入成员speed_heuristic_optimizer_config_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="188" width="1020" height="60" as="geometry" />
        </mxCell>
        <mxCell id="HuAyBqt8NcXd-a5JXoLN-21" value="-&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;Process&lt;/span&gt;(const PathData&amp;amp; path_data,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//从成员reference_line_info_中读取成员路径规划结果path_data_传入&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;const TrajectoryPoint&amp;amp; init_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//从成员frame_中读取成员planning_start_point_传入&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SpeedData* const speed_data)：Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//将速度规划结果写入成员reference_line_info_中的成员speed_data_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;任务处理函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.如果输入path_data中的成员discretized_path_为空，表示路径规划失败，返回错误状态，否则表示路径规划成功，进行下面的步骤&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.对成员init_point_进行赋值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.1.输入init_point存入成员init_point_;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.2.调用成员reference_line_info_中的成员reference_line_提供的方法函数XYToSL将&lt;span style=&quot;background-color: initial;&quot;&gt;成员init_point_的xy坐标转换成sl坐标，并将s写入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用成员函数SearchPathTimeGraph，进行DP搜索，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入speed_data，用于存储DP计算的最优速度线&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建空的FMT搜索节点二维数组&lt;/span&gt;candidate_trajectory：std::vector&amp;lt;std::vector&amp;lt;FMTPoint&amp;gt;&amp;gt;，传入其指针，用于存储扩展出来的fmt节点，用于debug&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;4.调用DP搜索结果debug记录成员函数RecordDebugInfo记录debug信息，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;步骤3赋值后的&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;speed_data&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;步骤3赋值后的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;candidate_trajectory&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员reference_line_info_的成员debug_的成员planning_data的成员st_graph，用于记录debug信息，放置在成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_中&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="248" width="1020" height="312" as="geometry" />
        </mxCell>
        <mxCell id="krv4bcZnEFRCWFMmFaij-24" value="-&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;SearchPathTimeGraph&lt;/span&gt;(SpeedData* speed_data ,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储搜索最优速度线&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::vector&amp;lt;std::vector&amp;lt;FMTPoint&amp;gt;&amp;gt;* const candidate_trajectory) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储fmt节点，用于debug&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.读取dp速度优化器的配置参数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;创建DpStSpeedOptimizerConfig类局部变量dp_st_speed_optimizer_config，&lt;span style=&quot;background-color: initial;&quot;&gt;调用成员reference_line_info_中提供的方法IsChangeLanePath判断自车当前位置是否处于换道过程，来决定读取成员speed_heuristic_optimizer_config_中的成员&lt;/span&gt;default_speed_config还是成员lane_change_speed_config写入&lt;span style=&quot;background-color: initial;&quot;&gt;dp_st_speed_optimizer_config&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;实例化GriddedPathTimeTree类对象st_graph，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;所需输入为：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员reference_line_info_中的成员st_graph_data_，这是前面的任务ST_BOUNDS_DECIDER的计算结果存储在这个成员中&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;dp_st_speed_optimizer_config，在上面的步骤中已被赋值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员reference_line_info_中的成员path_decision_中的成员obstacles_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员init_point_，在Process函数中在调用此函数前已赋值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员ref_speed_data_、last_speed_data_，二者在函数内未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;成员frame_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;调用st_graph的成员函数Search进行DP搜索&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;，其输入分别为：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入speed_data，用于存储最有速度线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;输入candidate_trajectory，用于存储FMT生长节点，用于debug&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Y4-yIGm9fwrnqA95aYLy-6" vertex="1">
          <mxGeometry y="560" width="1020" height="304" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-31" value="DpStCost&lt;div&gt;DP代价类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-16" vertex="1">
          <mxGeometry x="3420" y="260" width="1800" height="2860" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-32" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-config_：const DpStSpeedOptimizerConfig&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;dp配置参数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-obstacles_：const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dp考虑的障碍物&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-st_drivable_boundary_：STDrivableBoundary&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车可行驶边界&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-init_point_：const TrajectoryPoint&amp;amp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-unit_t_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴分辨率&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-total_s_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;s轴总长度，规划路径的总弧长&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-total_t_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;t轴总长度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-ref_speed_data_：std::vector&amp;lt;RefSpeedData&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;参考速度线，&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;未使用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;-boundary_map_：std::unordered_map&amp;lt;std::string,&amp;nbsp;int&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物边界表，通过障碍物id查该障碍物在成员obstacles_中的索引&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-boundary_cost_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物上下边界，二维数组，第一维表示障碍物在全部障碍物(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员path_decision_的成员obstacles_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)中的索引，第二维表示t轴时刻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(dp在t轴上的采样时刻)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;在time_table中的索引&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，pair&amp;lt;s上边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;增加该成员变量目的是为了节省算力，避免在遍历各dp节点时都二分查找障碍物在该节点所在垂直于t轴直线上的s下边界和s上边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-keep_clear_range_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;禁停区，vector内存储的是不同的s区间，一个s区间表示成pair&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s下边界，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s上边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;没有障碍物维度，因为各障碍物在s方向上重合的区间会被merge，没有时间维度，因为禁停区的smin和smax在t方向上是不变的&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-follow_distance_level_ = 3：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;跟车时距&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-desire_follow_vel_ = 100.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;期望跟车速度&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="40" width="1800" height="350" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-33" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="390" width="1800" height="8" as="geometry" />
        </mxCell>
        <mxCell id="jmzA_E2FORbxOF1XWL5z-34" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;DpStCost&lt;/span&gt;(const DpStSpeedOptimizerConfig&amp;amp; config,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp; const double total_t,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double total_s,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const STDrivableBoundary&amp;amp; st_drivable_boundary,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const TrajectoryPoint&amp;amp; init_point, &lt;/div&gt;&lt;div style=&quot;&quot;&gt;           &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const std::vector&amp;lt;RefSpeedData&amp;gt;&amp;amp; ref_speed_data,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const Frame* frame)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成员config_、&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_drivable_boundary_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;unit_t_、total_s_、total_t_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ref_speed_data_由输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;config、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_drivable_boundary、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point、config的成员unit_t、total_s、total_t、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ref_speed_data进行列表初始化&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;boundary_map_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_实现障碍物id和障碍物索引的匹配&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;boundary_cost_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles_和成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;total_t_、unit_t_确定数组维度，并对每一个元素赋予初值&amp;lt;-1,-1&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AddToKeepClearRange初始化成员keep_clear_range_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;调用函数SetFollowDistanceLevel，读取输入frame中的成员time_gap_level_初始化成员follow_distance_level_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="398" width="1800" height="272" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-4" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;GetSpatialPotentialCost&lt;/span&gt;(const StGraphPoint&amp;amp; point)：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算输入point处的前行代价&lt;div&gt;1.前行代价 = (成员&lt;span style=&quot;background-color: initial;&quot;&gt;total_s_ - 输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;point的成员point_的成员s) * 成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;config_的成员&lt;/span&gt;spatial_potential_penalty&lt;/div&gt;&lt;div&gt;2.返回&lt;span style=&quot;background-color: initial;&quot;&gt;前行代价&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="670" width="1800" height="70" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-5" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;GetAccelCost&lt;/span&gt;(const double accel, double velocity)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入为当前节点处的加速度和速度&lt;div&gt;计算当前节点处的加速度代价&lt;/div&gt;&lt;div&gt;1.根据输入accel的正负选择成员config_中的成员accel_penalty和decel_penalty作为权重系数accel_coeff&lt;/div&gt;&lt;div&gt;2.accel_cost_1 = accel_coeff *&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;accel^2 * ratio&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;其中ratio表示低速起步工况加速度代价的缩放系数，车速越低，ratio越接近于0，减小加速度代价，期望快速起步，ratio = 输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;velocity/车速阈值5.56m/s(标定量)，ratio的取值范围是[0.01，1]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.accel_cost_2 =&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel^2 * (&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;decel_penalty^2 / (1+exp(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel-max_dec&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;))&amp;nbsp; +&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel_penalty^2 / (&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1+exp(-(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel-max_acc&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;))&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)，其中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;max_dec和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;max_acc是根据输入车速&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;velocity得到的ivsta最大减速度和最大加速度，这一项表示当输入accel超过区间[max_dec，max_acc]时放大代价，期望加速度不要超过ivista法规限制&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.最终的加速度代价accel_cost = (&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel_cost_1 +&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel_cost_2) *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员unit_t_，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里乘上t轴分辨率是为了归一化处理，t轴分辨率大会造成accel平方项变大&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5.返回&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accel_cost&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="740" width="1800" height="140" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-6" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;GetJerkCost&lt;/span&gt;(const double jerk, double velocity)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入为当前节点处的jerk和速度&lt;div&gt;计算当前节点处的jerk代价&lt;/div&gt;&lt;div&gt;1.权重系数jerk_coeff根据输入jerk的正负选择成员config_中的成员positive_jerk_coeff或negative_jerk_coeff&lt;/div&gt;&lt;div&gt;2.jerk代价 = jerk^2 * jerk_coeff * 成员unit_t_&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这里乘上t轴分辨率是为了归一化处理，t轴分辨率大会造成jerk平方项变大&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;3.返回jerk代价&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="880" width="1800" height="100" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  +&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;GetSpeedCost&lt;/span&gt;(const STPoint&amp;amp; point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp; double speed,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前速度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double speed_limit,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点s处对应的速度限值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;double cruise_speed,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//巡航速度&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double CIO_speed_limit,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点s处对应的cio硬速度限值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;const double CIO_ref_speed) const;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//当前节点s处对应的cio软速度参考值&lt;/div&gt;&lt;div style=&quot;&quot;&gt;计算当前节点的速度代价&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.数据保护&lt;/div&gt;&lt;div style=&quot;&quot;&gt;输入speed为负时，返回inf&lt;/div&gt;&lt;div style=&quot;&quot;&gt;输入speed大于输入&lt;span style=&quot;background-color: initial;&quot;&gt;CIO_speed_limit时，返回inf&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.特殊情况处理，速度代价增加项&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.若输入speed小于车辆配置类&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;VehicleParameter中的成员&lt;/span&gt;max_abs_speed_when_stopped(0.05m/s) &amp;amp;&amp;amp; 输入&lt;span style=&quot;background-color: initial;&quot;&gt;point的s在成员keep_clear_range_内，表示&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当前节点停在了禁停区内，增加一部分惩罚代价，若没有在禁停区停车则不增加禁停区代价&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;禁停区停车代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; = 默认速度代价&lt;/span&gt;default_speed_cost * 禁停区停车惩罚系数keep_clear_low_speed_penalty * 成员unit_t_&lt;/div&gt;&lt;div style=&quot;&quot;&gt;其中&lt;span style=&quot;background-color: initial;&quot;&gt;max_abs_speed_when_stopped通过车辆配置帮助静态类&lt;/span&gt;VehicleConfigHelper的成员函数GetConfig取得，&lt;span style=&quot;background-color: initial;&quot;&gt;default_speed_cost和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;keep_clear_low_speed_penalty从成员config_中获取&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.若输入speed不等于输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit时，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;增加一部分不等速代价，否则不增加这一部分代价&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;不等速代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; = 不等速惩罚系数 *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认速度代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;default_speed_cost * 速度差比例det_speed^2 *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员unit_t_，其中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;det_speed = (&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) /&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit，不等速惩罚系数根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;det_speed大于0或是小于0在成员config_中选择&lt;/span&gt;exceed_speed_penalty(1e3)或是low_speed_penalty(0)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 51, 51);&quot;&gt;代码在det_speed&amp;lt;0时det_speed没有作平方处理，有问题&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.正常工况&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.1.取定当前节点处的参考车速ref_speed，在&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;成员desire_follow_vel_(在成员函数GetObstacleCost中被赋值)&lt;/span&gt;、输入&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit、输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CIO_ref_speed中取最小得到参考速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;速度代价主要部分&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; = 参考速度惩罚系数 *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;默认速度代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;default_speed_cost * 速度差diff_speed的绝对值 *&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员unit_t_，其中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;diff_speed = 输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed - 参考车速&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ref_speed&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4.返回速度代价&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;速度代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; = 禁停区停车代价 + 不等速代价 + 速度代价主要部分&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="980" width="1800" height="460" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-15" value="+&lt;span style=&quot;background-color: rgb(255, 102, 179);&quot;&gt;GetObstacleCost&lt;/span&gt;(const StGraphPoint&amp;amp; st_graph_point)：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入要计算障碍物代价的当前节点&lt;div&gt;计算当前节点处的障碍物代价&lt;div&gt;1.确定节点信息&lt;/div&gt;&lt;div&gt;从输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point取到当前节点的s、t(从&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员point_中读取)、index_t(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;从&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员index_t_中读取&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)、speed(从&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员optimal_speed_中读取&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;从输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pre_point_中读取父节点的pre_s、pre_t、pre_index_t、pre_speed，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;若pre_point_为空(即输入st_graph_point为原点)，父节点属性与子节点一致&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.确定当前节点时刻t处的搜索上下边界，大喇叭&lt;/div&gt;&lt;div&gt;从成员&lt;span style=&quot;background-color: initial;&quot;&gt;st_drivable_boundary_中读取当前节点时刻t时的上边界upper_bound和下边界lower_bound&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若当前节点的s不在区间[&lt;span style=&quot;background-color: initial;&quot;&gt;lower_bound，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;upper_bound&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]内，返回inf&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.遍历成员obstacles_中的各障碍物obstacle，计算障碍物代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.初始化。&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;读取obstacle的成员path_st_boundary_写入局部变量boundary&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;；成员&lt;/span&gt;desire_follow_vel_和desire_follow_dec_写入默认值100、-1&lt;/div&gt;&lt;div&gt;3.2.若obstacle的成员&lt;span style=&quot;background-color: initial;&quot;&gt;speed_decision_为Soft_Overtake，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;计算输入st_graph_point点处的soft代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.2.1.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;计算输入st_graph_point点处的soft_overtake代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的原始边界orignal_st_boundary_被STObataclesProcessor类成功写入，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;orignal_st_boundary_的成员函数&lt;/span&gt;GetBoundarySRange得到该障碍物在步骤1中得到的当前节点所在的t时刻上的s边界s_upper、s_lower，否则continue掉该障碍物&lt;/div&gt;&lt;div&gt;3.2.1.1.若步骤1中得到的当前节点的s满足：s&amp;lt;=s_upper&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;soft_overtake代价 = &lt;/span&gt;惩罚系数(标定量25000) * s_diff，其中&lt;span style=&quot;background-color: initial;&quot;&gt;s_diff = s_upper - s(&amp;gt;0，下限值为soft_overtake安全距离5m，标定量)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.1.2.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若步骤1中得到的当前节点的s满足：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_upper&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt; s &amp;lt;= s_upper +&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_overtake安全距离5m&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;soft_overtake代价 = &lt;/span&gt;惩罚系数(标定量5000) * s_diff，其中&lt;span style=&quot;background-color: initial;&quot;&gt;s_diff = (s_upper&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_overtake安全距离5m)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;- s(&amp;gt;0)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.1.3.否则，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_overtake代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;= 0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;3.3.若obstacle的成员&lt;span style=&quot;background-color: initial;&quot;&gt;speed_decision_为Soft_Yield&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.3.1.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;计算输入st_graph_point点处的soft_yield代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的原始边界orignal_st_boundary_被STObataclesProcessor类成功写入，调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;orignal_st_boundary_的成员函数&lt;/span&gt;GetBoundarySRange得到该障碍物在步骤1中得到的当前节点所在的t时刻上的s边界s_upper、s_lower，否则continue掉该障碍物&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1.1.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;若步骤1中得到的当前节点的s满足：&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_yield安全距离5m&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;= s &amp;lt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;soft_yield代价 = &lt;/span&gt;惩罚系数(标定量5000) * s_diff，其中&lt;span style=&quot;background-color: initial;&quot;&gt;s_diff = s - (&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_yield安全距离5m&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(&amp;gt;0)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.1.2.若步骤1中得到的当前节点的s满足：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;s_lower&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;=s&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;soft_yield代价 = &lt;/span&gt;惩罚系数(标定量25000) * s_diff，其中&lt;span style=&quot;background-color: initial;&quot;&gt;s_diff = s -&amp;nbsp;&lt;/span&gt;s_lower&lt;span style=&quot;background-color: initial;&quot;&gt;(&amp;gt;0，下限值为&lt;/span&gt;soft_yield&lt;span style=&quot;background-color: initial;&quot;&gt;安全距离5m，标定量)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.1.3.否则，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;soft_yield&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;代价&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;= 0&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;一些障碍物代价返回inf的情况&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.3.1.对于步骤3.1中得到的障碍物obstacle的st边界boundary，调用其成员函数IsPointInBoundary，函数输入：&lt;/div&gt;&lt;div&gt;输入st_graph_point的成员point_&lt;/div&gt;&lt;div&gt;若结果为true，表示&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当前节点st_graph_point生长在了boundary内部，返回inf&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.2.调用成员函数HasCollision，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;步骤3中遍历的障碍物obstacle&lt;/div&gt;&lt;div&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;st_graph_point&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤1中得到的pre_s、pre_t&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若结果为true，表示&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;父节点与当前节点的连线与障碍物发生碰撞，返回inf&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.4.一些需要将障碍物continue的情况&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.1.&lt;/span&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3中遍历的障碍物obstacle是虚拟的非停止障碍物时，将该障碍物continue掉不计算其代价，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;虚拟障碍物一般是停止线和左转让行点，这些障碍物可以允许不留跟停距离，但虚拟障碍物的纵向决策一般是stop，所以这段代码不会运行到&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.2.&lt;/span&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的boundary的成员min_s_&amp;gt;300m(标定量)，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;说明障碍物距离过远，将该障碍物continue掉不计算其代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.3.若步骤1得到的当前节点的t不在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3.1中的boundary的成员min_t_和max_t_组成的区间[min_t_，max_t_]内，且不属于步骤3.5.1.2中识别的情况，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;说明在当前节点位置处没有障碍物阻碍前行，可以将该障碍物continue掉不计算其代价&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.对于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3中遍历的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的st边界boundary在t轴方向上的长度小于t轴洒点的分辨率时的处理，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;此时父子节点都不会计算障碍物代价，因此要避免这种情况&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.1.对于这种情况的识别&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.5.1.1创建bool类型局部变量boundary_round_upper和boundary_round_lower，分别表示在t轴相邻两个洒点的区间内的boundary是否更靠近区间右端点和是否更靠近区间左端点，默认值都给false&lt;/div&gt;&lt;div&gt;3.5.1.2.若障碍物boundary的成员max_t_和min_t_之差小于成员unit_t_ &amp;amp;&amp;amp;&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物boundary的成员max_t_和min_t_向下取整都相等 &amp;amp;&amp;amp; 步骤1中得到的当前节点的t在t轴相邻&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;两个洒点的区间的左端点上，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;这说明障碍物st边界在t轴相邻两个洒点的区间内且该障碍物为当前节点未来方向上的障碍物(这里不考虑过去方向上的障碍物是合理的)&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;这里有一个潜在问题，现在t轴方向相邻两节点之间的分辨率统一为1，若改为其他不为1的值会导致逻辑错误&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物boundary的成员max_t_与区间右端点之差的绝对值相比于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物boundary的成员min_t_与区间左端点之差的绝对值更小(说明障碍物更靠近右端点)，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_round_upper置为true，否则(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;说明障碍物更靠近左端点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_round_lower置为true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;3.5.2.将处理好的各障碍物&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的st边界boundary在t轴采样点处的s上边界和s下边界存入&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;二维数组成员boundary_cost_，其维度和默认元素(&amp;lt;-1，-1&amp;gt;)已在成员函数DpStCost中定义&lt;/span&gt;&lt;/div&gt;&lt;div&gt;通过步骤1得到的boundary中的成员id_在成员boundary_map_中查找到&lt;span style=&quot;background-color: initial;&quot;&gt;boundary所属障碍物在reference_line_info的成员path_decision_的成员全部障碍物obstacles_中的索引号boundary_index&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建double类型局部变量s_upper和s_lower用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle在各t轴采样点处的s上下边界值，默认值都为0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.2.1&lt;/span&gt;.若boundary_cost_[&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_index&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;][步骤1中的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pre_index_t&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]处的s上边界值&amp;lt;0，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;说明成员boundary_cost_在obstacle处在pre_t时刻未写入有效s上下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，否则不对该处的s上下边界重复赋值，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;由于步骤1中已经保证，如果输入st_graph_point是原点，其父节点的属性与其本身一致，因此该if语句只会在输入st_graph_point是原点时执行一次，计算0时刻处各障碍物的s上下边界，当输入st_graph_point是其他dp节点时不会执行&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.2.1.1&lt;/span&gt;.调用boundary的成员函数GetBoundarySRange，计算pre_t时刻&lt;span style=&quot;background-color: initial;&quot;&gt;boundary的s上下边界值，并写入成员boundary_cost_，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤1中得到的pre_t&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.1.3中创建的s_upper和s_lower，用于存储找到的s上下边界值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.2.1.2&lt;/span&gt;.如果上一步未成功找到有效s上下边界&lt;br&gt;&lt;/div&gt;&lt;div&gt;将&amp;lt;步骤3.5.1.3中创建的s_upper(在这里只能是默认值0)，成员total_s_&amp;gt;写入&lt;span style=&quot;background-color: initial;&quot;&gt;成员boundary_cost_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.2.2&lt;/span&gt;.&lt;span style=&quot;background-color: initial;&quot;&gt;若boundary_cost_[&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_index&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;][步骤1中的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;index_t&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;]处的s上边界值&amp;lt;0，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;说明成员boundary_cost_在obstacle处在t时刻未写入有效s上下边界&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，否则不对该处的s上下边界重复赋值，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;当输入st_graph_point不是原点且是dp某一列节点中的首节点时，会进入该if语句计算该时刻处各障碍物的s上下边界，当输入st_graph_point是原点或者是dp某一列节点中的非首节点时，不执行该if语句&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.2.2.1&lt;/span&gt;.&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;修正dp在t轴采样点在index_t处的t值，以实现在当前节点处也会有障碍物s上下边界&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;创建double类型局部变量used_t，默认值给步骤1中得到的t&lt;/div&gt;&lt;div&gt;若步骤&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.1.2得到的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_round_upper置位(说明&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的st边界boundary在相邻两个t轴采样点组成的区间内&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤1中得到的t是这个区间的右端点，将&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary的成员max_t_赋给used_t，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;由于在步骤3.5.1.2识别这种情况时不会考虑过去方向上的障碍物，因此“&amp;amp;&amp;amp;”后面条件成立时boundary_round_upper必为false，这条语句永远不会被执行&lt;/span&gt;&lt;/div&gt;&lt;div&gt;若步骤&lt;span style=&quot;background-color: initial;&quot;&gt;3.5.1.2得到的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;boundary_round_lower置位(说明&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤3中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle的st边界boundary在相邻两个t轴采样点组成的区间内&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) &amp;amp;&amp;amp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;步骤1中得到的t是这个区间的左端点，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;将boundary的成员min_t_赋给used_t，这样在pre_t上boundary没有s上下边界，而在t上boundary就有了s上下边界&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="1440" width="1800" height="1150" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--2" value="-AddToKeepClearRange(const std::vector&amp;lt;const Obstacle*&amp;gt;&amp;amp; obstacles)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;识别输入obstacles中每个障碍物的类型，初始化成员keep_clear_range_&lt;div&gt;1.遍历输入&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles，将禁停区的障碍物的成员path_st_boundary的成员min_s_、max_s_组成区间推入成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;keep_clear_range_&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SortAndMergeRange对上一步赋值后的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;keep_clear_range_进行排序与合并&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2590" width="1800" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-14" value="-static SortAndMergeRange(&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;keep_clear_range_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)：&lt;/span&gt;void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将输入keep_clear_range_中的各s区间按区间左边界从小到大排列好，并将重叠的区间进行合并" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2650" width="1800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-13" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;-InKeepClearRange(double s) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;遍历成员keep_clear_range_中的各个s区间，判断是否存在一个区间包含输入的s，是返回true，否返回false&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2676" width="1800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--1" value="-SetFollowDistanceLevel(const Frame* frame)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;读取输入frame的成员time_gap_level_写入成员follow_distance_level_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2702" width="1800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ydLdNuPebUsn6rm5Q9Q--8" value="+SetDimension(const uint32_t dim)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;通过外部输入dim修改类中的t轴采样点个数，受影响的是成员&lt;/span&gt;boundary_cost_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2728" width="1800" height="26" as="geometry" />
        </mxCell>
        <mxCell id="ZuKvAGwWUdxNMg0rZytt-1" value="-HasCollision(const Obstacle* const obst_ptr,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，待判碰的障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; const StGraphPoint&amp;amp; st_graph_point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，当前节点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; double pre_s, double pre_t)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，父节点的s和t&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;判断由父节点到当前节点的连线是否与障碍物发生碰撞，输入障碍物&lt;span style=&quot;background-color: initial;&quot;&gt;obst_ptr的判碰四边形是在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obst_ptr的st边界取在&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;t轴方向上包含当前节点和父节点的最小区间左右端点index，截取到的st边界四边形&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="jmzA_E2FORbxOF1XWL5z-31" vertex="1">
          <mxGeometry y="2754" width="1800" height="106" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-17" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;entryX=1.007;entryY=0.223;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="tYoZKa7LIVWvfuPdVHDL-25" target="oxPOzmRVD7sxvV5kMznU-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="760" y="-350" as="sourcePoint" />
            <mxPoint x="920" y="-350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-18" value="构造函数需要任务配置类TaskConfig" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="VXBDi3d1ndRj7hIO50mS-17" vertex="1" connectable="0">
          <mxGeometry x="-0.8809" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-35" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="VXBDi3d1ndRj7hIO50mS-1" target="VXBDi3d1ndRj7hIO50mS-12" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="13640" y="801.3" as="sourcePoint" />
            <mxPoint x="13800" y="801.3" as="targetPoint" />
            <Array as="points">
              <mxPoint x="13740" y="1236.3" />
              <mxPoint x="13740" y="1236.3" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-36" value="SpeedLimitDecider" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="12340" y="2521.3" width="1390" height="1220" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-37" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-frame_ = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;Frame*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-reference_line_info_ = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -vehicle_param_：&lt;span style=&quot;background-color: initial;&quot;&gt;VehicleParameter&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="26" width="1390" height="84" as="geometry" />
        </mxCell>
        <mxCell id="_HWI0THK7regcAKxdJNW-1" value="-last_nudge_dec_ = 0.0：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;上一帧的绕障减速度，成员函数SmoothNudgeDec中对绕障减速度做低通滤波用" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="110" width="1390" height="26" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-38" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="136" width="1390" height="8" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-39" value="+SpeedLimitDecider(Frame* const frame,&lt;span style=&quot;background-color: initial;&quot;&gt;ReferenceLineInfo* const reference_line_info)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;由输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frame、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化成员frame_、reference_line_info_，成员vehicle_param_由静态类&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;VehicleConfigHelper的成员vehicle_config_的成员vehicle_param初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="144" width="1390" height="60" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-5" value="+&lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;GetSpeedLimits&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IndexedList&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全部障碍物&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//依赖注射器&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;SpeedLimit* const speed_limit_data)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;//存储速度限值计算结果&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算非ACC模式下的速度限值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.绕障限速，&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;getNudgeDec，计算得到最终的绕障限速所需要的参数(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;绕障开始位置s, 绕障结束位置s, 绕障减速度, 绕障速度限值&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)，函数输入参数：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info_的成员path_data_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;frenet_path_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;成员frame_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;planning_start_point_的成员v&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.2.调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;SmoothNudgeDec对绕障减速度进行低通滤波平滑&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.cio限速&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.提取cio的s和v的轨迹，创建&lt;/span&gt;std::vector&amp;lt;std::pair&amp;lt;double,double&amp;gt;&amp;gt;类型的局部变量cio_hard_sv，pair&amp;lt;轨迹点的s，轨迹点的v&amp;gt;，从成员frame_的成员hard_cio_ref_中的每个轨迹点读取s和v，写入&lt;span style=&quot;background-color: initial;&quot;&gt;cio_hard_sv&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.遍历成员reference_line_info_的成员path_data_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;discretized_path_上的各个路径点，依次将限速值写入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_data&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.计算该路径点的绕障限速值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对于小于1.1中计算出来的绕障开始位置s的路径点，使用vt^2-v0^2 = 2as，其中v0是自车当前车速，vt是在该路径点处的绕障限速，a是1.1中计算出来的绕障减速度，s是该路径点的s坐标，vt与1.1得到的绕障限速值取大作为该路径点最终绕障限速值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对于处于绕障区间【&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1中计算出来的绕障开始位置s，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1中计算出来的绕障结束位置s】之间的路径点，保持进入绕障区间前最后一个路径点的绕障限速值不变&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;对于大于&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.1中计算出来的绕障结束位置s的路径点，绕障限速值置为无效值80m/s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.2.利用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cio_hard_sv&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;遍历cio的s轨迹，查找路径点s对应的cio轨迹点，取该轨迹点上的v，作为在该路径点s上的cio速度限值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.3.将该路径点的绕障限速值和cio限速值取小，下限保护为0.1，作为该点最终的限速值&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.4.调用输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_data的成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;AppendSpeedLimit，将各路径点的s和限速值组成一个限速点，依次推入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_data&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="204" width="1390" height="432" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-6" value="-&lt;span style=&quot;background-color: initial;&quot;&gt;getNudgeDec&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IndexedList&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//障碍物索引表&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const FrenetFramePath&amp;amp; frenet_path,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//path数据&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;double ego_v) const：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::tuple&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//自车速度&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//return&lt;/span&gt;&amp;lt;绕障开始位置, 绕障结束位置, 绕障减速度, 绕障速度限值&amp;gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.数据保护，若输入&lt;span style=&quot;background-color: initial;&quot;&gt;frenet_path的长度过短，路径点少于2，返回安全值{0,0,0,0}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.遍历输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles中的各个障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.1.判断障碍物是否需要continue&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物非静止且为虚拟障碍物时continue&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物横向决策不为nudge时continue&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;障碍物超出降速时距区间时continue&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据障碍物横向决策左右绕障的不同，计算绕障横向距离nudge_l(绝对值)，自车与目标车的横向边界的l之差，若绕障距离过大(&amp;gt;0.3)&amp;amp;&amp;amp;障碍物靠近参考线的一侧边界在车道之外时continue&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.计算绕障降速参数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算障碍物到参考线的横向距离(绝对值)，障碍物的sl边界平行于frenet坐标系，当参考线与障碍物有重叠时横向距离为0，当参考线与障碍物没有重叠时，横向距离为障碍物边界到参考线的距离&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算缩放比例ratio，1-障碍物到参考线的横向距离/半车宽，障碍物到参考线横向距离越远，绕障空间越大，比例系数越小，比例系数范围0～1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算绕障期望减速度原始值，dec_raw = max(-2.5, -1.5-1*ratio)，绕障空间越大，期望减速度越大，期望以更高车速通过&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;计算绕障期望速度，speed_raw = 8-3*raio，&lt;span style=&quot;background-color: initial;&quot;&gt;绕障空间越大，期望速度越大，期望以更高车速通过&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;nudge_l计算减速度衰减系数，1 - nudge_l/安全距离(标定量1m)，比例系数范围0～1，横向绕行距离越大，衰减系数越小&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;最终绕行减速度由&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dec_raw*衰减系数得到，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;横向绕行距离越大，越不容易衰减&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.3.在所有障碍物中找到绕行减速度最小的那个，输出对该障碍物的绕行减速参数作为函数输出&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.{绕障开始位置：障碍物start_s,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;绕障结束位置：障碍物end_s+buffer, 绕障减速度：对该障碍物的最终绕行减速度，绕障速度限值：绕障期望速度&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="636" width="1390" height="404" as="geometry" />
        </mxCell>
        <mxCell id="UjVsXSmvedPTqeaRI4AV-2" value="-SmoothNudgeDec(double&amp;amp; nudge_dec)：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;对绕障减速进行低通滤波，通过成员函数last_nudge_dec_存储上一帧的绕障减速度" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="1040" width="1390" height="44" as="geometry" />
        </mxCell>
        <mxCell id="_HWI0THK7regcAKxdJNW-2" value="&lt;div&gt;+virtual &lt;span style=&quot;background-color: rgb(255, 153, 204);&quot;&gt;GetSpeedLimitsCIO&lt;/span&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;IndexedList&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacles&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全部障碍物&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::shared_ptr&amp;lt;DependencyInjector&amp;gt;&amp;amp; injector,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//依赖注射器&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SpeedLimit* const speed_limit_data_hard,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储cio激烈驾驶速度线速度限值点&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SpeedLimit* const speed_limit_data_soft)：&lt;span style=&quot;background-color: initial;&quot;&gt;Status&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储cio正常驾驶速度线速度限值点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.从成员frame_调用成员函数GetHardCioRef和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GetSoftCioRef，读到cio的两条速度线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;遍历成员reference_line_info_的成员path_data_的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;discretized_path_上的各个路径点，根据路径点的s找到cio速度线对应s速度点上的v，组成速度限值点，分别依次推入输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_data_hard和&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;speed_limit_data_soft&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-36" vertex="1">
          <mxGeometry y="1084" width="1390" height="136" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-40" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="VXBDi3d1ndRj7hIO50mS-1" target="VXBDi3d1ndRj7hIO50mS-36" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="13610" y="1971.3" as="sourcePoint" />
            <mxPoint x="13770" y="1971.3" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-42" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;HardwareConfig.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/common/hardware_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-5620" y="1989" width="430" height="140" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-43" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;SensorConfig sensor_config = 1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    VehicleParameter vehicle_param = 3;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    EcuInfo ecu_info = 4;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    haomo.hios.Header header = 5;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="VXBDi3d1ndRj7hIO50mS-42" vertex="1">
          <mxGeometry y="50" width="430" height="90" as="geometry" />
        </mxCell>
        <mxCell id="VXBDi3d1ndRj7hIO50mS-47" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="5JwgbHoywKSMs2gWUFIL-52" target="VXBDi3d1ndRj7hIO50mS-42" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-5300" y="2370" as="sourcePoint" />
            <mxPoint x="-5140" y="2370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-23" value="MathUtils&lt;div&gt;数学工具行为类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6090" y="4460" width="440" height="110" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-24" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-23" vertex="1">
          <mxGeometry y="40" width="440" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-23" vertex="1">
          <mxGeometry y="66" width="440" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-26" value="+static WrapToPi(double theta)：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;将输入theta(弧度制)转换到[-pi,pi]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-23" vertex="1">
          <mxGeometry y="74" width="440" height="36" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-31" value="ObjectDecisionType.proto&lt;div&gt;thirdparty/x86/common/proto/Planning/decision.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="320" y="6322" width="490" height="278" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-32" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;oneof object_tag {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ignore：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectIgnore&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stop：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectStop&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;follow：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectFollow&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;yield：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectYield&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;overtake：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectOvertake&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;nudge：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectNudge&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;avoid：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectAvoid&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;side_pass：&lt;span style=&quot;background-color: initial;&quot;&gt;ObjectSidePass&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;OBJECT_TAG_NOT_SET&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;=0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;pb&lt;span style=&quot;background-color: initial;&quot;&gt;中补充，proto中没有&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  }&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-31" vertex="1">
          <mxGeometry y="40" width="490" height="230" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-33" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-31" vertex="1">
          <mxGeometry y="270" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-35" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6aikKVBvCmk6lyRLQm6R-30" target="6aikKVBvCmk6lyRLQm6R-31" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-310" y="6360" as="sourcePoint" />
            <mxPoint x="-150" y="6360" as="targetPoint" />
            <Array as="points">
              <mxPoint x="260" y="6720" />
              <mxPoint x="260" y="6470" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-38" value="SpeedDecision" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="350" y="6650" width="290" height="158" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-39" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;enum {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;None = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Soft_Overtake = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Soft_Yield = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;};&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-38" vertex="1">
          <mxGeometry y="26" width="290" height="124" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-40" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-38" vertex="1">
          <mxGeometry y="150" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-42" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6aikKVBvCmk6lyRLQm6R-30" target="6aikKVBvCmk6lyRLQm6R-38" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-350" y="6580" as="sourcePoint" />
            <mxPoint x="-240" y="6580" as="targetPoint" />
            <Array as="points">
              <mxPoint x="250" y="6770" />
              <mxPoint x="250" y="6770" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-2" value="SLBoundary.proto" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1960" y="6920" width="490" height="428" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;start_s：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;end_s：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;start_l：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;end_l：double&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  repeated boundary_point：SLPoint&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;障碍物的sl边界是AABB的边界框，尤其对于斜向障碍物&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;// start_s &amp;lt;= end_s.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;跟目标朝向无关，对象来车也满足此规则&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;//&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;end_s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;|&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;S  direction&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;               |&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;           start_s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;// start_l &amp;lt;= end_l&lt;/div&gt;&lt;div style=&quot;&quot;&gt;// &lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;相对于参考线左正右负&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;//  end_l  &amp;lt;-----L direction---- start_l&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LCVE5efHLrpg4gtOeXXL-2" vertex="1">
          <mxGeometry y="26" width="490" height="394" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LCVE5efHLrpg4gtOeXXL-2" vertex="1">
          <mxGeometry y="420" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LCVE5efHLrpg4gtOeXXL-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="zWTbZChh2CSGO8JRFA1Z-10" target="LCVE5efHLrpg4gtOeXXL-2" edge="1">
          <mxGeometry x="-0.9152" relative="1" as="geometry">
            <mxPoint x="-1260" y="6520" as="sourcePoint" />
            <mxPoint x="-1400" y="6520" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1715" y="6800" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-20" value="&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;数学工具，命名空间math&lt;/font&gt;&lt;/b&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=470;strokeWidth=4;height=70;movable=1;resizable=1;rotatable=1;deletable=1;editable=1;locked=0;connectable=1;" parent="1" vertex="1">
          <mxGeometry x="-840" y="2940" width="1750" height="1894" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;LineSegment2d&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;二维平面中的线段&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-20" vertex="1">
          <mxGeometry x="950" y="1330" width="730" height="350" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-start_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段起点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-end_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段终点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-unit_direction_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-heading_ = 0.0：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的单位向量在xy平面上与x轴正方向的夹角&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线段的长度&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-7" vertex="1">
          <mxGeometry y="50" width="730" height="110" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="CUjre2yNhRqGTGJxgn0P-7" vertex="1">
          <mxGeometry y="160" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-10" value="+LineSegment2d(const Vec2d &amp;amp;start, const Vec2d &amp;amp;end)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数，初始化上面全部的成员变量" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-7" vertex="1">
          <mxGeometry y="168" width="730" height="46" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-12" value="+rotate(const double angle)：Vec2d&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;以线端起点成员start_为圆心，将线段终点end_x旋转输入angle角度(弧度制)，返回得到的新的中点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-7" vertex="1">
          <mxGeometry y="214" width="730" height="56" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-13" value="+GetPerpendicularFoot(const Vec2d &amp;amp;point,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//线段外一点&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                              &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Vec2d *const foot_point) const：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储线段外一点到线段的垂足点&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入线段外一点point，计算点point到线段的所在直线的垂足，并存储在输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;foot_point中，返回垂线的长度&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-7" vertex="1">
          <mxGeometry y="270" width="730" height="80" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-3" value="Box2d&lt;div&gt;二维平面中的box&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-20" vertex="1">
          <mxGeometry x="990" y="512" width="650" height="580" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-4" value="&lt;div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-center_：&lt;span style=&quot;background-color: initial;&quot;&gt;Vec2d&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box中点坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-length_ = 0.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-width_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-half_length_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box半长&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-half_width_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box半宽&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-heading_ = 0.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box朝向角&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-cos_heading_ = 1.0&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;朝向角余弦&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-sin_heading_ = 0.0;&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;朝向角正弦&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="40" width="650" height="190" as="geometry" />
        </mxCell>
        <mxCell id="pIUvSQCg525UT0VGw2sr-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-corners_：std::vector&amp;lt;Vec2d&amp;gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储box的四个角点&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-max_x_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;box四个角点中的最大x坐标&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -min_x_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最小x坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -max_y_ = std::numeric_limits&amp;lt;double&amp;gt;::lowest()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最大y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  -min_y_ = std::numeric_limits&amp;lt;double&amp;gt;::max()：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;box四个角点中的最小y坐标&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="230" width="650" height="120" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="350" width="650" height="8" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-21" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;+&lt;/span&gt;Box2d(const Vec2d &amp;amp;center,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double heading,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double length,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const double width)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;/span&gt;&lt;/div&gt;&lt;div&gt;成员corners_、&lt;span style=&quot;background-color: initial;&quot;&gt;max_x_、min_x_、max_y_、min_y_由角点初始化函数InitCorners进行初始化，其他成员由输入初始化&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="358" width="650" height="82" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-6" value="&lt;span style=&quot;color: rgba(0, 0, 0, 0); font-family: monospace; font-size: 0px; text-wrap: nowrap;&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22%2BHasOverlap(const%20Box2d%20%26amp%3Bamp%3Bbox)%20const%EF%BC%9Abool%26lt%3Bspan%20style%3D%26quot%3Bwhite-space%3A%20pre%3B%26quot%3B%26gt%3B%26%239%3B%26lt%3B%2Fspan%26gt%3B%E8%BD%B4%E5%88%86%E7%A6%BB%E5%AE%9A%E7%90%86%E5%88%A4%E6%96%AD%E8%BE%93%E5%85%A5box%E4%B8%8E%22%20style%3D%22text%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dleft%3BverticalAlign%3Dtop%3BspacingLeft%3D4%3BspacingRight%3D4%3Boverflow%3Dhidden%3Brotatable%3D0%3Bpoints%3D%5B%5B0%2C0.5%5D%2C%5B1%2C0.5%5D%5D%3BportConstraint%3Deastwest%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22-1270%22%20y%3D%227556%22%20width%3D%22920%22%20height%3D%2226%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="440" width="650" height="26" as="geometry" />
        </mxCell>
        <mxCell id="CUjre2yNhRqGTGJxgn0P-19" value="+HasOverlap(const Box2d &amp;amp;box) const：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轴分离定理判断输入box与类实例化的box之间是否存在重叠" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="466" width="650" height="26" as="geometry" />
        </mxCell>
        <mxCell id="pIUvSQCg525UT0VGw2sr-2" value="+InitCorners()：void&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;角点初始化函数&lt;div&gt;根据box中点坐标center_、box半长半宽half_length_和half_width_、以及朝向角正余弦sin_heading_和cos_heading_，得到四个角点的xy坐标，并初始化成员corners_&lt;/div&gt;&lt;div&gt;遍历四个角点的xy坐标，初始化成员max_x_、min_x_、max_y_、min_y_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-3" vertex="1">
          <mxGeometry y="492" width="650" height="88" as="geometry" />
        </mxCell>
        <mxCell id="lMj8OGBns-KE9BoQN-sZ-5" value="+CrossProd(const Vec2d &amp;amp;start_point,&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const Vec2d &amp;amp;end_point_1,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                 &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; const Vec2d &amp;amp;end_point_2)：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;向量1 =&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_1，向量2 =&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_point到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;end_point_2，计算向量1叉乘向量2的结果，返回计算结果&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="CUjre2yNhRqGTGJxgn0P-20" vertex="1">
          <mxGeometry x="60" y="260" width="660" height="70" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PredictedTrajectory.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/Prediction/prediction_feature.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-2170" y="6296" width="610" height="78" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;repeated&amp;nbsp;trajectory_point：&lt;span style=&quot;background-color: initial;&quot;&gt;TrajectoryPoint&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;轨迹点序列&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="rk9EUoU1usLiAAr8AsL7-2" vertex="1">
          <mxGeometry y="44" width="610" height="26" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="rk9EUoU1usLiAAr8AsL7-2" vertex="1">
          <mxGeometry y="70" width="610" height="8" as="geometry" />
        </mxCell>
        <mxCell id="rk9EUoU1usLiAAr8AsL7-6" value="" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="bZs9VvthoLb4ROwhrg8k-1" target="rk9EUoU1usLiAAr8AsL7-2" edge="1">
          <mxGeometry x="-0.7681" y="-9" relative="1" as="geometry">
            <mxPoint x="-1510" y="6110" as="sourcePoint" />
            <mxPoint x="-1350" y="6110" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UjVsXSmvedPTqeaRI4AV-1" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;" parent="1" source="VXBDi3d1ndRj7hIO50mS-36" target="6aikKVBvCmk6lyRLQm6R-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="12230" y="2701.3" as="sourcePoint" />
            <mxPoint x="12170" y="2811.3" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-2" value="&lt;span style=&quot;text-align: left;&quot;&gt;STDrivableBoundaryInstance.proto&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;output/x86/common/proto/Planning/st_drivable_boundary.proto&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=48;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2080" y="2504" width="430" height="168" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;t：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//时刻t&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;s_lower&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//s最小边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;s_upper&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//s最大边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;v_obs_lower&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//v最小边界&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;v_obs_upper&lt;span style=&quot;background-color: initial;&quot;&gt;：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//v最大边界&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ij4zbepNZsP-9KusLaYB-2" vertex="1">
          <mxGeometry y="48" width="430" height="112" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Ij4zbepNZsP-9KusLaYB-2" vertex="1">
          <mxGeometry y="160" width="430" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-6" value="&lt;span style=&quot;text-align: left;&quot;&gt;STDrivableBoundary.proto&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;output/x86/common/proto/Planning/st_drivable_boundary.proto&lt;/span&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2040" y="2279" width="510" height="88" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-7" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;repeated&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;st_boundary：&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;STDrivableBoundaryInstance&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Ij4zbepNZsP-9KusLaYB-6" vertex="1">
          <mxGeometry y="44" width="510" height="36" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Ij4zbepNZsP-9KusLaYB-6" vertex="1">
          <mxGeometry y="80" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-10" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="jmzA_E2FORbxOF1XWL5z-10" target="Ij4zbepNZsP-9KusLaYB-6" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="1630" y="2400" as="sourcePoint" />
            <mxPoint x="1790" y="2400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Ij4zbepNZsP-9KusLaYB-11" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="Ij4zbepNZsP-9KusLaYB-6" target="Ij4zbepNZsP-9KusLaYB-2" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="2090" y="2832" as="sourcePoint" />
            <mxPoint x="2250" y="2832" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="P_6vMrEEreLB0DkDZbim-3" value="&lt;span style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 30px;&quot;&gt;ST_BOUNDS_DECIDER&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=1;collapsible=0;width=550;strokeWidth=4;height=102;" parent="1" vertex="1">
          <mxGeometry x="11400" y="541.3" width="4730" height="5814.35" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-1" value="SpeedLimit" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="P_6vMrEEreLB0DkDZbim-3" vertex="1">
          <mxGeometry x="20" y="2520" width="730" height="130" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-2" value="-speed_limit_points_：std::vector&amp;lt;std::pair&amp;lt;double, double&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;速度限制点序列，&lt;div&gt;每个路径点上存储一个速度限值点，pair&amp;lt;距离路径起点的弧长s，在该路径点处的速度限值v&amp;gt;，表示距离起点s处的速度限值为v&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-1" vertex="1">
          <mxGeometry y="26" width="730" height="44" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6aikKVBvCmk6lyRLQm6R-1" vertex="1">
          <mxGeometry y="70" width="730" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6aikKVBvCmk6lyRLQm6R-4" value="+AppendSpeedLimit(const double s, const double v)：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;向成员speed_limit_points_的末尾推入一个新的速度限值点" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-1" vertex="1">
          <mxGeometry y="78" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-3" value="+GetSpeedLimitByS(const double s) const：double&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;获取输入s处的成员speed_limit_points_中对应速度限制点的速度限值v" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6aikKVBvCmk6lyRLQm6R-1" vertex="1">
          <mxGeometry y="104" width="730" height="26" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;VehicleParameter.proto&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;thirdparty/x86/common/proto/common/hardware_config.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=44;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-6260" y="1600" width="570" height="918" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    float wheelbase = 1;        /*!&amp;lt; 轴距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeltrackF = 2;      /*!&amp;lt; 前轮距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeltrackR = 3;       /*!&amp;lt; 后轮距 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overhangF = 4;        /*!&amp;lt; 前悬 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overhangR = 5;        /*!&amp;lt; 后悬 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheeldiameter = 6;    /*!&amp;lt; 轮径 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float wheelwidth = 7;       /*!&amp;lt; 轮宽 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overalllength = 8;      /*!&amp;lt; 外廓长 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overallwidth = 9;       /*!&amp;lt; 外廓宽（加后视镜） 单位m or 最大车宽*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float overallhigh = 10;       /*!&amp;lt; 外廓高 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float minturningradius = 11;  /*!&amp;lt; 最小转弯半径 单位m */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float maxgradeability = 12;   /*!&amp;lt; 最大爬坡度 单位% */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float maxsteeringangle = 13;  /*!&amp;lt; 最大方向盘转角 单位rad */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float front_edge_to_center = 14;  /*!&amp;lt; 后轴中心到车头的距离(前杠前边缘) 单位m,以下类似 */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rear_edge_to_center = 15;   &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float left_edge_to_center = 16;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float right_edge_to_center = 17;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_abs_speed_when_stopped = 18;  /*!&amp;lt; 刹停前能够检测到的最大速度 单位m/s */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_acceleration = 19;   /*!&amp;lt; 最大加速度 单位m/s^2 正数*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_deceleration = 20;   /*!&amp;lt; 最大减速度 单位m/s^2 正数*/&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_steer_angle_rate = 21;   /*!&amp;lt; 方向盘最大转角速率 单位rad/s */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float steer_ratio = 22;     /*!&amp;lt; 方向盘与前轮转角传动比*/ &lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float char_spd_ms = 23;    //车辆特征车速&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float front_axle_to_center_m = 24;   //前轴距到车辆质心距离&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float height_m = 25;    //地面到车顶高度Z向位置&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rear_axle_to_center_m = 26;    //后轴到车辆质心的X向位置&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float side_slip_angle_factor = 27;    //侧滑角系数&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float vehicle_width_min_m = 28;    //最小车宽&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float weight_N = 29;    //车重&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float empty_mass_kg = 30;    //空载&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float gvm_kg = 31;    //满载&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float curb_kg = 32;    //整备质量&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float frontwheel_cornering_stiffness = 33; //前轮侧偏刚度 单位N/rad&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float rearwheel_cornering_stiffness = 34; //后轮侧偏刚度 单位N/rad&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float I_z = 35; //横摆转动惯量 单位 kg*m^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float centroid_height = 36;  // 车辆质心高度 mm&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_velocity = 37;     // 最大车速 单位m/s;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_lateral_acceleration = 38; // 车辆最大横向加速度 单位m/s^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_lateral_deceleration = 39; // 车辆最大横向减速度 单位m/s^2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_yaw_rate = 40;  // 车辆最大横摆角速度 单位rad/s&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float fourwheel_load = 41; // 四轮载荷 单位kg&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float throttle_dead_zone = 42; //油门死区 百分比表示 单位%&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float brake_dead_zone = 43; //制动死区 m/s2&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float min_ground_clearance = 44; //最小离地间隙 单位m&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    float max_grade_parking = 45; //驻车最大爬坡度 单位rad a&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="bWbOV08Y-2g22h77-D9F-8" vertex="1">
          <mxGeometry y="44" width="570" height="866" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-10" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="bWbOV08Y-2g22h77-D9F-8" vertex="1">
          <mxGeometry y="910" width="570" height="8" as="geometry" />
        </mxCell>
        <mxCell id="bWbOV08Y-2g22h77-D9F-12" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="VXBDi3d1ndRj7hIO50mS-42" target="bWbOV08Y-2g22h77-D9F-8" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-5040" y="2310" as="sourcePoint" />
            <mxPoint x="-5315" y="1970" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HDrurHy2PYQZifVqQkit-2" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ObstacleCautionInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;history.h&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=45;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="330" y="6850" width="290" height="197" as="geometry" />
        </mxCell>
        <mxCell id="HDrurHy2PYQZifVqQkit-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;struct {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  bool is_caution = false;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double prob = 1.0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double perception_prob = 1.0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double intenion_prob = 1.0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  double history_prob = 1.0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;};&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="HDrurHy2PYQZifVqQkit-2" vertex="1">
          <mxGeometry y="45" width="290" height="144" as="geometry" />
        </mxCell>
        <mxCell id="HDrurHy2PYQZifVqQkit-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="HDrurHy2PYQZifVqQkit-2" vertex="1">
          <mxGeometry y="189" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="HDrurHy2PYQZifVqQkit-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="6aikKVBvCmk6lyRLQm6R-30" target="HDrurHy2PYQZifVqQkit-2" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-190" y="6750" as="sourcePoint" />
            <mxPoint x="90" y="6750" as="targetPoint" />
            <Array as="points">
              <mxPoint x="260" y="6830" />
              <mxPoint x="260" y="6950" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-1" value="Vec2d" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="16795" y="2890" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="yS3iJQVPmNXREE4WV7Ys-1" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="yS3iJQVPmNXREE4WV7Ys-1" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-4" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="yS3iJQVPmNXREE4WV7Ys-1" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-7" value="SpeedObstacleDecider" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3630" y="120" width="1850" height="690" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-8" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-adc_low_road_right_segments_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车path低路权段&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-adc_high_road_right_segments_：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::vector&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车path高路权段&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="yS3iJQVPmNXREE4WV7Ys-7" vertex="1">
          <mxGeometry y="26" width="1850" height="54" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="yS3iJQVPmNXREE4WV7Ys-7" vertex="1">
          <mxGeometry y="80" width="1850" height="8" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+Process(Frame* frame, ReferenceLineInfo* reference_line_info) override：Status&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.异常保护&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.1.若输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info成员path_data_成员discretized_path_中存储的路径点为空，说明前面task未成功生成路径点，返回错误状态&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.2.调用成员函数&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;InitPathPointRoadRight，初始化成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_low_road_right_segments_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;adc_high_road_right_segments_，若初始化失败，返回错误状态，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="yS3iJQVPmNXREE4WV7Ys-7" vertex="1">
          <mxGeometry y="88" width="1850" height="410" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-12" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+InitPathPointRoadRight(ReferenceLineInfo* reference_line_info)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算自车路径点路权，返回是否成功生成自车路径高低路权段标志位&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.异常保护&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算路径起始点的xy坐标，创建Vec2d类型局部变量init_point，使用输入&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员path_data_的成员discretized_path_的第一个点的xy坐标初始化init_point&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;调用输入&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员函数GetNearstLane，寻找&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_line_info的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reference_lines_中投影点距离&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point法向距离(l方向)最近的参考线，若查找失败，返回false，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;自车路径起始点init_point&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;创建ReferenceLine类型局部变量nearest_lane，用于存储&lt;span style=&quot;background-color: initial;&quot;&gt;全部参考线中到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point的&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;法向距离最小的那条参考线&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建double类型局部变量nearest_s、nearest_l，用于存储&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;init_point到&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;nearest_lane投影点的s和两点间的法向距离&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="yS3iJQVPmNXREE4WV7Ys-7" vertex="1">
          <mxGeometry y="498" width="1850" height="192" as="geometry" />
        </mxCell>
        <mxCell id="yS3iJQVPmNXREE4WV7Ys-11" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;" parent="1" source="yS3iJQVPmNXREE4WV7Ys-7" target="x43RHuNwQAWLNvNylpUT-15" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="5270" y="-50" as="sourcePoint" />
            <mxPoint x="5430" y="-50" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-2" value="SpeedObstacleDecider" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5600" y="120" width="1520" height="1236" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-8" value="-struct CruiseAreaInfo{&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;polygon_points：std::vector&amp;lt;math::Vec2d&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Vec2d存储各区域的长度(用s坐标表示，从自车的sl边界的start_s起)和宽度&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;类型成员&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="26" width="1520" height="74" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-cruise_info_：&lt;span style=&quot;background-color: initial;&quot;&gt;CruiseAreaInfo&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;巡航区域信息&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="100" width="1520" height="34" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;-middle_obstacle_            = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;巡航状态下的主障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;-lc_own_middle_obstacle_     = nullptr：&lt;span style=&quot;background-color: initial;&quot;&gt;Obstacle*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;换道状态下的主障碍物&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="134" width="1520" height="66" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="200" width="1520" height="8" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;+Process(Frame* frame, ReferenceLineInfo* reference_line_info) override：Status&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.对当前巡航场景进行区域划分，调用成员函数UpdateCruiseInfo，初始化成员cruise_info_&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2.一些初始化操作&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;2.1.创建局部变量sorted_obst_ids，调用成员reference_line_info_的成员path_decision_的成员函数GetSortedObstacles，对&lt;span style=&quot;background-color: initial;&quot;&gt;path_decision_的全部障碍物成员obstacles_按start_s从小到大排序，并返回排好序的障碍物id序列&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.2.创建SLPoint类型局部变量&lt;/span&gt;start_point_sl，存储规划起始点在frenet坐标系下的sl坐标&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.遍历步骤2.1中的局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sorted_obst_ids中的各障碍物id，调用成员reference_line_info_的成员path_decision_的成员函数Find，找到指向该id对应的障碍物对象的指针obs_ptr；初始化滤除信息，创建string类型局部变量ignore_tag，存储滤除原因&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.一些需要continue的情况，不需要打ignore标签&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3.1.1.obs_ptr为空，未找到障碍物&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3.1.2.obs_ptr的成员&lt;span style=&quot;background-color: initial;&quot;&gt;longitudinal_decision_和lateral_decision_都为ignore，说明障碍物已经被滤除，无需额外判定，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;(需要确定pod会打上纵向忽略标签？)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3.1.3.obs_ptr的成员is_virtual_为true，表示障碍物为虚拟障碍物(红绿灯停止线、停止点等，在&lt;span style=&quot;background-color: initial;&quot;&gt;RULE_BASED_STOP_DECIDER中生成&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)，无需滤除&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.1.4.调用成员函数&lt;/span&gt;SafeDrivingAreaFilter，判断障碍物的预测轨迹是否侵入参考线，若未侵入不对该障碍物进行滤除，函数输入为：&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;步骤3中的obs_ptr、ignore_tag&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;步骤2.2中的规划起始点&lt;span style=&quot;background-color: initial;&quot;&gt;start_point_sl&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建STBoundary类型局部变量&lt;/span&gt;obs_safe_driving_st_boundary，用于存储obs_ptr基于参考线的st边界&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;3.1.5.若障碍物为静态障碍物，调用成员函数&lt;span style=&quot;background-color: initial;&quot;&gt;StaticObstacleFilter对静态障碍物进行滤除，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;步骤3中的obs_ptr、ignore_tag&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="208" width="1520" height="410" as="geometry" />
        </mxCell>
        <mxCell id="4piNhy_gB7S-zRb03onw-7" value="-UpdateCruiseInfo()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新巡航区域信息，对成员cruise_info_赋值&lt;div&gt;1.调用成员函数CalculateFreeSpaceS，对成员&lt;span style=&quot;background-color: initial;&quot;&gt;middle_obstacle_赋值，并&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;计算middle障碍物的freespace_s，写入局部变量&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;freespace_s&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2.调用成员reference_line_info_的成员函数IsChangeLanePath，判断当前是否处于换道，若是，调用成员函数CalculateLcMidObs，&lt;span style=&quot;background-color: initial;&quot;&gt;对成员&lt;/span&gt;lc_own_middle_obstacle_&lt;span style=&quot;background-color: initial;&quot;&gt;赋值&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.更新成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_info_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="618" width="1520" height="92" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-2" value="-CalculateFreeSpaceS()：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;遍历成员reference_line_info_的成员path_decision_的成员sorted_obstacle_ids_，找到自车巡航时的主障碍物，并写入成员middle_obstacle_，返回&lt;span style=&quot;background-color: rgb(204, 204, 0);&quot;&gt;自车到主障碍物之间的距离称为freespace距离&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="710" width="1520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-5" value="-CalculateLcMidObs()：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算自车变道时的主障碍物，写入成员lc_own_middle_obstacle_" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="736" width="1520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-9" value="-SafeDrivingAreaFilter(Obstacle* obs_ptr,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;std::stringstream&amp;amp; ignore_tag,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物滤除原因字符串，存储该函数对障碍物滤除的原因字符串&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;const SLPoint start_point_sl,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入，规划起始点的sl坐标&lt;/div&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;STBoundary&amp;amp; obs_safe_driving_st_boundary)：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//存储障碍物在安全行驶空间上的投影(基于参考线的st边界)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回是否需要滤除标志位&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;障碍物筛选逻辑，滤除和自车安全行驶空间完全没有冲突的障碍物，同时构造障碍物在安全行驶空间上的投影(即障碍物轨迹在基于参考线的st边界)&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;1.调用输入obs_ptr的成员函数BuildSafeDrivingAreaStBoundary，构建obs_ptr在参考线上的st边界赋给&lt;span style=&quot;background-color: initial;&quot;&gt;obs_ptr的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，函数输入：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;成员reference_line_info_的成员reference_line_&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;输入&lt;span style=&quot;background-color: initial;&quot;&gt;start_point_sl的成员s和l&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.读取obs_ptr的成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;safe_driving_st_boundary_&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;若obs_ptr的成员safe_driving_st_boundary_为空，表示障碍物的预测轨迹未侵入到参考线，调用成员函数SetIgnoreDecision打上滤除标签&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="762" width="1520" height="228" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-16" value="-StaticObstacleFilter(Obstacle* obs_ptr,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//输入障碍物&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; std::stringstream&amp;amp; ignore_tag)：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;//存储障碍物滤除原因字符串，存储该函数对障碍物滤除的原因字符串&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//返回障碍物是否需要滤除&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;根据成员&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cruise_info_划分的区域，对静态障碍物进行滤除，主要是针对在主障碍物前方且置信度较低的障碍物进行滤除&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;todo：逻辑待详细&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="990" width="1520" height="110" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-17" value="-ObstacleSTVarianceCompute(Obstacle* obs_ptr) const：void&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计算障碍物碰撞点st的方差" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="1100" width="1520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-18" value="-LaneChangeObsFilter(Obstacle* obs_ptr,&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;                                                &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; std::stringstream&amp;amp; ignore_tag)：&lt;span style=&quot;background-color: initial;&quot;&gt;std&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;::&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pair&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="1126" width="1520" height="84" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-19" value="-GenerateLaneChangeObsSoftDecision2(Obstacle* obs_ptr, std::stringstream&amp;amp; ignore_tag)：bool&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="4piNhy_gB7S-zRb03onw-2" vertex="1">
          <mxGeometry y="1210" width="1520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-10" value="SLPoint.proto&lt;div&gt;/thirdparty/x86/common/proto/Planning/pnc_point.proto&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=42;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-1900" y="7438" width="370" height="98" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-11" value="s：double&lt;div&gt;l：double&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="j0q7LuWI4dJPuCiQaciy-10" vertex="1">
          <mxGeometry y="42" width="370" height="48" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="j0q7LuWI4dJPuCiQaciy-10" vertex="1">
          <mxGeometry y="90" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="j0q7LuWI4dJPuCiQaciy-15" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="LCVE5efHLrpg4gtOeXXL-2" target="j0q7LuWI4dJPuCiQaciy-10" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1790" y="7750" as="sourcePoint" />
            <mxPoint x="-1630" y="7750" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="aF4MokWy7YjLglkF-9_H-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;" parent="1" source="vT7Xdxdd8HU9_829ViZ7-1" target="APxx2EGmygYpqpyiRNHT-1" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="-1250" y="-1510" as="sourcePoint" />
            <mxPoint x="-1090" y="-1510" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="wTaP41GsPqQqZ1ouET2W" name="第 3 页">
    <mxGraphModel dx="2162" dy="1375" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="WQnH06YZESqSx0yZWxb4-1" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="380" y="660" as="sourcePoint" />
            <mxPoint x="380" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-2" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="470" y="660" as="sourcePoint" />
            <mxPoint x="470" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-3" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="290" y="660" as="sourcePoint" />
            <mxPoint x="290" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-6" value="obs" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="303" y="160" width="60" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-10" value="adc" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="396" y="500" width="60" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-11" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#FF0000;strokeWidth=3;" parent="1" source="WQnH06YZESqSx0yZWxb4-12" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="540" y="480" as="sourcePoint" />
            <mxPoint x="426" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-28" value="规划path" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-11" vertex="1" connectable="0">
          <mxGeometry x="0.5878" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-13" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#FF0000;strokeWidth=3;" parent="1" source="WQnH06YZESqSx0yZWxb4-10" target="WQnH06YZESqSx0yZWxb4-12" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="426" y="500" as="sourcePoint" />
            <mxPoint x="426" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-12" value="adc_comp" style="rounded=0;whiteSpace=wrap;html=1;dashed=1;dashPattern=12 12;" parent="1" vertex="1">
          <mxGeometry x="396" y="160" width="60" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-14" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="WQnH06YZESqSx0yZWxb4-6" target="WQnH06YZESqSx0yZWxb4-12" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="330" y="370" as="sourcePoint" />
            <mxPoint x="380" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-15" value="delta_l" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-14" vertex="1" connectable="0">
          <mxGeometry x="-0.2208" y="1" relative="1" as="geometry">
            <mxPoint x="-56" y="-144" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-16" value="" style="endArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="310" y="90" as="sourcePoint" />
            <mxPoint x="370" y="210" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-30" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="820" y="660" as="sourcePoint" />
            <mxPoint x="820" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-31" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="910" y="660" as="sourcePoint" />
            <mxPoint x="910" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-32" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="730" y="660" as="sourcePoint" />
            <mxPoint x="730" y="70" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-33" value="bus" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="743" y="100" width="60" height="190" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-34" value="adc" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="836" y="500" width="60" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-35" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#FF0000;strokeWidth=3;" parent="1" source="WQnH06YZESqSx0yZWxb4-38" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="980" y="480" as="sourcePoint" />
            <mxPoint x="866" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-36" value="规划path" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-35" vertex="1" connectable="0">
          <mxGeometry x="0.5878" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-37" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#FF0000;strokeWidth=3;" parent="1" source="WQnH06YZESqSx0yZWxb4-34" target="WQnH06YZESqSx0yZWxb4-38" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="866" y="500" as="sourcePoint" />
            <mxPoint x="866" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-38" value="adc_comp" style="rounded=0;whiteSpace=wrap;html=1;dashed=1;dashPattern=12 12;" parent="1" vertex="1">
          <mxGeometry x="836" y="160" width="60" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-39" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;exitX=1.001;exitY=0.663;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="WQnH06YZESqSx0yZWxb4-33" target="WQnH06YZESqSx0yZWxb4-38" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="770" y="370" as="sourcePoint" />
            <mxPoint x="820" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-40" value="delta_l" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-39" vertex="1" connectable="0">
          <mxGeometry x="-0.2208" y="1" relative="1" as="geometry">
            <mxPoint x="34" y="-195" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-41" value="" style="endArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="830" y="40" as="sourcePoint" />
            <mxPoint x="810" y="210" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-42" value="" style="endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" target="WQnH06YZESqSx0yZWxb4-33" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="640" y="290" as="sourcePoint" />
            <mxPoint x="680" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-43" value="" style="endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" target="WQnH06YZESqSx0yZWxb4-34" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="650" y="500" as="sourcePoint" />
            <mxPoint x="783" y="500" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-44" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="690" y="500" as="sourcePoint" />
            <mxPoint x="690" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-45" value="s = 100m" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=17;" parent="WQnH06YZESqSx0yZWxb4-44" vertex="1" connectable="0">
          <mxGeometry x="0.1114" y="1" relative="1" as="geometry">
            <mxPoint x="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-46" value="v_obs = 0m/s" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="723" y="70" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-47" value="v_adc" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="836" y="630" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-48" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1450" y="302.5" as="sourcePoint" />
            <mxPoint x="1640" y="303" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-49" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1450" y="360" as="sourcePoint" />
            <mxPoint x="1640" y="360.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-50" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1450" y="420" as="sourcePoint" />
            <mxPoint x="1640" y="420.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-54" value="" style="group;rotation=-90;" parent="1" vertex="1" connectable="0">
          <mxGeometry x="1220" y="540" width="190" height="130" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-51" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="WQnH06YZESqSx0yZWxb4-54" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="36" y="154" as="sourcePoint" />
            <mxPoint x="37" y="-36" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-52" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="WQnH06YZESqSx0yZWxb4-54" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="94" y="154" as="sourcePoint" />
            <mxPoint x="94" y="-36" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-53" value="" style="endArrow=none;html=1;rounded=0;strokeWidth=5;" parent="WQnH06YZESqSx0yZWxb4-54" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="154" y="154" as="sourcePoint" />
            <mxPoint x="154" y="-36" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-55" value="adc" style="rounded=0;whiteSpace=wrap;html=1;" parent="WQnH06YZESqSx0yZWxb4-54" vertex="1">
          <mxGeometry x="104" y="24" width="40" height="70" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-65" value="v_adc" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="WQnH06YZESqSx0yZWxb4-54" vertex="1">
          <mxGeometry x="94" y="100" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-56" value="obs" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1470" y="440" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-57" value="" style="curved=1;endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endFill=0;strokeColor=#FF0000;strokeWidth=3;" parent="1" source="WQnH06YZESqSx0yZWxb4-55" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1260" y="440" as="sourcePoint" />
            <mxPoint x="1580" y="390" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1340" y="460" />
              <mxPoint x="1410" y="390" />
              <mxPoint x="1500" y="390" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-70" value="规划path" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-57" vertex="1" connectable="0">
          <mxGeometry x="0.906" y="1" relative="1" as="geometry">
            <mxPoint x="28" y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-58" value="adc_comp" style="rounded=0;whiteSpace=wrap;html=1;rotation=90;" parent="1" vertex="1">
          <mxGeometry x="1483" y="355" width="40" height="70" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-60" value="" style="endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" target="WQnH06YZESqSx0yZWxb4-55" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1270" y="564" as="sourcePoint" />
            <mxPoint x="1290" y="540" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-61" value="" style="endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" target="WQnH06YZESqSx0yZWxb4-58" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1468" y="320" as="sourcePoint" />
            <mxPoint x="1394" y="310" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-62" value="" style="curved=1;endArrow=classic;html=1;rounded=0;startArrow=classic;startFill=1;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1290" y="560" as="sourcePoint" />
            <mxPoint x="1470" y="340" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1280" y="420" />
              <mxPoint x="1380" y="340" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-63" value="s = 60m" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="WQnH06YZESqSx0yZWxb4-62" vertex="1" connectable="0">
          <mxGeometry x="0.0278" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-64" value="v_obs = 0m/s" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1500" y="440" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-66" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1480" y="440" as="sourcePoint" />
            <mxPoint x="1480" y="410" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-67" value="" style="endArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1420" y="480" as="sourcePoint" />
            <mxPoint x="1470" y="430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WQnH06YZESqSx0yZWxb4-68" value="delta_l" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1390" y="480" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-1" target="n-xvwTpzIlfdgSLB9OlB-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-1" value="开始" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="603" y="860" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-2" target="n-xvwTpzIlfdgSLB9OlB-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-8" value="N" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="n-xvwTpzIlfdgSLB9OlB-5" vertex="1" connectable="0">
          <mxGeometry x="-0.3429" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-2" target="n-xvwTpzIlfdgSLB9OlB-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-11" value="Y" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="n-xvwTpzIlfdgSLB9OlB-10" vertex="1" connectable="0">
          <mxGeometry x="-0.386" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-2" value="判断障碍物是否为static？" style="rhombus;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="556.5" y="1000" width="213" height="80" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-19" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-3" target="n-xvwTpzIlfdgSLB9OlB-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-3" target="n-xvwTpzIlfdgSLB9OlB-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-3" value="判断障碍物是否为vru？" style="rhombus;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="556.5" y="1130" width="213" height="80" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-9" value="return 0" style="whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="896" y="1010" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-18" value="return 0" style="whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="896" y="1140" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-23" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-20" target="n-xvwTpzIlfdgSLB9OlB-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-25" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-20" target="n-xvwTpzIlfdgSLB9OlB-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-20" value="判断障碍物是否oncoming？" style="rhombus;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="556.5" y="1290" width="213" height="80" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-22" value="return 0" style="whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="896" y="1300" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-27" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="n-xvwTpzIlfdgSLB9OlB-24" target="n-xvwTpzIlfdgSLB9OlB-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-24" value="判断感知障碍物与自车的横向间距&amp;gt;2.5m?" style="rhombus;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="516.25" y="1460" width="293.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="n-xvwTpzIlfdgSLB9OlB-26" value="return 0" style="whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="976.5" y="1470" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-1" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;EgoStatusInfo&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;自车状态&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=40;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="378.1199999999999" y="1680" width="330" height="100" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-2" value="导航转弯方向，from routing&lt;div&gt;路口信息，from routing&lt;/div&gt;&lt;div&gt;分合流信息，from routing&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="RhgR66SVGuNnRjoRSIZQ-1">
          <mxGeometry y="40" width="330" height="60" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-3" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;ScenarioDecisionDefinitionTag&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;场景识别标签，obstacle的属性&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=50;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="248.1199999999999" y="1830" width="590" height="126" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-4" value="obs相对于ego的运动关系，通过碰撞圆简化判碰算法，本质上还是计算stbound得到&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;FOLLOW、CROSS、ONCOMING_FOLLOW、ONCOMING_CUTIN、CUTIN、NEAR_INTERVENE&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="RhgR66SVGuNnRjoRSIZQ-3">
          <mxGeometry y="50" width="590" height="50" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-5" value="与ego构成的博弈场景" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="RhgR66SVGuNnRjoRSIZQ-3">
          <mxGeometry y="100" width="590" height="26" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-6" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-7" target="RhgR66SVGuNnRjoRSIZQ-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-7" value="识别各obs与自车构成的博弈场景&lt;div&gt;分为以下4种类型场景：路口内、非路口、分流、合流&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="995.1199999999999" y="1700" width="310" height="87" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-8" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="328.1199999999999" y="2020" width="430" height="228.98" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-9" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;edgeStyle=orthogonalEdgeStyle;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-7" target="RhgR66SVGuNnRjoRSIZQ-1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="985.6199999999999" y="2210" as="sourcePoint" />
            <mxPoint x="1145.62" y="2210" as="targetPoint" />
            <Array as="points">
              <mxPoint x="835.1199999999999" y="1720" />
              <mxPoint x="835.1199999999999" y="1720" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-10" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;edgeStyle=orthogonalEdgeStyle;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-7" target="RhgR66SVGuNnRjoRSIZQ-3">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="905.6199999999999" y="2150" as="sourcePoint" />
            <mxPoint x="526.6199999999999" y="2060" as="targetPoint" />
            <Array as="points">
              <mxPoint x="895.1199999999999" y="1770" />
              <mxPoint x="895.1199999999999" y="1870" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-11" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;edgeStyle=orthogonalEdgeStyle;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-5" target="RhgR66SVGuNnRjoRSIZQ-8">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="805.6199999999999" y="1970" as="sourcePoint" />
            <mxPoint x="426.6199999999999" y="1880" as="targetPoint" />
            <Array as="points">
              <mxPoint x="450.1199999999999" y="2090" />
              <mxPoint x="450.1199999999999" y="2090" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-12" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-13" target="RhgR66SVGuNnRjoRSIZQ-15">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1195.12" y="2030" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-13" value="选取博弈障碍物&lt;div&gt;满足以下条件障碍物进入game&lt;/div&gt;&lt;div&gt;1.类型为vru和car&lt;/div&gt;&lt;div&gt;3.相对于自车运动关系为cross、cutin、oncoming_cutin&lt;/div&gt;&lt;div&gt;4.剔除特定场景下的障碍物，根据场景识别标签以及obs与自车之间的位置及视野关系判断&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="994.8699999999999" y="1850" width="310.25" height="140" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-14" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-15" target="RhgR66SVGuNnRjoRSIZQ-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-15" value="自车轨迹采样&lt;div&gt;大部分情况在cur_a基础上±1m/s2，采样三条轨迹，递推6s&lt;/div&gt;&lt;div&gt;某些场景会调整a的偏移量，使博弈结果偏向yield&lt;/div&gt;&lt;div&gt;考虑speed_limit，不考虑a作用的时长&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="954.5999999999995" y="2040" width="391.01" height="90" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-16" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-17" target="RhgR66SVGuNnRjoRSIZQ-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-17" value="在每条自车采样轨迹下对game障碍物的运动轨迹采样，构建博弈矩阵&lt;div&gt;障碍物cur_a基础上±1m/s2，采样三条轨迹，递推6s，同时被预测轨迹长度限制&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="916.2999999999997" y="2180" width="467.63" height="60" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-18" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" edge="1" parent="1" source="RhgR66SVGuNnRjoRSIZQ-19" target="RhgR66SVGuNnRjoRSIZQ-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-19" value="计算交互过程&lt;div&gt;自车每条采样轨迹与obs每条采样轨迹构成轨迹对，stbound判碰算法计算交互点位置以及ego和obs到达交互点的t等信息，用于计算该轨迹对cost&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="947.5" y="2310" width="404.99" height="60" as="geometry" />
        </mxCell>
        <mxCell id="RhgR66SVGuNnRjoRSIZQ-20" value="计算cost&lt;div&gt;1.计算轨迹对cost，舒适(a)、安全(距离和ttc)、效率(obs和ego分别到达交互点的t的差值)&lt;br&gt;&lt;div&gt;2.固定自车采样轨迹，在这条ego轨迹上每个gameObs的各采样轨迹取cost最小作为该obs的optTraj，各障碍物的cost加和作为当前ego轨迹的总cost&lt;/div&gt;&lt;/div&gt;&lt;div&gt;3.在所有ego轨迹中取cost最小的作为博弈结果，按照对应的obs采样轨迹，只修改overtake障碍物的轨迹&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="890" y="2420" width="520" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="gHHWD7w1ctw2R_HZqqjR" name="cnap，mmt？">
    <mxGraphModel dx="1974" dy="3034" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-1" value="PlanningInter&lt;div&gt;planning集成基类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-56" y="-40" width="940" height="430" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-1" vertex="1">
          <mxGeometry y="40" width="940" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="7_ih2qJoLL3aSbnRqx0y-1" vertex="1">
          <mxGeometry y="66" width="940" height="8" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-4" value="+  virtual Init(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::string &amp;amp;planning_config_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，planning软件配置文件夹路径，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;所有配置文件都放在这个文件夹下&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const leap::adas::VehicleAdasParams &amp;amp;vehicle_params) = 0;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，自动驾驶系统所需车辆参数(未使用)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：&lt;span style=&quot;background-color: initial;&quot;&gt;leap::common::AlgErrorEnum&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// return，0成功，其他失败&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;纯虚函数，子类中重写&lt;/div&gt;&lt;div style=&quot;&quot;&gt;规划模块对象初始化&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-1" vertex="1">
          <mxGeometry y="74" width="940" height="116" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-13" value="+ virtual Run(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;leap::planning::PlanningInfo &amp;amp;planning_info,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，规划算法输入&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::planning::ComfortMotion &amp;amp;comfortmotion_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// out，规划算法输出(行车控车数据)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::planning::Warning &amp;amp;warning_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(报警数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::oddfencemanager::OddFenceReportInfo &amp;amp;oddfencereport_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(odd围栏上报数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::parkingplanning::ParkingMotion &amp;amp;parkingmotion_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(泊车控车数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::hmidisplay::ComfortMotion_HMI &amp;amp;comformotion_hmi,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(行车hmi显示数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::hmidisplay::ParkingMotion_HMI &amp;amp;parkingmotion_hmi,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(泊车hmi显示数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::visualization::PlanningDebug &amp;amp;planning_visual_output) = 0;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(planning可视化数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：&lt;span style=&quot;background-color: initial;&quot;&gt;leap::common::AlgErrorEnum&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// return，0成功，其他失败&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;纯虚函数，子类中重写&lt;/div&gt;&lt;div style=&quot;&quot;&gt;规划模块处理函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-1" vertex="1">
          <mxGeometry y="190" width="940" height="240" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PlanningImpl : public PlanningInter&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;planning实现类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-47" y="595" width="920" height="460" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-6" value="- planning_core_：std::unique_ptr&amp;lt;leap::PilotPlanning::PlanningCore&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划算法核" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-5" vertex="1">
          <mxGeometry y="50" width="920" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="7_ih2qJoLL3aSbnRqx0y-5" vertex="1">
          <mxGeometry y="76" width="920" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-3" value="+  virtual Init(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::string &amp;amp;planning_config_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，planning软件配置文件夹路径，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;所有配置文件都放在这个文件夹下&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const leap::adas::VehicleAdasParams &amp;amp;vehicle_params) = 0;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，自动驾驶系统所需车辆参数(未使用)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：&lt;span style=&quot;background-color: initial;&quot;&gt;leap::common::AlgErrorEnum&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// return，0成功，其他失败&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;纯虚函数，子类中重写&lt;/div&gt;&lt;div style=&quot;&quot;&gt;规划模块对象初始化&lt;/div&gt;&lt;div style=&quot;&quot;&gt;实例化PlanningCore，并将指针赋给planning_core_。调用Init函数对planning_core_进行初始化&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-5" vertex="1">
          <mxGeometry y="84" width="920" height="136" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-4" value="+ virtual Run(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;leap::planning::PlanningInfo &amp;amp;planning_info,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，规划算法输入&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::planning::ComfortMotion &amp;amp;comfortmotion_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// out，规划算法输出(行车控车数据)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::planning::Warning &amp;amp;warning_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(报警数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::oddfencemanager::OddFenceReportInfo &amp;amp;oddfencereport_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(odd围栏上报数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::parkingplanning::ParkingMotion &amp;amp;parkingmotion_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(泊车控车数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::hmidisplay::ComfortMotion_HMI &amp;amp;comformotion_hmi,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(行车hmi显示数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::hmidisplay::ParkingMotion_HMI &amp;amp;parkingmotion_hmi,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(泊车hmi显示数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::visualization::PlanningDebug &amp;amp;planning_visual_output) = 0;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(planning可视化数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：&lt;span style=&quot;background-color: initial;&quot;&gt;leap::common::AlgErrorEnum&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// return，0成功，其他失败&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;纯虚函数，子类中重写&lt;/div&gt;&lt;div style=&quot;&quot;&gt;规划模块处理函数&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-5" vertex="1">
          <mxGeometry y="220" width="920" height="240" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-9" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;enum AlgErrorEnum:uint8_t&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;函数返回状态coding&lt;/div&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=50;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-580" y="110" width="270" height="204" as="geometry" />
        </mxCell>
        <mxCell id="7_ih2qJoLL3aSbnRqx0y-10" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;  ALG_SUCCESS                 = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_INVALID_INPUT     = 1,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_INVALID_POINTER   = 2,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_MEMORY_ALLOCATION = 3,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_INITIALIZATION    = 4,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_INFER_ERROR       = 5,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  ALG_ERROR_OTHER             = 99,&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="7_ih2qJoLL3aSbnRqx0y-9" vertex="1">
          <mxGeometry y="50" width="270" height="154" as="geometry" />
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-1" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;fontSize=12;curved=1;" parent="1" source="7_ih2qJoLL3aSbnRqx0y-5" target="7_ih2qJoLL3aSbnRqx0y-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-140" y="570" as="sourcePoint" />
            <mxPoint x="20" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-2" value="PlanningCore&lt;div&gt;规划算法核&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=41;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1040" y="550" width="830" height="654" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-20" value="- nop_counter_：int&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;计数器，记录当前运行了多少帧" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="voPVXGpHxfX2aqVi8FJQ-2">
          <mxGeometry y="41" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-25" value="-&amp;nbsp;interval_time_ms_ = 0.0：double" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="voPVXGpHxfX2aqVi8FJQ-2">
          <mxGeometry y="67" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-24" value="-&amp;nbsp;elapsed_time_ms_&amp;nbsp;= 0.0：double" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="voPVXGpHxfX2aqVi8FJQ-2">
          <mxGeometry y="93" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-26" value="-&amp;nbsp;process_start_timestamp_&amp;nbsp;= 0：uint64_t" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="voPVXGpHxfX2aqVi8FJQ-2">
          <mxGeometry y="119" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-21" value="-&amp;nbsp;process_end_timestamp_&amp;nbsp;= 0：uint64_t" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="voPVXGpHxfX2aqVi8FJQ-2">
          <mxGeometry y="145" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-7" value="-&amp;nbsp;planning_engine_ = nullptr：std::unique_ptr&amp;lt;leap::PilotPlanning::PlanningEngine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="voPVXGpHxfX2aqVi8FJQ-2" vertex="1">
          <mxGeometry y="171" width="830" height="26" as="geometry" />
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="voPVXGpHxfX2aqVi8FJQ-2" vertex="1">
          <mxGeometry y="197" width="830" height="8" as="geometry" />
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-5" value="+ PlanningCore()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;实例化PlanningEngine，并将指针赋给成员planning_engine_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="voPVXGpHxfX2aqVi8FJQ-2" vertex="1">
          <mxGeometry y="205" width="830" height="49" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-1" value="+&amp;nbsp;Init(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;const std::string &amp;amp;planning_config_path,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，planning软件配置文件夹路径&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;所有配置文件都放在这个文件夹下&lt;/span&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;            &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;const leap::adas::VehicleAdasParams &amp;amp;vehicle_params)&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，自动驾驶系统所需车辆参数(未使用)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// return，true成功，false失败&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1.初始化规划配置参数类LPPlanningConfig&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;创建&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;LPPlanningConfig类单例，写入所有配置文件所在文件夹路径&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;调用LPPlanningConfig的配置加载函数load_config完成配置加载&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2.写入是否开启仿真模式&lt;/div&gt;&lt;div style=&quot;&quot;&gt;从LPPlanningConfig读取仿真开关配置值，写入仿真开关行为类SimulationMode&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3.&lt;span style=&quot;background-color: initial;&quot;&gt;实例化规划器类PlanningEngine，指针赋给成员planning_engine_&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="voPVXGpHxfX2aqVi8FJQ-2" vertex="1">
          <mxGeometry y="254" width="830" height="230" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-2" value="+ ProcessOnce(&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;leap::planning::PlanningInfo &amp;amp;comfortmotion_input,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;// in，规划算法输入&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;leap::planning::ComfortMotion &amp;amp;comfortmotion_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(行车控车数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::planning::Warning &amp;amp;warning_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(报警数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::oddfencemanager::OddFenceReportInfo &amp;amp;oddfencereport_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(odd围栏上报数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::hmidisplay::ComfortMotion_HMI &amp;amp;hmi_output,&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(行车hmi显示数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;leap::visualization::PlanningDebug &amp;amp;planning_visual_output)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// out，规划算法输出(planning可视化数据)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;：&lt;span style=&quot;background-color: initial;&quot;&gt;leap::common::AlgErrorEnum&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;// return，0成功，其他失败&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;单帧规划处理函数&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="voPVXGpHxfX2aqVi8FJQ-2" vertex="1">
          <mxGeometry y="484" width="830" height="170" as="geometry" />
        </mxCell>
        <mxCell id="voPVXGpHxfX2aqVi8FJQ-9" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="7_ih2qJoLL3aSbnRqx0y-5" target="voPVXGpHxfX2aqVi8FJQ-2" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="1040" y="680" as="sourcePoint" />
            <mxPoint x="1200" y="680" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-5" value="LPPlanningConfig&lt;div&gt;规划配置参数单例类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1150" y="-1020" width="770" height="600" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-5" value="&lt;div&gt;存储文件/文件夹路径的成员&lt;/div&gt;+&amp;nbsp;planning_config_path = &quot;null&quot;：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;planning软件配置文件夹路径&lt;span style=&quot;background-color: initial;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;所有配置文件都放在这个文件夹下&lt;/span&gt;&lt;div&gt;+&amp;nbsp;common_param_config_path = &quot;null&quot;：std::string&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;通用参数文件路径，planning_params.json&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vehicle_parameter_config_path = &quot;null&quot;：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;整车参数文件路径，vehicle_parameter.json&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;planning_core_config_path&amp;nbsp;= &quot;null&quot;：std::string&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;规划核(算法)参数文件路径，cnap_planning_core_params.json&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;config_path&amp;nbsp;= &quot;null&quot;：std::string&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;nn_planner_config_path&amp;nbsp;= &quot;null&quot;：std::string&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;fake_sdmap_file_path&amp;nbsp;= &quot;null&quot;：std::string&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-5" vertex="1">
          <mxGeometry y="50" width="770" height="130" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-4" value="&lt;div&gt;存储配置文件中配置集数据的成员，通过struct存储&lt;/div&gt;&lt;div&gt;+&amp;nbsp;common_config：CommonConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;通用参数配置集&lt;br&gt;&lt;/div&gt;+ engine_config：PlanningEngineConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划引擎配置集？目前没有json文件&lt;div&gt;+&amp;nbsp;planning_core_config：PlanningCoreConfig&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划算法配置集&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-5" vertex="1">
          <mxGeometry y="180" width="770" height="90" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="FUmzsK_Zkm4qFQnXREs5-5" vertex="1">
          <mxGeometry y="270" width="770" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-9" value="+ Instance()&amp;nbsp;&lt;div&gt;{&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;    static LPPlanningConfig instance;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    return &amp;amp;instance;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  }：&lt;span style=&quot;background-color: initial;&quot;&gt;static LPPlanningConfig*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;通过静态变量创建单例，并返回指向该单例的指针&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;注意声明单例时需删除默认构造及赋值&quot;=&quot;操作，从而保证只能通过单例函数获取实例化对象&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-5" vertex="1">
          <mxGeometry y="278" width="770" height="150" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-8" value="+&amp;nbsp;load_config()：bool&lt;div&gt;配置加载函数&lt;/div&gt;&lt;div&gt;1.加载通用参数配置集&lt;/div&gt;&lt;div&gt;初始化文件路径common_param_config_path，将json文件中的配置参数写入成员common_config&lt;/div&gt;&lt;div&gt;2.加载规划算法参数配置集&lt;/div&gt;&lt;div&gt;初始化文件路径planning_core_config_path，将json文件中的配置参数写入成员&lt;span style=&quot;background-color: initial;&quot;&gt;planning_core_config&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3.加载整车参数配置集&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;初始化文件路径vehicle_parameter_config_path，将json文件中的配置参数加载进整车参数类VehicleParam单例，调用VehicleParam的加载函数load_vehicle_param实现&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-5" vertex="1">
          <mxGeometry y="428" width="770" height="172" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-12" value="VehicleParam&lt;div&gt;整车参数单例类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1970" y="-1020" width="530" height="200" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-13" value="+ vehicle_param_：VehicleParamStruct&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;整车参数集" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-12" vertex="1">
          <mxGeometry y="40" width="530" height="26" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-14" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="FUmzsK_Zkm4qFQnXREs5-12" vertex="1">
          <mxGeometry y="66" width="530" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-15" value="+ Instance()：static VehicleParam*&lt;div&gt;单例函数&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;注意声明单例时需删除默认构造及赋值&quot;=&quot;操作，从而保证只能通过单例函数获取实例化对象&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;通过宏定义DECLARE_SINGLETON_PLANNING(VehicleParam)完成上述需求的打包&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-12" vertex="1">
          <mxGeometry y="74" width="530" height="76" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-17" value="+ load_vehicle_param(const VehicleParamStruct&amp;amp; _source)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;vehicle_param_ = _source;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}：void&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;整车参数加载函数，将输入source赋值写入成员vehicle_param_&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="FUmzsK_Zkm4qFQnXREs5-12" vertex="1">
          <mxGeometry y="150" width="530" height="50" as="geometry" />
        </mxCell>
        <mxCell id="FUmzsK_Zkm4qFQnXREs5-16" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;" parent="1" source="FUmzsK_Zkm4qFQnXREs5-5" target="FUmzsK_Zkm4qFQnXREs5-12" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="2130" y="-650" as="sourcePoint" />
            <mxPoint x="2290" y="-650" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-1" value="&lt;span style=&quot;font-size: 30px;&quot;&gt;&lt;b&gt;配置相关&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;pointerEvents=0;recursiveResize=0;container=0;collapsible=0;width=570;strokeWidth=4;height=100;" parent="1" vertex="1">
          <mxGeometry x="1080" y="-1240" width="1550" height="1220" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-2" value="PlanningEngine&lt;div&gt;规划器类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2100" y="690" width="740" height="322" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-18" value="-&amp;nbsp;last_planning_info_：LastPlanningInfo&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;存储的上一帧规划数据" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="U4T7va92KtkVjSwoT38k-2">
          <mxGeometry y="40" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9aJsHFf6a2A3ecVcsjcg-3" value="- world_model_ = nullptr：std::shared_ptr&amp;lt;WorldModel&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;世界模型" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="66" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-3" value="-&amp;nbsp;pilot_state_machine_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;PilotStateMachine&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划状态机" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="92" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9aJsHFf6a2A3ecVcsjcg-4" value="-&amp;nbsp;planning_origin_state_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;PlanningOriginState&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划初始状态" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="118" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="9aJsHFf6a2A3ecVcsjcg-2" value="-&amp;nbsp;planning_engine_input_mgr_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;PlanningEngineInputMgr&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划引擎输入管理器" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="144" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-19" value="+&amp;nbsp;engine_counter_ = 0:&amp;nbsp;uint64_t" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="U4T7va92KtkVjSwoT38k-2">
          <mxGeometry y="170" width="740" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="196" width="740" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-5" value="+&amp;nbsp;PlanningEngine(LPPlanningConfig* config)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// in，规划配置参数&lt;div&gt;构造函数&lt;/div&gt;&lt;div&gt;实例化WorldModel类，并将指针赋给成员world_model_&lt;/div&gt;&lt;div&gt;实例化PilotStateMachine类，并将指针赋给成员&lt;span style=&quot;background-color: initial;&quot;&gt;pilot_state_machine_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;实例化PlanningOriginState类，并将指针赋给成员&lt;span style=&quot;background-color: initial;&quot;&gt;planning_origin_state_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;实例化PlanningEngineInputMgr类，并将指针赋给成员&lt;span style=&quot;background-color: initial;&quot;&gt;planning_engine_input_mgr_&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-2" vertex="1">
          <mxGeometry y="204" width="740" height="118" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-6" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="voPVXGpHxfX2aqVi8FJQ-2" target="U4T7va92KtkVjSwoT38k-2" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="1830" y="1190" as="sourcePoint" />
            <mxPoint x="1990" y="1190" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-7" value="TaskConfig&lt;div&gt;任务配置类，task_context.h&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1970" y="-790" width="580" height="384" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-8" value="+&amp;nbsp;typedef enum&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;{&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LATERAL_DECIDER_PLANNER = 0,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LATERAL_MOTION_PLANNER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LONGITUDINAL_DECIDER_PLANNER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LONGITUDINAL_MOTION_PLANNER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;BACKUP_PATH_PLANNER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;OBSTACLE_DECIDER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LANE_CHANGE_DECIDER_TASK,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LATERAL_LONGITUDINAL_DECIDER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LATERAL_LONGITUDINAL_PLANNER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;OSP_MANAGER_TASK,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DLP_LATERAL_DECIDER,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DLP_LONGITUDINAL_DECIDER&lt;/div&gt;&lt;div style=&quot;&quot;&gt;  &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}：TaskType&lt;/div&gt;&lt;div style=&quot;&quot;&gt;类型成员，任务类型&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-7" vertex="1">
          <mxGeometry y="40" width="580" height="310" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-7" vertex="1">
          <mxGeometry y="350" width="580" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-10" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-7" vertex="1">
          <mxGeometry y="358" width="580" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-11" value="WorldModel&lt;div&gt;世界模型&lt;/div&gt;&lt;div&gt;负责将上游输入转换成内部类型的接口类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3470" y="-1206" width="800" height="440" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-31" value="&lt;div&gt;数据类成员&lt;/div&gt;&lt;div&gt;-&amp;nbsp;vehicle_info_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;VehicleInfo&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车信息数据集&lt;br&gt;&lt;/div&gt;-&amp;nbsp;planning_request_ = nullptr：std::shared_ptr&amp;lt;PlanningRequest&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划请求数据集&lt;div&gt;-&amp;nbsp;localization_info_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;LocalizationData&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位信息数据集&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;fusion_obstacles_info_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;Perception&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物感知融合信息数据集&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;obstacle_prediction_info_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;Prediction&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物预测信息数据集&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-11" vertex="1">
          <mxGeometry y="60" width="800" height="110" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-17" value="&lt;div&gt;管理类成员&lt;/div&gt;- obstacle_manager_ = nullptr：std::shared_ptr&amp;lt;ObstacleManager&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;障碍物处理类，提供操作障碍物相关方法&lt;div&gt;-&amp;nbsp;pdp_trajectry_mgr_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;PDPTrajectryManager&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;pdp轨迹处理类，提供操作pdp轨迹的相关方法&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;processed_map_info_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;ProcessedMap&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;处理后的地图类，提供地图数据和操作地图数据的相关方法&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;virtual_lane_manager_&amp;nbsp;= nullptr：std::shared_ptr&amp;lt;VirtualLaneManager&amp;gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;虚拟车道处理类，提供操作车道数据的相关方法&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-11" vertex="1">
          <mxGeometry y="170" width="800" height="90" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-11" vertex="1">
          <mxGeometry y="260" width="800" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-14" value="+ WorldModel()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造函数&lt;div&gt;1.对数据类成员planning_request_、localization_info_、obstacle_prediction_info、vehicle_info、fusion_obstacles_info_进行默认初始化&lt;/div&gt;&lt;div&gt;2.对管理类成员&lt;span style=&quot;background-color: initial;&quot;&gt;pdp_trajectry_mgr_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;processed_map_info_、&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;obstacle_manager_进行默认初始化&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;缺少了对virtual_lane_manager_的默认初始化，不过上面这些默认初始化都没用，真正有效的初始化都在update函数中，update函数在进PlanningCore的ProcessOnce最开始会调用update函数全部更新上面的成员&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-11" vertex="1">
          <mxGeometry y="268" width="800" height="172" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-15" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-2" target="U4T7va92KtkVjSwoT38k-11" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="2890" y="770" as="sourcePoint" />
            <mxPoint x="2960" y="490" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-24" value="ObstacleManager&lt;div&gt;障碍物处理类&lt;/div&gt;&lt;div&gt;提供操作障碍物的相关方法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=62;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4370" y="-699" width="360" height="122" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-25" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-24" vertex="1">
          <mxGeometry y="62" width="360" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-24" vertex="1">
          <mxGeometry y="88" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-27" value="+&amp;nbsp;ObstacleManager() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-24" vertex="1">
          <mxGeometry y="96" width="360" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-28" value="PDPTrajectoryManager&lt;div&gt;pdp轨迹处理类&lt;/div&gt;&lt;div&gt;提供操作pdp轨迹的相关方法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4930" y="-708" width="350" height="120" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-29" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-28" vertex="1">
          <mxGeometry y="60" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-30" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-28" vertex="1">
          <mxGeometry y="86" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-31" value="+&amp;nbsp;PDPTrajectryManager() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-28" vertex="1">
          <mxGeometry y="94" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-32" value="ProcessedMap&lt;div&gt;处理后的地图类&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: left;&quot;&gt;提供地图数据和操作地图数据的相关方法&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5520" y="-708" width="680" height="140" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-33" value="- lanes_：std::shared_ptr&amp;lt;std::vector&amp;lt;std::shared_ptr&amp;lt;Lane&amp;gt;&amp;gt;&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-32" vertex="1">
          <mxGeometry y="60" width="680" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-34" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-32" vertex="1">
          <mxGeometry y="86" width="680" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-35" value="+&amp;nbsp;ProcessedMap()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造&lt;div&gt;调用车道类Lane的默认构造，写入成员lanes_&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-32" vertex="1">
          <mxGeometry y="94" width="680" height="46" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-36" value="VirtualLaneManager&lt;div&gt;虚拟车道处理类&lt;/div&gt;&lt;div&gt;提供车道数据的相关方法&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=60;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="6350" y="-708" width="390" height="120" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-37" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-36" vertex="1">
          <mxGeometry y="60" width="390" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-38" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-36" vertex="1">
          <mxGeometry y="86" width="390" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-39" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-36" vertex="1">
          <mxGeometry y="94" width="390" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-40" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="U4T7va92KtkVjSwoT38k-24" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4370" y="-1336" as="sourcePoint" />
            <mxPoint x="4530" y="-1336" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-41" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="U4T7va92KtkVjSwoT38k-28" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4270" y="-756" as="sourcePoint" />
            <mxPoint x="4430" y="-756" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-43" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="U4T7va92KtkVjSwoT38k-36" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4290" y="-1006" as="sourcePoint" />
            <mxPoint x="4575" y="-976" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-45" value="Lane&lt;div&gt;车道类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=46;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5710" y="-438" width="310" height="106" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-46" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-45" vertex="1">
          <mxGeometry y="46" width="310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-47" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="U4T7va92KtkVjSwoT38k-45" vertex="1">
          <mxGeometry y="72" width="310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-48" value="+&amp;nbsp;Lane() = default&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;默认构造" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="U4T7va92KtkVjSwoT38k-45" vertex="1">
          <mxGeometry y="80" width="310" height="26" as="geometry" />
        </mxCell>
        <mxCell id="U4T7va92KtkVjSwoT38k-49" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-32" target="U4T7va92KtkVjSwoT38k-45" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="5915" y="-936" as="sourcePoint" />
            <mxPoint x="6075" y="-936" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-3" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;" parent="1" source="voPVXGpHxfX2aqVi8FJQ-2" target="FUmzsK_Zkm4qFQnXREs5-5" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1690" y="370" as="sourcePoint" />
            <mxPoint x="2030" y="340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-10" value="SimulationMode&lt;div&gt;仿真开关行为类&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1570" y="-300" width="410" height="150" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-11" value="-&amp;nbsp;static replay_mode_：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;仿真开关，true启动仿真" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-10" vertex="1">
          <mxGeometry y="40" width="410" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="TiBhon321B_4-09MWuut-10" vertex="1">
          <mxGeometry y="66" width="410" height="8" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-14" value="&lt;div&gt;对外API&lt;/div&gt;+&amp;nbsp;static set_replay_mode(bool replay_mode)：void&lt;div&gt;+&amp;nbsp;static get_replay_mode()：bool&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-10" vertex="1">
          <mxGeometry y="74" width="410" height="76" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-15" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;fontSize=12;" parent="1" source="voPVXGpHxfX2aqVi8FJQ-2" target="TiBhon321B_4-09MWuut-10" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1800" y="550" as="sourcePoint" />
            <mxPoint x="1850" y="-420" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-16" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PilotStateMachine&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;规划状态机&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4120" y="157" width="450" height="110" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-17" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-16" vertex="1">
          <mxGeometry y="50" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="TiBhon321B_4-09MWuut-16" vertex="1">
          <mxGeometry y="76" width="450" height="8" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-19" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-16" vertex="1">
          <mxGeometry y="84" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-20" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;PlanningOriginState&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;规划初始状态&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2970" y="1070" width="450" height="110" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-21" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-20" vertex="1">
          <mxGeometry y="50" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-22" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="TiBhon321B_4-09MWuut-20" vertex="1">
          <mxGeometry y="76" width="450" height="8" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-23" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-20" vertex="1">
          <mxGeometry y="84" width="450" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-24" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;PlanningEngineInputMgr&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;规划输入管理器&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3600" y="1070" width="520" height="110" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-25" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-24" vertex="1">
          <mxGeometry y="50" width="520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="TiBhon321B_4-09MWuut-24" vertex="1">
          <mxGeometry y="76" width="520" height="8" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-27" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="TiBhon321B_4-09MWuut-24" vertex="1">
          <mxGeometry y="84" width="520" height="26" as="geometry" />
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-28" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-2" target="TiBhon321B_4-09MWuut-16" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="2920" y="1140" as="sourcePoint" />
            <mxPoint x="3080" y="1140" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-29" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-2" target="TiBhon321B_4-09MWuut-20" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="3110" y="1120" as="sourcePoint" />
            <mxPoint x="3270" y="1120" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-30" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-2" target="TiBhon321B_4-09MWuut-24" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="2820" y="1340" as="sourcePoint" />
            <mxPoint x="2980" y="1340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="TiBhon321B_4-09MWuut-33" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="U4T7va92KtkVjSwoT38k-32" edge="1">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4410" y="-488" as="sourcePoint" />
            <mxPoint x="5034" y="-283" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Vmca9h71mt0fR5U2RYKd-5" value="&lt;div style=&quot;line-height: 19px;&quot;&gt;struct PlanningRequest&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;存储规划器是否启动所依赖的数据&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="5270" y="-1760" width="760" height="330" as="geometry" />
        </mxCell>
        <mxCell id="Vmca9h71mt0fR5U2RYKd-6" value="&lt;div style=&quot;line-height: 130%;&quot;&gt;&lt;div&gt;+ planning_start_time = -100000.0：&lt;span style=&quot;background-color: initial;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;规划起始时刻，ns&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ cnap_active = false：&lt;span style=&quot;background-color: initial;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;功能是否激活&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ last_func_active_signal = 0：&lt;span style=&quot;background-color: initial;&quot;&gt;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;上一帧的拨杆状态，0不拨1单拨(激活纵向)3双拨(激活横纵向)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ vehicle_status_ready = false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆状态是否ready，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;检查eps、esc、power(动力系统)、bcm(车门安全带)的状态是否满足功能开启的前提条件&lt;/div&gt;&lt;div&gt;+ chassis_status_ready&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘状态是否ready，检查油门、刹车、转向这些自动驾驶执行器是否可用&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 19px;&quot;&gt;&lt;br&gt;&lt;/div&gt;planning模块输入是否有效&lt;br&gt;&lt;div&gt;+ chassis_input_valid&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;底盘信息输入是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ localization_input_valid&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;定位信息输入是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ perception_input_valid&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;感知融合输入是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ prediction_input_valid&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;预测信息输入是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ sdmap_input_valid&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;= false：bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;地图信息输入是否有效&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ manual_change_speed_value = 60 / 3.6：double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;驾驶员设定巡航车速，m/s&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Vmca9h71mt0fR5U2RYKd-5" vertex="1">
          <mxGeometry y="50" width="760" height="280" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-1" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="Vmca9h71mt0fR5U2RYKd-5">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4390" y="-1098" as="sourcePoint" />
            <mxPoint x="4550" y="-1098" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-2" value="struct&amp;nbsp;LocalizationData&lt;div&gt;planning接收的定位模块输入，定位模块赋值确定自车在静态坐标系下的坐标&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="6100" y="-1554" width="590" height="140" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-3" value="+&amp;nbsp;header:&amp;nbsp;Header&lt;span style=&quot;white-space: pre; line-height: 130%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 130%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 130%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 130%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 130%;&quot;&gt;&#x9;&lt;/span&gt;帧头，包含定位填入输出数据时的运行帧数和此时的时间戳&lt;div style=&quot;line-height: 130%;&quot;&gt;+&amp;nbsp;localization_glb:&amp;nbsp;GlbLocalization&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;绝对定位，使用ENU坐标系作为静态坐标系&lt;/div&gt;&lt;div style=&quot;line-height: 130%;&quot;&gt;+&amp;nbsp;localization_rel:&amp;nbsp;RelLocalization&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对定位，&lt;/div&gt;&lt;div style=&quot;line-height: 130%;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;使用Local坐标系(上电t0时刻的自车坐标系存储下来)作为静态坐标系&lt;/div&gt;&lt;div style=&quot;line-height: 130%;&quot;&gt;+&amp;nbsp;latency_statu:&amp;nbsp;LatencyStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;耗时信息，包含实际耗时和规定的周期时间？，单位ms&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="4yjO0uYisQER-DYws8W7-2">
          <mxGeometry y="40" width="590" height="100" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-5" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="4yjO0uYisQER-DYws8W7-2">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="5060" y="-1046" as="sourcePoint" />
            <mxPoint x="5560" y="-1328" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-6" value="struct&amp;nbsp;Perception&lt;div&gt;planning接收的感知融合模块输入，感知融合模块负责获取自车周围环境中障碍物及车道线的实时位置信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="6800" y="-1930" width="700" height="520" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-7" value="+&amp;nbsp;header:&amp;nbsp;Header&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; line-height: 140%;&quot;&gt;&#x9;&lt;/span&gt;帧头，包含定位填入输出数据时的运行帧数和此时的时间戳&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;lumin_intens:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;光照强度&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;obstacle_num:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效障碍物个数，最大64个目标&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;obstacles:&amp;nbsp;Obstacle&lt;span style=&quot;background-color: initial;&quot;&gt;[64]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;融合后的障碍物信息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;is_lane_merge:&amp;nbsp;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;？&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;static_objects_timestamp_ns:&amp;nbsp;uint64_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;静态目标时间戳，以纳秒为单位&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;static_objects_num:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;静态障碍物个数，最大64个目标&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;static_objects_line_num:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;线状静态障碍物个数，最大8个目标&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;static_objects:&amp;nbsp;StaticObstacle&lt;span style=&quot;background-color: initial;&quot;&gt;[64]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;静态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;static_objects_line:&amp;nbsp;StaticObjectsLine&lt;span style=&quot;background-color: initial;&quot;&gt;[8]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;线状静态障碍物&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;traffic_light_timestamp_ns:&amp;nbsp;uint64_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;交通灯时间戳，以纳秒为单位&lt;div&gt;+&amp;nbsp;traffic_light_num:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效道路交通灯组个数，最大5组&lt;/div&gt;&lt;div&gt;+&amp;nbsp;traffic_light:&amp;nbsp;TrafficLight&lt;span style=&quot;background-color: initial;&quot;&gt;[5]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;道路级交通灯&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lane_turn_num:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效通行方向标识个数&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lane_traffic_light_num:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效车道级交通灯组个数，最大10组&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lane_traffic_light:&amp;nbsp;LaneTrafficLight&lt;span style=&quot;background-color: initial;&quot;&gt;[10]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;车道级交通灯状态&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;fusion_error_code:&amp;nbsp;uint64_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;？&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lcc_confidence:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;？&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lcc_exit_road:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;LCC安全退出的路口状态&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;0：无需接管道路，1：弯道接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2：路口，3：车道变少接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4：车道变多接管道路，5：驶入匝道接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;6：驶出匝道接管道路，7：车道交叉接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;8：S弯接管道路，9：车道线杂乱接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;10：施工路段接管道路，11：平路车道线消失接管道路，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;12：坡道盲区车道线消失接管道路，13：其他LCC_exit接管道路场景&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;div&gt;+&amp;nbsp;latency_status:&amp;nbsp;LatencyStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;耗时信息，包含实际耗时和规定的周期时间？，单位ms&lt;/div&gt;&lt;div&gt;+&amp;nbsp;module_status:&amp;nbsp;ModuleStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;错误状态，错误代码，错误原因&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="4yjO0uYisQER-DYws8W7-6">
          <mxGeometry y="40" width="700" height="480" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-8" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="4yjO0uYisQER-DYws8W7-6">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4710" y="-896" as="sourcePoint" />
            <mxPoint x="5955" y="-1368" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-9" value="struct Prediction&lt;div&gt;planning模块接收的预测模块的输入&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="7580" y="-1590" width="540" height="160" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-10" value="+&amp;nbsp;header:&amp;nbsp;Header&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;帧头，包含定位填入输出数据时的运行帧数和此时的时间戳&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;obstacles_num:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效目标个数，最大64个&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;obstacles:&amp;nbsp;PredictionObstacle&lt;span style=&quot;background-color: initial;&quot;&gt;[64]&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;预测后的目标信息&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;latency_status:&amp;nbsp;LatencyStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;耗时信息，包含实际耗时和规定的周期时间？，单位ms&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;module_status:&amp;nbsp;ModuleStatus&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;错误状态，错误代码，错误原因&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="4yjO0uYisQER-DYws8W7-9">
          <mxGeometry y="40" width="540" height="120" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-11" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="4yjO0uYisQER-DYws8W7-9">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4600" y="-916" as="sourcePoint" />
            <mxPoint x="6600" y="-1178" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-12" value="struct&amp;nbsp;PredictionObstacle&lt;div&gt;预测障碍物信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="7645" y="-1930" width="630" height="190" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-13" value="+&amp;nbsp;id:&amp;nbsp;uint32_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;id号，与感知障碍物perception_obstacle中的id号保持一致&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;is_predicted:&amp;nbsp;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;该障碍物是否进行了预测&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;is_cutin:&amp;nbsp;bool&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;是否cutin&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;level:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;目标分级，1: 未知 1: 忽略 2: 普通 3: 高度关注，&lt;span style=&quot;background-color: rgb(204, 0, 0);&quot;&gt;还有别的coding待补充&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;trajectory_num:&amp;nbsp;uint8_t&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有效轨迹数，最大3条&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;trajectory:&amp;nbsp;PredictionTrajectory[3]&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;预测轨迹&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;perception_obstacle:&amp;nbsp;Obstacle&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(153, 76, 0);&quot;&gt;透传感知障碍物信息&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="4yjO0uYisQER-DYws8W7-12">
          <mxGeometry y="50" width="630" height="140" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-14" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="4yjO0uYisQER-DYws8W7-9" target="4yjO0uYisQER-DYws8W7-12">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="7780" y="-1670" as="sourcePoint" />
            <mxPoint x="7940" y="-1670" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-15" value="struct&amp;nbsp;VehicleInfo&lt;div&gt;自车信息&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="4440" y="-1940" width="760" height="510" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-16" value="+&amp;nbsp;timestamp: double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;时间戳，取定位数据的时间戳，ms&lt;br&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+ x:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对定位，local坐标系中自车后轴中心&lt;span style=&quot;background-color: initial;&quot;&gt;x坐标&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+ y:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;相对定位，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;自车后轴中心&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;y坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+ z:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;相对定位，&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;自车后轴中心z&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;坐标&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;heading:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对定位，&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中自车绕z轴角度，°&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;xy坐标系中与x轴正方向的夹角&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;heading_rad:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;相对定位，&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中自车&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;绕z轴角度&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;，rad&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;xy坐标系中&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;与x轴正方向的夹角&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;div&gt;+&amp;nbsp;linear_velocity:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车线速度，底盘传来的车速，m/s&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;angular_velocity:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车横摆角速度，local坐标系中自车绕z轴角速度，rad/s&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;假设adc在z轴方向的位置不变或者变化不大，&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;此时自车绕local坐标系的z轴和绕车辆坐标系的z轴的两种角速度相差不大&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;linear_acceleration:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车纵向加速度，底盘传来的纵向加速度，m/s2&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;lon_acceleration:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;未使用&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;+&amp;nbsp;lat_acceleration:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;自车横向加速度，底盘传来的横向加速度，m/s2&lt;br&gt;&lt;div&gt;+&amp;nbsp;roll:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;local坐标系中自车绕x轴的角度，yz坐标系中与y轴正方向的夹角，°&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;不是侧倾角，侧倾角是绕车辆坐标系x轴角度&lt;/div&gt;&lt;div&gt;+&amp;nbsp;pitch:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中自车绕y轴的角度，xz坐标系中与x轴正方向的夹角，°&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;不是俯仰角，俯仰角是绕车辆坐标系y轴角度&lt;/div&gt;&lt;div&gt;+&amp;nbsp;yaw:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;local坐标系中自车绕z轴的角度，xy坐标系中与x轴正方向的夹角，°&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;不是横摆角，横摆角是绕车辆坐标系z轴角度，在车辆坐标系的&lt;span style=&quot;background-color: initial;&quot;&gt;xy平面中与x轴正方向的夹角&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;yaw_rad:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;同上，单位是rad&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;div&gt;+&amp;nbsp;gear:&amp;nbsp;GearPosition&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;档位，P、D、N、R&lt;/div&gt;&lt;div&gt;+&amp;nbsp;kappa:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;车辆当前位置行驶轨迹的曲率&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;steer_angle:&amp;nbsp;double&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;未使用&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;driving_mode:&amp;nbsp;Chassis_DrivingMode&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;驾驶模式，自驾、人驾、接管&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="4yjO0uYisQER-DYws8W7-15">
          <mxGeometry y="40" width="760" height="470" as="geometry" />
        </mxCell>
        <mxCell id="4yjO0uYisQER-DYws8W7-17" value="1" style="endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;fontSize=12;curved=1;" edge="1" parent="1" source="U4T7va92KtkVjSwoT38k-11" target="4yjO0uYisQER-DYws8W7-15">
          <mxGeometry x="-1" y="3" relative="1" as="geometry">
            <mxPoint x="4320" y="-1102" as="sourcePoint" />
            <mxPoint x="5410" y="-1404" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="DLSerFrCw_XldU3xwm3O" name="第 5 页">
    <mxGraphModel dx="1147" dy="634" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="0c7CmrppT_asVpM1fOJv-1" value="" style="endArrow=classic;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="370" y="660" as="sourcePoint" />
            <mxPoint x="370" y="310" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-4" value="t&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0c7CmrppT_asVpM1fOJv-1">
          <mxGeometry x="0.501" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-2" value="" style="endArrow=classic;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="370" y="660" as="sourcePoint" />
            <mxPoint x="810" y="660" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-3" value="s" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0c7CmrppT_asVpM1fOJv-2">
          <mxGeometry x="0.4091" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-5" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="440" y="660" as="sourcePoint" />
            <mxPoint x="590" y="335" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-9" value="s1(t)" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0c7CmrppT_asVpM1fOJv-5">
          <mxGeometry x="0.7846" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-6" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="600" y="660" as="sourcePoint" />
            <mxPoint x="840" y="350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-10" value="s2(t)" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0c7CmrppT_asVpM1fOJv-6">
          <mxGeometry x="0.6982" y="-4" relative="1" as="geometry">
            <mxPoint y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-7" value="" style="curved=1;endArrow=classic;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="490" y="660" as="sourcePoint" />
            <mxPoint x="740" y="350" as="targetPoint" />
            <Array as="points">
              <mxPoint x="590" y="600" />
              <mxPoint x="560" y="490" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-11" value="s(t)" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0c7CmrppT_asVpM1fOJv-7">
          <mxGeometry x="0.7512" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0c7CmrppT_asVpM1fOJv-8" value="s1(t)&amp;lt;s(t)&amp;lt;s2(t)" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="160" width="120" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
